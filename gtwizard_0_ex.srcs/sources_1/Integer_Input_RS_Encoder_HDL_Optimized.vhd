-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\commrshdl\Integer_Input_RS_Encoder_HDL_Optimized.vhd
-- Created: 2024-04-06 12:58:06
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Integer_Input_RS_Encoder_HDL_Optimized
-- Source Path: commrshdl/RS Encoder/Integer-Input RS Encoder HDL Optimized
-- Hierarchy Level: 1
-- Model version: 9.5
-- 
-- Reed-Solomon Encoder Block
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.RS_Encoder_pkg.ALL;

ENTITY Integer_Input_RS_Encoder_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_in :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Integer_Input_RS_Encoder_HDL_Optimized_start :   IN    std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_end :   IN    std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_datavalid :   IN    std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_out :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        Integer_Input_RS_Encoder_HDL_Optimized_startout :   OUT   std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_endout :   OUT   std_logic;
        Integer_Input_RS_Encoder_HDL_Optimized_datavalidout :   OUT   std_logic
        );
END Integer_Input_RS_Encoder_HDL_Optimized;


ARCHITECTURE rtl OF Integer_Input_RS_Encoder_HDL_Optimized IS

  -- Constants
  CONSTANT gftable_data                   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#12#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#69#, 8), to_unsigned(16#24#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#85#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#08#, 8), to_unsigned(16#45#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#92#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#80#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#21#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#10#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#74#, 8), to_unsigned(16#39#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#87#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#26#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#42#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#82#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#47#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#15#, 8), to_unsigned(16#58#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#56#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#32#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#93#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#49#, 8), to_unsigned(16#04#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#28#, 8), to_unsigned(16#65#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#37#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#91#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#54#, 8), to_unsigned(16#19#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#06#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#03#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#67#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#35#, 8), to_unsigned(16#78#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#94#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6A#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_2                 : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#75#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#89#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#40#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#11#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#56#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#07#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#41#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#80#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#57#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#22#, 8), to_unsigned(16#06#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#25#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#74#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#88#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#33#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#62#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#43#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#55#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#04#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#76#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#31#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#44#, 8), to_unsigned(16#60#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#77#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#AF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#30#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#61#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#42#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#83#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#13#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#54#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#05#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4D#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_4                 : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#77#, 8), to_unsigned(16#21#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#35#, 8), to_unsigned(16#63#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#70#, 8), to_unsigned(16#26#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D5#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#29#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#20#, 8), to_unsigned(16#76#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#65#, 8), to_unsigned(16#33#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#27#, 8), to_unsigned(16#71#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#62#, 8), to_unsigned(16#34#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#87#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#80#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#E4#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#48#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#04#, 8), to_unsigned(16#52#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#89#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#41#, 8), to_unsigned(16#17#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#03#, 8), to_unsigned(16#55#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#BC#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#46#, 8), to_unsigned(16#10#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#16#, 8), to_unsigned(16#40#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#53#, 8), to_unsigned(16#05#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#11#, 8), to_unsigned(16#47#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#54#, 8), to_unsigned(16#02#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#18#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#95#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#39#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#81#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#92#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3E#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_6                 : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#51#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#55#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#66#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#99#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#08#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#18#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#76#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#45#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#41#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#72#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#61#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#52#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#56#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#65#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#38#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#28#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#75#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#46#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#42#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#71#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#06#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#02#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#97#, 8), to_unsigned(16#31#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#68#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#BC#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#78#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#87#, 8), to_unsigned(16#21#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#12#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#16#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#25#, 8), to_unsigned(16#83#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#90#, 8), to_unsigned(16#36#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#05#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#01#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#32#, 8), to_unsigned(16#94#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#58#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#48#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#22#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#11#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#15#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#80#, 8), to_unsigned(16#26#, 8), to_unsigned(16#44#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_8                 : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#56#, 8), to_unsigned(16#64#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#49#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#13#, 8), to_unsigned(16#21#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#92#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#14#, 8), to_unsigned(16#26#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#95#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#51#, 8), to_unsigned(16#63#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#99#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#18#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#61#, 8), to_unsigned(16#53#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#97#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#16#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#58#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#23#, 8), to_unsigned(16#11#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#66#, 8), to_unsigned(16#54#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#06#, 8), to_unsigned(16#34#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#87#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#43#, 8), to_unsigned(16#71#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#38#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#44#, 8), to_unsigned(16#76#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#01#, 8), to_unsigned(16#33#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#80#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#48#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#AF#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#78#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#31#, 8), to_unsigned(16#03#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#74#, 8), to_unsigned(16#46#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#22#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#08#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#89#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#73#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#85#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#36#, 8), to_unsigned(16#04#, 8), to_unsigned(16#E1#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_10                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#29#, 8), to_unsigned(16#52#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#07#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#83#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#27#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#72#, 8), to_unsigned(16#09#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#60#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#35#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#91#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#15#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#40#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#64#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#31#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#11#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#44#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#89#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#56#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#03#, 8), to_unsigned(16#78#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#58#, 8), to_unsigned(16#23#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#87#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#76#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#10#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#45#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#65#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#94#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#30#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#59#, 8), to_unsigned(16#22#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#86#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#77#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#88#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#57#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#02#, 8), to_unsigned(16#79#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#26#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#73#, 8), to_unsigned(16#08#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#28#, 8), to_unsigned(16#53#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#06#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#14#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#41#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#61#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#34#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#90#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#C2#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_12                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#41#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#58#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#73#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#25#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#56#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#89#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#90#, 8), to_unsigned(16#53#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#78#, 8), to_unsigned(16#39#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#61#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#37#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#05#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#24#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#72#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#59#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#83#, 8), to_unsigned(16#40#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#04#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#60#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#79#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#52#, 8), to_unsigned(16#91#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#46#, 8), to_unsigned(16#85#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#74#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#22#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#10#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#92#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#09#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#97#, 8), to_unsigned(16#54#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#66#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#29#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#30#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#02#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#08#, 8), to_unsigned(16#49#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#11#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#23#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#75#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#84#, 8), to_unsigned(16#47#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#03#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#31#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#28#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#55#, 8), to_unsigned(16#96#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#CE#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_14                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#15#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#64#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#41#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#30#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#86#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#34#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#98#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#AF#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#33#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#58#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#67#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#63#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#12#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#49#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#37#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#22#, 8), to_unsigned(16#81#, 8), to_unsigned(16#79#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#46#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#08#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#43#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#18#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#56#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#91#, 8), to_unsigned(16#69#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#27#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#02#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#73#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#39#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#48#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#06#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#52#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#01#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#70#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#55#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#96#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#20#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#44#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#51#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#74#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#05#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#E8#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_16                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_18                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#66#, 8), to_unsigned(16#44#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#13#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#49#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#53#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#04#, 8), to_unsigned(16#26#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#97#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#45#, 8), to_unsigned(16#67#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#30#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#56#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#08#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#BC#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#27#, 8), to_unsigned(16#05#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#87#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#55#, 8), to_unsigned(16#77#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#58#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#20#, 8), to_unsigned(16#02#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#18#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#37#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#76#, 8), to_unsigned(16#54#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#86#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#B7#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#59#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#03#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D5#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#43#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#19#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#14#, 8), to_unsigned(16#36#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D8#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_20                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#17#, 8), to_unsigned(16#79#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#74#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#40#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#23#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#39#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#80#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#28#, 8), to_unsigned(16#46#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#25#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#11#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#69#, 8), to_unsigned(16#07#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#50#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#33#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#96#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#22#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#56#, 8), to_unsigned(16#38#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#35#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#01#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#62#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#92#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#20#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#85#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#88#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#14#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#19#, 8), to_unsigned(16#77#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#12#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#71#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#83#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#45#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#26#, 8), to_unsigned(16#48#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#53#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#30#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#44#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#98#, 8), to_unsigned(16#49#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#04#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#67#, 8), to_unsigned(16#09#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#02#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#93#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#55#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#58#, 8), to_unsigned(16#36#, 8), to_unsigned(16#E7#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_22                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#85#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#67#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#21#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#36#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#58#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#99#, 8), to_unsigned(16#55#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#83#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#61#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#AF#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#27#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#04#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#09#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#13#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#35#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#38#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#22#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#01#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#16#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#50#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#47#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#64#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#73#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#33#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#10#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#43#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#41#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#62#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#EA#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_24                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#28#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#78#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#37#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#83#, 8), to_unsigned(16#59#, 8), to_unsigned(16#E4#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#97#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#02#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#16#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#52#, 8), to_unsigned(16#88#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#09#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#54#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#04#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#10#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#85#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#25#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#31#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#49#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#75#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#45#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#51#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#80#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#94#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#01#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#15#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#20#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#34#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#64#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#70#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#39#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#62#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#26#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#32#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#07#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#13#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#86#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#92#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#18#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#99#, 8), to_unsigned(16#43#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#30#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_26                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#68#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#79#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#39#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#54#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#36#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#33#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#27#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#22#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#40#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#72#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#10#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#15#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#01#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#66#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#91#, 8), to_unsigned(16#29#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#44#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#38#, 8), to_unsigned(16#80#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#85#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#56#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#53#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#31#, 8), to_unsigned(16#89#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#34#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#98#, 8), to_unsigned(16#20#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#25#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#47#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#42#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#92#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#08#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#19#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#49#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#93#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#87#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#58#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#70#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#17#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#03#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#61#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#64#, 8), to_unsigned(16#0C#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_28                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#39#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#65#, 8), to_unsigned(16#72#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#51#, 8), to_unsigned(16#46#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#96#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#84#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#60#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#54#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#49#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#15#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#21#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#99#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#86#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#07#, 8), to_unsigned(16#10#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#24#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#56#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#88#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#13#, 8), to_unsigned(16#04#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#30#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#58#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#69#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#01#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#22#, 8), to_unsigned(16#35#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#74#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#40#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#28#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#19#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#66#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#45#, 8), to_unsigned(16#52#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#95#, 8), to_unsigned(16#82#, 8), to_unsigned(16#8F#, 8));  -- ufix8 [256]
  CONSTANT gftable_data_30                : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#12#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#69#, 8), to_unsigned(16#24#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#85#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#08#, 8), to_unsigned(16#45#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#92#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#80#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#21#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#10#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#74#, 8), to_unsigned(16#39#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#87#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#26#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#42#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#82#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#47#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#15#, 8), to_unsigned(16#58#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#56#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#32#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#93#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#49#, 8), to_unsigned(16#04#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#28#, 8), to_unsigned(16#65#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#37#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#91#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#54#, 8), to_unsigned(16#19#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#06#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#03#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#67#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#35#, 8), to_unsigned(16#78#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#94#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6A#, 8));  -- ufix8 [256]

  -- Signals
  SIGNAL startin_valid                    : std_logic;  -- ufix1
  SIGNAL endin_valid                      : std_logic;  -- ufix1
  SIGNAL inpacket                         : std_logic;  -- ufix1
  SIGNAL endin_packet                     : std_logic;  -- ufix1
  SIGNAL notendin                         : std_logic;  -- ufix1
  SIGNAL notdonepacket                    : std_logic;  -- ufix1
  SIGNAL inpacketnext                     : std_logic;  -- ufix1
  SIGNAL inpacketgate                     : std_logic;  -- ufix1
  SIGNAL gateddvin                        : std_logic;  -- ufix1
  SIGNAL sendparity                       : std_logic;  -- ufix1
  SIGNAL paritycount_1                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL parityend                        : std_logic;  -- ufix1
  SIGNAL notparityend                     : std_logic;  -- ufix1
  SIGNAL notdone                          : std_logic;  -- ufix1
  SIGNAL setsend                          : std_logic;  -- ufix1
  SIGNAL predvout                         : std_logic;  -- ufix1
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_in_unsigned : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_in_dtc : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL zeroconst_1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL endin_valid_dly                  : std_logic;  -- ufix1
  SIGNAL parityenprime                    : std_logic;  -- ufix1
  SIGNAL inputxor                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable16                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg16                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux16                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg16                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable15                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg15                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux15                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity15                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg15                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable14                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg14                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux14                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity14                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg14                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable13                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg13                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux13                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity13                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg13                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable12                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg12                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux12                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity12                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg12                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable11                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg11                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux11                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity11                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg11                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable10                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg10                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux10                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity10                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg10                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable9                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg9                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux9                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity9                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg9                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable8                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg8                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux8                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity8                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg8                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable7                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg7                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux7                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity7                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg7                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable6                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg6                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux6                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity6                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg6                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable5                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg5                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux5                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity5                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg5                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable4                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg4                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux4                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity4                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg4                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable3                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg3                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux3                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity3                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg3                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable2                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg2                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux2                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity2                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityreg2                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftable1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gftablereg1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL startmux1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parity1                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL parityout                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalmux_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Integer_Input_RS_Encoder_HDL_Optimized_out_tmp : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL startindelayed                   : std_logic;  -- ufix1

BEGIN
  startin_valid <= Integer_Input_RS_Encoder_HDL_Optimized_start AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid;

  endin_valid <= Integer_Input_RS_Encoder_HDL_Optimized_end AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid;

  endin_packet <= endin_valid AND inpacket;

  notendin <=  NOT endin_packet;

  notdonepacket <= notendin AND inpacket;

  inpacketnext <= startin_valid OR notdonepacket;

  inpacketreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      inpacket <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        inpacket <= inpacketnext;
      END IF;
    END IF;
  END PROCESS inpacketreg_process;


  inpacketgate <= inpacket OR startin_valid;

  gateddvin <= Integer_Input_RS_Encoder_HDL_Optimized_datavalid AND inpacketgate;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  paritycount_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      paritycount_1 <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND sendparity = '1' THEN
        paritycount_1 <= paritycount_1 + to_unsigned(16#1#, 4);
      END IF;
    END IF;
  END PROCESS paritycount_process;


  
  parityend <= '1' WHEN paritycount_1 = to_unsigned(16#F#, 4) ELSE
      '0';

  notparityend <=  NOT parityend;

  notdone <= notparityend AND sendparity;

  setsend <= endin_packet OR notdone;

  -- 0
  -- Register to control the output mux selecting with input data or parity.
  sendparityreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      sendparity <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        sendparity <= setsend;
      END IF;
    END IF;
  END PROCESS sendparityreg_process;


  predvout <= gateddvin OR sendparity;

  Integer_Input_RS_Encoder_HDL_Optimized_in_unsigned <= unsigned(Integer_Input_RS_Encoder_HDL_Optimized_in);

  Integer_Input_RS_Encoder_HDL_Optimized_in_dtc <= Integer_Input_RS_Encoder_HDL_Optimized_in_unsigned;

  zeroconst_1 <= to_unsigned(16#00#, 8);

  -- 0
  endvaldly_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      endin_valid_dly <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        endin_valid_dly <= endin_valid;
      END IF;
    END IF;
  END PROCESS endvaldly_process;


  parityenprime <= Integer_Input_RS_Encoder_HDL_Optimized_datavalid OR endin_valid_dly;

  gftable16 <= gftable_data(to_integer(inputxor));

  gftablereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg16 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg16 <= gftable16;
      END IF;
    END IF;
  END PROCESS gftablereg_process;


  
  startmux16 <= gftablereg16 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  paritystate_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg16 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg16 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg16 <= startmux16;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_process;


  gftable15 <= gftable_data_2(to_integer(inputxor));

  gftablereg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg15 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg15 <= gftable15;
      END IF;
    END IF;
  END PROCESS gftablereg_1_process;


  
  startmux15 <= gftablereg15 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity15 <= startmux15 XOR parityreg16;

  paritystate_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg15 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg15 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg15 <= parity15;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_1_process;


  gftable14 <= gftable_data_4(to_integer(inputxor));

  gftablereg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg14 <= gftable14;
      END IF;
    END IF;
  END PROCESS gftablereg_2_process;


  
  startmux14 <= gftablereg14 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity14 <= startmux14 XOR parityreg15;

  paritystate_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg14 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg14 <= parity14;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_2_process;


  gftable13 <= gftable_data_6(to_integer(inputxor));

  gftablereg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg13 <= gftable13;
      END IF;
    END IF;
  END PROCESS gftablereg_3_process;


  
  startmux13 <= gftablereg13 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity13 <= startmux13 XOR parityreg14;

  paritystate_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg13 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg13 <= parity13;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_3_process;


  gftable12 <= gftable_data_8(to_integer(inputxor));

  gftablereg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg12 <= gftable12;
      END IF;
    END IF;
  END PROCESS gftablereg_4_process;


  
  startmux12 <= gftablereg12 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity12 <= startmux12 XOR parityreg13;

  paritystate_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg12 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg12 <= parity12;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_4_process;


  gftable11 <= gftable_data_10(to_integer(inputxor));

  gftablereg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg11 <= gftable11;
      END IF;
    END IF;
  END PROCESS gftablereg_5_process;


  
  startmux11 <= gftablereg11 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity11 <= startmux11 XOR parityreg12;

  paritystate_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg11 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg11 <= parity11;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_5_process;


  gftable10 <= gftable_data_12(to_integer(inputxor));

  gftablereg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg10 <= gftable10;
      END IF;
    END IF;
  END PROCESS gftablereg_6_process;


  
  startmux10 <= gftablereg10 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity10 <= startmux10 XOR parityreg11;

  paritystate_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg10 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg10 <= parity10;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_6_process;


  gftable9 <= gftable_data_14(to_integer(inputxor));

  gftablereg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg9 <= gftable9;
      END IF;
    END IF;
  END PROCESS gftablereg_7_process;


  
  startmux9 <= gftablereg9 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity9 <= startmux9 XOR parityreg10;

  paritystate_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg9 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg9 <= parity9;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_7_process;


  gftable8 <= gftable_data_16(to_integer(inputxor));

  gftablereg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg8 <= gftable8;
      END IF;
    END IF;
  END PROCESS gftablereg_8_process;


  
  startmux8 <= gftablereg8 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity8 <= startmux8 XOR parityreg9;

  paritystate_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg8 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg8 <= parity8;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_8_process;


  gftable7 <= gftable_data_18(to_integer(inputxor));

  gftablereg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg7 <= gftable7;
      END IF;
    END IF;
  END PROCESS gftablereg_9_process;


  
  startmux7 <= gftablereg7 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity7 <= startmux7 XOR parityreg8;

  paritystate_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg7 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg7 <= parity7;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_9_process;


  gftable6 <= gftable_data_20(to_integer(inputxor));

  gftablereg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg6 <= gftable6;
      END IF;
    END IF;
  END PROCESS gftablereg_10_process;


  
  startmux6 <= gftablereg6 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity6 <= startmux6 XOR parityreg7;

  paritystate_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg6 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg6 <= parity6;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_10_process;


  gftable5 <= gftable_data_22(to_integer(inputxor));

  gftablereg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg5 <= gftable5;
      END IF;
    END IF;
  END PROCESS gftablereg_11_process;


  
  startmux5 <= gftablereg5 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity5 <= startmux5 XOR parityreg6;

  paritystate_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg5 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg5 <= parity5;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_11_process;


  gftable4 <= gftable_data_24(to_integer(inputxor));

  gftablereg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg4 <= gftable4;
      END IF;
    END IF;
  END PROCESS gftablereg_12_process;


  
  startmux4 <= gftablereg4 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity4 <= startmux4 XOR parityreg5;

  paritystate_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg4 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg4 <= parity4;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_12_process;


  gftable3 <= gftable_data_26(to_integer(inputxor));

  gftablereg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg3 <= gftable3;
      END IF;
    END IF;
  END PROCESS gftablereg_13_process;


  
  startmux3 <= gftablereg3 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity3 <= startmux3 XOR parityreg4;

  paritystate_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg3 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg3 <= parity3;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_13_process;


  gftable2 <= gftable_data_28(to_integer(inputxor));

  gftablereg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg2 <= gftable2;
      END IF;
    END IF;
  END PROCESS gftablereg_14_process;


  
  startmux2 <= gftablereg2 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity2 <= startmux2 XOR parityreg3;

  paritystate_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      parityreg2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN
          parityreg2 <= to_unsigned(16#00#, 8);
        ELSIF parityenprime = '1' THEN
          parityreg2 <= parity2;
        END IF;
      END IF;
    END IF;
  END PROCESS paritystate_14_process;


  -- XOR to input with feedback to drive lookup tables
  inputxor <= Integer_Input_RS_Encoder_HDL_Optimized_in_unsigned XOR xorfeedback;

  gftable1 <= gftable_data_30(to_integer(inputxor));

  gftablereg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      gftablereg1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND Integer_Input_RS_Encoder_HDL_Optimized_datavalid = '1' THEN
        gftablereg1 <= gftable1;
      END IF;
    END IF;
  END PROCESS gftablereg_15_process;


  
  startmux1 <= gftablereg1 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  parity1 <= startmux1 XOR parityreg2;

  
  xorfeedback <= parity1 WHEN startin_valid = '0' ELSE
      zeroconst_1;

  
  parityout <= xorfeedback WHEN paritycount_1 = to_unsigned(16#0#, 4) ELSE
      parityreg2 WHEN paritycount_1 = to_unsigned(16#1#, 4) ELSE
      parityreg3 WHEN paritycount_1 = to_unsigned(16#2#, 4) ELSE
      parityreg4 WHEN paritycount_1 = to_unsigned(16#3#, 4) ELSE
      parityreg5 WHEN paritycount_1 = to_unsigned(16#4#, 4) ELSE
      parityreg6 WHEN paritycount_1 = to_unsigned(16#5#, 4) ELSE
      parityreg7 WHEN paritycount_1 = to_unsigned(16#6#, 4) ELSE
      parityreg8 WHEN paritycount_1 = to_unsigned(16#7#, 4) ELSE
      parityreg9 WHEN paritycount_1 = to_unsigned(16#8#, 4) ELSE
      parityreg10 WHEN paritycount_1 = to_unsigned(16#9#, 4) ELSE
      parityreg11 WHEN paritycount_1 = to_unsigned(16#A#, 4) ELSE
      parityreg12 WHEN paritycount_1 = to_unsigned(16#B#, 4) ELSE
      parityreg13 WHEN paritycount_1 = to_unsigned(16#C#, 4) ELSE
      parityreg14 WHEN paritycount_1 = to_unsigned(16#D#, 4) ELSE
      parityreg15 WHEN paritycount_1 = to_unsigned(16#E#, 4) ELSE
      parityreg16;

  
  finalmux_1 <= Integer_Input_RS_Encoder_HDL_Optimized_in_dtc WHEN sendparity = '0' ELSE
      parityout;

  outputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Input_RS_Encoder_HDL_Optimized_out_tmp <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND predvout = '1' THEN
        Integer_Input_RS_Encoder_HDL_Optimized_out_tmp <= finalmux_1;
      END IF;
    END IF;
  END PROCESS outputreg_process;


  Integer_Input_RS_Encoder_HDL_Optimized_out <= std_logic_vector(Integer_Input_RS_Encoder_HDL_Optimized_out_tmp);

  startdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      startindelayed <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        startindelayed <= startin_valid;
      END IF;
    END IF;
  END PROCESS startdelay_process;


  Integer_Input_RS_Encoder_HDL_Optimized_startout <= startindelayed;

  -- 0
  endreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Input_RS_Encoder_HDL_Optimized_endout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Input_RS_Encoder_HDL_Optimized_endout <= parityend;
      END IF;
    END IF;
  END PROCESS endreg_process;


  -- 0
  endreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Input_RS_Encoder_HDL_Optimized_datavalidout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Input_RS_Encoder_HDL_Optimized_datavalidout <= predvout;
      END IF;
    END IF;
  END PROCESS endreg_1_process;


END rtl;

