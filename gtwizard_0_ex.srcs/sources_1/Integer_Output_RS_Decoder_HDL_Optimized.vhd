-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\commrshdl\Integer_Output_RS_Decoder_HDL_Optimized.vhd
-- Created: 2024-04-06 12:59:02
-- 
-- Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: Integer_Output_RS_Decoder_HDL_Optimized
-- Source Path: commrshdl/RS Decoder/Integer-Output RS Decoder HDL Optimized
-- Hierarchy Level: 1
-- Model version: 9.5
-- 
-- Reed-Solomon Decoder Block
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.RS_Decoder_pkg.ALL;

ENTITY Integer_Output_RS_Decoder_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_in :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        Integer_Output_RS_Decoder_HDL_Optimized_start :   IN    std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_end :   IN    std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_datavalid :   IN    std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_out :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        Integer_Output_RS_Decoder_HDL_Optimized_startout :   OUT   std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_endout :   OUT   std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_datavalidout :   OUT   std_logic;
        Integer_Output_RS_Decoder_HDL_Optimized_errout :   OUT   std_logic
        );
END Integer_Output_RS_Decoder_HDL_Optimized;


ARCHITECTURE rtl OF Integer_Output_RS_Decoder_HDL_Optimized IS

  -- Component Declarations
  COMPONENT SimpleDualPortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          wr_din                          :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          wr_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          wr_en                           :   IN    std_logic;  -- ufix1
          rd_addr                         :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          dout                            :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SimpleDualPortRAM_generic
    USE ENTITY work.SimpleDualPortRAM_generic(rtl);

  -- Constants
  CONSTANT gfpowertable_data              : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#61#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#16#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#51#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#92#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#50#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#17#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#53#, 8), to_unsigned(16#39#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#63#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#91#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#24#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#15#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#52#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#25#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#08#, 8), to_unsigned(16#62#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#54#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#13#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#64#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#23#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#12#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#55#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#22#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#21#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#56#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#67#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#20#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#57#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#10#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#AE#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_2            : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#72#, 8), to_unsigned(16#47#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#93#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#05#, 8), to_unsigned(16#30#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#64#, 8), to_unsigned(16#51#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#85#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#73#, 8), to_unsigned(16#46#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#12#, 8), to_unsigned(16#27#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#84#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#65#, 8), to_unsigned(16#50#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#04#, 8), to_unsigned(16#31#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#66#, 8), to_unsigned(16#53#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#87#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#07#, 8), to_unsigned(16#32#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#09#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#70#, 8), to_unsigned(16#45#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#91#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#11#, 8), to_unsigned(16#24#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#89#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#06#, 8), to_unsigned(16#33#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#67#, 8), to_unsigned(16#52#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#10#, 8), to_unsigned(16#25#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#69#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#90#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#71#, 8), to_unsigned(16#44#, 8), to_unsigned(16#57#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_4            : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#35#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#79#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#39#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#53#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#75#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#54#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#32#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#14#, 8), to_unsigned(16#80#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#58#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#49#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#91#, 8), to_unsigned(16#05#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#63#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#09#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#42#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#28#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#68#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#24#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#02#, 8), to_unsigned(16#96#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#33#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#15#, 8), to_unsigned(16#81#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#59#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#73#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#55#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#38#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#52#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#86#, 8), to_unsigned(16#12#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#78#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#69#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#03#, 8), to_unsigned(16#97#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#43#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#29#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#44#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#62#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#08#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#48#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#90#, 8), to_unsigned(16#04#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#22#, 8), to_unsigned(16#A5#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_6            : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#94#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#46#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#39#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#19#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#78#, 8), to_unsigned(16#32#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#21#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#12#, 8), to_unsigned(16#58#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#97#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#84#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#82#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#29#, 8), to_unsigned(16#63#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#43#, 8), to_unsigned(16#09#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#22#, 8), to_unsigned(16#68#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#31#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#04#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#17#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#37#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#48#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#DC#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_8            : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#81#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#06#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#30#, 8), to_unsigned(16#15#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#05#, 8), to_unsigned(16#20#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#33#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#70#, 8), to_unsigned(16#55#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#46#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#56#, 8), to_unsigned(16#73#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#60#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#19#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#67#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#74#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#52#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#38#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#99#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#78#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#34#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#02#, 8), to_unsigned(16#27#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#37#, 8), to_unsigned(16#12#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#95#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#01#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#6E#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_10           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#25#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#67#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#36#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#49#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#84#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#23#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#72#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#61#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#99#, 8), to_unsigned(16#05#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#54#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#91#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#16#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#47#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#70#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#21#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#63#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#32#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#29#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#56#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#45#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#14#, 8), to_unsigned(16#88#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#27#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#34#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#65#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#01#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#50#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#09#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#12#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#37#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_12           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#29#, 8), to_unsigned(16#67#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#08#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#63#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#39#, 8), to_unsigned(16#77#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#18#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#41#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#76#, 8), to_unsigned(16#38#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#19#, 8), to_unsigned(16#57#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#44#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#99#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#54#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#43#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#28#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#62#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#09#, 8), to_unsigned(16#47#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#95#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_14           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#83#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#72#, 8), to_unsigned(16#55#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#57#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#04#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#98#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#29#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#61#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#15#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#44#, 8), to_unsigned(16#63#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#17#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#68#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#39#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#54#, 8), to_unsigned(16#73#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#20#, 8), to_unsigned(16#07#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#56#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#05#, 8), to_unsigned(16#22#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#99#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#79#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#88#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#47#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#14#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#45#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#C4#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_16           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#53#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#03#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#38#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#49#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#84#, 8), to_unsigned(16#19#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#18#, 8), to_unsigned(16#85#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#56#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#35#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#64#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#10#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#11#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#14#, 8), to_unsigned(16#89#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#60#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#88#, 8), to_unsigned(16#15#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#44#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#97#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#31#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#96#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#62#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_18           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#34#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#13#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#75#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#52#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#01#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#50#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#24#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#03#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#65#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#42#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#11#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#07#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#20#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#49#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#54#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#32#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#08#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#46#, 8), to_unsigned(16#86#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#61#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#30#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#63#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#44#, 8), to_unsigned(16#84#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#59#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#18#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#05#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#96#, 8), to_unsigned(16#56#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#71#, 8), to_unsigned(16#31#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_20           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#07#, 8), to_unsigned(16#67#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#54#, 8), to_unsigned(16#34#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#49#, 8), to_unsigned(16#29#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#73#, 8), to_unsigned(16#13#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#93#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#48#, 8), to_unsigned(16#28#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#55#, 8), to_unsigned(16#35#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#72#, 8), to_unsigned(16#12#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#21#, 8), to_unsigned(16#41#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#06#, 8), to_unsigned(16#66#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#70#, 8), to_unsigned(16#10#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#57#, 8), to_unsigned(16#37#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#99#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#19#, 8), to_unsigned(16#79#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#23#, 8), to_unsigned(16#43#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#05#, 8), to_unsigned(16#65#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#85#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#18#, 8), to_unsigned(16#78#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#98#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#22#, 8), to_unsigned(16#42#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#71#, 8), to_unsigned(16#11#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#56#, 8), to_unsigned(16#36#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#96#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_22           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#50#, 8), to_unsigned(16#60#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#37#, 8), to_unsigned(16#07#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#77#, 8), to_unsigned(16#47#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#64#, 8), to_unsigned(16#54#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#24#, 8), to_unsigned(16#14#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#79#, 8), to_unsigned(16#49#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#39#, 8), to_unsigned(16#09#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#43#, 8), to_unsigned(16#73#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#03#, 8), to_unsigned(16#33#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#83#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#88#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#78#, 8), to_unsigned(16#48#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#38#, 8), to_unsigned(16#08#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#95#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#65#, 8), to_unsigned(16#55#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#25#, 8), to_unsigned(16#15#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#42#, 8), to_unsigned(16#72#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#91#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#11#, 8), to_unsigned(16#21#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#51#, 8), to_unsigned(16#61#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#36#, 8), to_unsigned(16#06#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#76#, 8), to_unsigned(16#46#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4B#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_24           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_26           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#14#, 8), to_unsigned(16#18#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#24#, 8), to_unsigned(16#28#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#34#, 8), to_unsigned(16#38#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#44#, 8), to_unsigned(16#48#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#54#, 8), to_unsigned(16#58#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#64#, 8), to_unsigned(16#68#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#74#, 8), to_unsigned(16#78#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#84#, 8), to_unsigned(16#88#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#94#, 8), to_unsigned(16#98#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#15#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#09#, 8), to_unsigned(16#05#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#35#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#25#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#59#, 8), to_unsigned(16#55#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#45#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#79#, 8), to_unsigned(16#75#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#69#, 8), to_unsigned(16#65#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#99#, 8), to_unsigned(16#95#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#89#, 8), to_unsigned(16#85#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#22#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#02#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#72#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#62#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#52#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#33#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#13#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#73#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#53#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#DB#, 8));  -- ufix8 [256]
  CONSTANT gfpowertable_data_28           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#12#, 8), to_unsigned(16#14#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#22#, 8), to_unsigned(16#24#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#32#, 8), to_unsigned(16#34#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#42#, 8), to_unsigned(16#44#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#52#, 8), to_unsigned(16#54#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#62#, 8), to_unsigned(16#64#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#72#, 8), to_unsigned(16#74#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#82#, 8), to_unsigned(16#84#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#92#, 8), to_unsigned(16#94#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#17#, 8), to_unsigned(16#11#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#07#, 8), to_unsigned(16#01#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#39#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#37#, 8), to_unsigned(16#31#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#29#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#27#, 8), to_unsigned(16#21#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#57#, 8), to_unsigned(16#51#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#47#, 8), to_unsigned(16#41#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#77#, 8), to_unsigned(16#71#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#69#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#67#, 8), to_unsigned(16#61#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#99#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#97#, 8), to_unsigned(16#91#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#89#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#87#, 8), to_unsigned(16#81#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#E3#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data       : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_2     : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data           : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_4     : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_2         : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_6     : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_4         : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_8     : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_6         : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_10    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_8         : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_12    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_10        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_14    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_12        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_16    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_14        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_18    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_16        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_20    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_18        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_22    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_20        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_24    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_22        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_26    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_24        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_28    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_26        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_30    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_28        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_32    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_30        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_34    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_32        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_36    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_34        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_38    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_36        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_40    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_38        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_42    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_40        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_44    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_42        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_46    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_44        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_48    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_46        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_50    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_48        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_52    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_50        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_54    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_52        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_56    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_54        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_58    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_56        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_60    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_58        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_62    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_64    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_66    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_60        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_68    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_62        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#12#, 8), to_unsigned(16#14#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#22#, 8), to_unsigned(16#24#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#32#, 8), to_unsigned(16#34#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#42#, 8), to_unsigned(16#44#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#52#, 8), to_unsigned(16#54#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#62#, 8), to_unsigned(16#64#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#72#, 8), to_unsigned(16#74#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#82#, 8), to_unsigned(16#84#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#92#, 8), to_unsigned(16#94#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#17#, 8), to_unsigned(16#11#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#07#, 8), to_unsigned(16#01#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#39#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#37#, 8), to_unsigned(16#31#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#29#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#27#, 8), to_unsigned(16#21#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#57#, 8), to_unsigned(16#51#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#47#, 8), to_unsigned(16#41#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#77#, 8), to_unsigned(16#71#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#69#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#67#, 8), to_unsigned(16#61#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#99#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#97#, 8), to_unsigned(16#91#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#89#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#87#, 8), to_unsigned(16#81#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#E3#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data         : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#12#, 8), to_unsigned(16#14#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#22#, 8), to_unsigned(16#24#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#32#, 8), to_unsigned(16#34#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#42#, 8), to_unsigned(16#44#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#52#, 8), to_unsigned(16#54#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#62#, 8), to_unsigned(16#64#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#72#, 8), to_unsigned(16#74#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#82#, 8), to_unsigned(16#84#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#92#, 8), to_unsigned(16#94#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#17#, 8), to_unsigned(16#11#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#07#, 8), to_unsigned(16#01#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#39#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#37#, 8), to_unsigned(16#31#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#29#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#27#, 8), to_unsigned(16#21#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#57#, 8), to_unsigned(16#51#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#47#, 8), to_unsigned(16#41#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#77#, 8), to_unsigned(16#71#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#69#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#67#, 8), to_unsigned(16#61#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#99#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#97#, 8), to_unsigned(16#91#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#89#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#87#, 8), to_unsigned(16#81#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#E3#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_2    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#14#, 8), to_unsigned(16#18#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#24#, 8), to_unsigned(16#28#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#34#, 8), to_unsigned(16#38#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#44#, 8), to_unsigned(16#48#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#54#, 8), to_unsigned(16#58#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#64#, 8), to_unsigned(16#68#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#74#, 8), to_unsigned(16#78#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#84#, 8), to_unsigned(16#88#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#94#, 8), to_unsigned(16#98#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#15#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#09#, 8), to_unsigned(16#05#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#35#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#25#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#59#, 8), to_unsigned(16#55#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#45#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#79#, 8), to_unsigned(16#75#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#69#, 8), to_unsigned(16#65#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#99#, 8), to_unsigned(16#95#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#89#, 8), to_unsigned(16#85#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#22#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#02#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#72#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#62#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#52#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#33#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#13#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#73#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#53#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#DB#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_2       : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#14#, 8), to_unsigned(16#18#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#24#, 8), to_unsigned(16#28#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#34#, 8), to_unsigned(16#38#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#44#, 8), to_unsigned(16#48#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#54#, 8), to_unsigned(16#58#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#64#, 8), to_unsigned(16#68#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#74#, 8), to_unsigned(16#78#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#84#, 8), to_unsigned(16#88#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#94#, 8), to_unsigned(16#98#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#15#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#09#, 8), to_unsigned(16#05#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#35#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#25#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#59#, 8), to_unsigned(16#55#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#45#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#79#, 8), to_unsigned(16#75#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#69#, 8), to_unsigned(16#65#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#99#, 8), to_unsigned(16#95#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#89#, 8), to_unsigned(16#85#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#22#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#02#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#72#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#62#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#52#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#33#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#13#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#73#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#53#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#DB#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_4    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_4       : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_6    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#50#, 8), to_unsigned(16#60#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#37#, 8), to_unsigned(16#07#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#77#, 8), to_unsigned(16#47#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#64#, 8), to_unsigned(16#54#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#24#, 8), to_unsigned(16#14#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#79#, 8), to_unsigned(16#49#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#39#, 8), to_unsigned(16#09#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#43#, 8), to_unsigned(16#73#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#03#, 8), to_unsigned(16#33#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#83#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#88#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#78#, 8), to_unsigned(16#48#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#38#, 8), to_unsigned(16#08#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#95#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#65#, 8), to_unsigned(16#55#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#25#, 8), to_unsigned(16#15#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#42#, 8), to_unsigned(16#72#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#91#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#11#, 8), to_unsigned(16#21#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#51#, 8), to_unsigned(16#61#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#36#, 8), to_unsigned(16#06#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#76#, 8), to_unsigned(16#46#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4B#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_6       : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#50#, 8), to_unsigned(16#60#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#37#, 8), to_unsigned(16#07#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#77#, 8), to_unsigned(16#47#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#64#, 8), to_unsigned(16#54#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#24#, 8), to_unsigned(16#14#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#79#, 8), to_unsigned(16#49#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#39#, 8), to_unsigned(16#09#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#43#, 8), to_unsigned(16#73#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#03#, 8), to_unsigned(16#33#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#83#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#88#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#78#, 8), to_unsigned(16#48#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#38#, 8), to_unsigned(16#08#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#95#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#65#, 8), to_unsigned(16#55#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#25#, 8), to_unsigned(16#15#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#42#, 8), to_unsigned(16#72#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#91#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#11#, 8), to_unsigned(16#21#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#51#, 8), to_unsigned(16#61#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#36#, 8), to_unsigned(16#06#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#76#, 8), to_unsigned(16#46#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4B#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_8    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#07#, 8), to_unsigned(16#67#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#54#, 8), to_unsigned(16#34#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#49#, 8), to_unsigned(16#29#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#73#, 8), to_unsigned(16#13#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#93#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#48#, 8), to_unsigned(16#28#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#55#, 8), to_unsigned(16#35#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#72#, 8), to_unsigned(16#12#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#21#, 8), to_unsigned(16#41#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#06#, 8), to_unsigned(16#66#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#70#, 8), to_unsigned(16#10#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#57#, 8), to_unsigned(16#37#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#99#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#19#, 8), to_unsigned(16#79#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#23#, 8), to_unsigned(16#43#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#05#, 8), to_unsigned(16#65#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#85#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#18#, 8), to_unsigned(16#78#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#98#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#22#, 8), to_unsigned(16#42#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#71#, 8), to_unsigned(16#11#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#56#, 8), to_unsigned(16#36#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#96#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_8       : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#07#, 8), to_unsigned(16#67#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#54#, 8), to_unsigned(16#34#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#49#, 8), to_unsigned(16#29#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#73#, 8), to_unsigned(16#13#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#93#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#48#, 8), to_unsigned(16#28#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#55#, 8), to_unsigned(16#35#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#72#, 8), to_unsigned(16#12#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#21#, 8), to_unsigned(16#41#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#06#, 8), to_unsigned(16#66#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#70#, 8), to_unsigned(16#10#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#57#, 8), to_unsigned(16#37#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#99#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#19#, 8), to_unsigned(16#79#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#23#, 8), to_unsigned(16#43#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#05#, 8), to_unsigned(16#65#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#85#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#18#, 8), to_unsigned(16#78#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#98#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#22#, 8), to_unsigned(16#42#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#71#, 8), to_unsigned(16#11#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#56#, 8), to_unsigned(16#36#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#96#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_10   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#34#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#13#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#75#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#52#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#01#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#50#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#24#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#03#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#65#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#42#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#11#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#07#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#20#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#49#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#54#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#32#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#08#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#46#, 8), to_unsigned(16#86#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#61#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#30#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#63#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#44#, 8), to_unsigned(16#84#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#59#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#18#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#05#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#96#, 8), to_unsigned(16#56#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#71#, 8), to_unsigned(16#31#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_10      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#34#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#13#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#75#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#52#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#01#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#50#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#24#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#03#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#65#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#42#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#11#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#07#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#20#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#49#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#54#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#32#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#08#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#46#, 8), to_unsigned(16#86#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#61#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#30#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#63#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#44#, 8), to_unsigned(16#84#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#59#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#18#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#05#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#96#, 8), to_unsigned(16#56#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#71#, 8), to_unsigned(16#31#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_12   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#53#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#03#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#38#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#49#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#84#, 8), to_unsigned(16#19#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#18#, 8), to_unsigned(16#85#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#56#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#35#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#64#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#10#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#11#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#14#, 8), to_unsigned(16#89#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#60#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#88#, 8), to_unsigned(16#15#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#44#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#97#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#31#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#96#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#62#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_12      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#53#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#03#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#38#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#49#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#84#, 8), to_unsigned(16#19#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#18#, 8), to_unsigned(16#85#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#56#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#35#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#64#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#10#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#11#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#14#, 8), to_unsigned(16#89#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#60#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#88#, 8), to_unsigned(16#15#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#44#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#97#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#31#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#96#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#62#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_14   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#83#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#72#, 8), to_unsigned(16#55#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#57#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#04#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#98#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#29#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#61#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#15#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#44#, 8), to_unsigned(16#63#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#17#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#68#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#39#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#54#, 8), to_unsigned(16#73#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#20#, 8), to_unsigned(16#07#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#56#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#05#, 8), to_unsigned(16#22#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#99#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#79#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#88#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#47#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#14#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#45#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#C4#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_14      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#83#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#72#, 8), to_unsigned(16#55#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#57#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#04#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#98#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#29#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#61#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#15#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#44#, 8), to_unsigned(16#63#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#17#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#68#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#39#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#54#, 8), to_unsigned(16#73#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#20#, 8), to_unsigned(16#07#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#56#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#05#, 8), to_unsigned(16#22#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#99#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#79#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#88#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#47#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#14#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#45#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#C4#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_16   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#29#, 8), to_unsigned(16#67#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#08#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#63#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#39#, 8), to_unsigned(16#77#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#18#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#41#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#76#, 8), to_unsigned(16#38#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#19#, 8), to_unsigned(16#57#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#44#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#99#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#54#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#43#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#28#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#62#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#09#, 8), to_unsigned(16#47#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#95#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_16      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#29#, 8), to_unsigned(16#67#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#08#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#63#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#39#, 8), to_unsigned(16#77#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#18#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#41#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#76#, 8), to_unsigned(16#38#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#19#, 8), to_unsigned(16#57#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#44#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#99#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#54#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#43#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#28#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#62#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#09#, 8), to_unsigned(16#47#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#95#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_18   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#25#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#67#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#36#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#49#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#84#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#23#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#72#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#61#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#99#, 8), to_unsigned(16#05#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#54#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#91#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#16#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#47#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#70#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#21#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#63#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#32#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#29#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#56#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#45#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#14#, 8), to_unsigned(16#88#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#27#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#34#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#65#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#01#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#50#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#09#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#12#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#37#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_18      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#25#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#67#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#36#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#49#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#84#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#23#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#72#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#61#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#99#, 8), to_unsigned(16#05#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#54#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#91#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#16#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#47#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#70#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#21#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#63#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#32#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#29#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#56#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#45#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#14#, 8), to_unsigned(16#88#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#27#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#34#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#65#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#01#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#50#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#09#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#12#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#37#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_20   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#81#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#06#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#30#, 8), to_unsigned(16#15#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#05#, 8), to_unsigned(16#20#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#33#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#70#, 8), to_unsigned(16#55#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#46#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#56#, 8), to_unsigned(16#73#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#60#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#19#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#67#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#74#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#52#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#38#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#99#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#78#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#34#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#02#, 8), to_unsigned(16#27#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#37#, 8), to_unsigned(16#12#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#95#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#01#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#6E#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_20      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#81#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#06#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#30#, 8), to_unsigned(16#15#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#05#, 8), to_unsigned(16#20#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#33#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#70#, 8), to_unsigned(16#55#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#46#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#56#, 8), to_unsigned(16#73#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#60#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#19#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#67#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#74#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#52#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#38#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#99#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#78#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#34#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#02#, 8), to_unsigned(16#27#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#37#, 8), to_unsigned(16#12#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#95#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#01#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#6E#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_22   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#94#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#46#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#39#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#19#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#78#, 8), to_unsigned(16#32#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#21#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#12#, 8), to_unsigned(16#58#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#97#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#84#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#82#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#29#, 8), to_unsigned(16#63#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#43#, 8), to_unsigned(16#09#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#22#, 8), to_unsigned(16#68#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#31#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#04#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#17#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#37#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#48#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#DC#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_22      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#94#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#46#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#39#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#19#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#78#, 8), to_unsigned(16#32#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#21#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#12#, 8), to_unsigned(16#58#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#97#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#84#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#82#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#29#, 8), to_unsigned(16#63#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#43#, 8), to_unsigned(16#09#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#22#, 8), to_unsigned(16#68#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#31#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#04#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#17#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#37#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#48#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#DC#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_24   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#35#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#79#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#39#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#53#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#75#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#54#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#32#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#14#, 8), to_unsigned(16#80#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#58#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#49#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#91#, 8), to_unsigned(16#05#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#63#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#09#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#42#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#28#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#68#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#24#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#02#, 8), to_unsigned(16#96#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#33#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#15#, 8), to_unsigned(16#81#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#59#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#73#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#55#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#38#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#52#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#86#, 8), to_unsigned(16#12#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#78#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#69#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#03#, 8), to_unsigned(16#97#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#43#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#29#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#44#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#62#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#08#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#48#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#90#, 8), to_unsigned(16#04#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#22#, 8), to_unsigned(16#A5#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_24      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#35#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#79#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#39#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#53#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#75#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#54#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#32#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#14#, 8), to_unsigned(16#80#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#58#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#49#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#91#, 8), to_unsigned(16#05#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#63#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#09#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#42#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#28#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#68#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#24#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#02#, 8), to_unsigned(16#96#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#33#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#15#, 8), to_unsigned(16#81#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#59#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#73#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#55#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#38#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#52#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#86#, 8), to_unsigned(16#12#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#78#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#69#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#03#, 8), to_unsigned(16#97#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#43#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#29#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#44#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#62#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#08#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#48#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#90#, 8), to_unsigned(16#04#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#22#, 8), to_unsigned(16#A5#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_26   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#72#, 8), to_unsigned(16#47#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#93#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#05#, 8), to_unsigned(16#30#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#64#, 8), to_unsigned(16#51#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#85#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#73#, 8), to_unsigned(16#46#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#12#, 8), to_unsigned(16#27#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#84#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#65#, 8), to_unsigned(16#50#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#04#, 8), to_unsigned(16#31#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#66#, 8), to_unsigned(16#53#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#87#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#07#, 8), to_unsigned(16#32#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#09#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#70#, 8), to_unsigned(16#45#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#91#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#11#, 8), to_unsigned(16#24#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#89#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#06#, 8), to_unsigned(16#33#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#67#, 8), to_unsigned(16#52#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#10#, 8), to_unsigned(16#25#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#69#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#90#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#71#, 8), to_unsigned(16#44#, 8), to_unsigned(16#57#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_26      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#72#, 8), to_unsigned(16#47#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#93#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#05#, 8), to_unsigned(16#30#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#64#, 8), to_unsigned(16#51#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#85#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#73#, 8), to_unsigned(16#46#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#12#, 8), to_unsigned(16#27#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#84#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#65#, 8), to_unsigned(16#50#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#04#, 8), to_unsigned(16#31#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#66#, 8), to_unsigned(16#53#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#87#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#07#, 8), to_unsigned(16#32#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#09#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#70#, 8), to_unsigned(16#45#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#91#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#11#, 8), to_unsigned(16#24#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#89#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#06#, 8), to_unsigned(16#33#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#67#, 8), to_unsigned(16#52#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#10#, 8), to_unsigned(16#25#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#69#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#90#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#71#, 8), to_unsigned(16#44#, 8), to_unsigned(16#57#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_28   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#61#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#16#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#51#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#92#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#50#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#17#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#53#, 8), to_unsigned(16#39#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#63#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#91#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#24#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#15#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#52#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#25#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#08#, 8), to_unsigned(16#62#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#54#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#13#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#64#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#23#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#12#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#55#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#22#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#21#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#56#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#67#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#20#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#57#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#10#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#AE#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_28      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#61#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#16#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#51#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#92#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#50#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#17#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#53#, 8), to_unsigned(16#39#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#63#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#91#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#24#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#15#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#52#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#25#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#08#, 8), to_unsigned(16#62#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#54#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#13#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#64#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#23#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#12#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#55#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#22#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#21#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#56#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#67#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#20#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#57#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#10#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#AE#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_70    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_72    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_64        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_30   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#12#, 8), to_unsigned(16#14#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#22#, 8), to_unsigned(16#24#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#32#, 8), to_unsigned(16#34#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#42#, 8), to_unsigned(16#44#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#52#, 8), to_unsigned(16#54#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#62#, 8), to_unsigned(16#64#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#72#, 8), to_unsigned(16#74#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#82#, 8), to_unsigned(16#84#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#92#, 8), to_unsigned(16#94#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#17#, 8), to_unsigned(16#11#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#07#, 8), to_unsigned(16#01#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#39#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#37#, 8), to_unsigned(16#31#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#29#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#27#, 8), to_unsigned(16#21#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#57#, 8), to_unsigned(16#51#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#47#, 8), to_unsigned(16#41#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#77#, 8), to_unsigned(16#71#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#69#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#67#, 8), to_unsigned(16#61#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#99#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#97#, 8), to_unsigned(16#91#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#89#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#87#, 8), to_unsigned(16#81#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#E3#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_30      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#12#, 8), to_unsigned(16#14#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#22#, 8), to_unsigned(16#24#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#32#, 8), to_unsigned(16#34#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#42#, 8), to_unsigned(16#44#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#52#, 8), to_unsigned(16#54#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#62#, 8), to_unsigned(16#64#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#72#, 8), to_unsigned(16#74#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#82#, 8), to_unsigned(16#84#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#88#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#92#, 8), to_unsigned(16#94#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#19#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#17#, 8), to_unsigned(16#11#, 8), to_unsigned(16#13#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#07#, 8), to_unsigned(16#01#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#39#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#37#, 8), to_unsigned(16#31#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#29#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#27#, 8), to_unsigned(16#21#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#57#, 8), to_unsigned(16#51#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#49#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#45#, 8), to_unsigned(16#47#, 8), to_unsigned(16#41#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#77#, 8), to_unsigned(16#71#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#69#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#67#, 8), to_unsigned(16#61#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#99#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#97#, 8), to_unsigned(16#91#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#89#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#87#, 8), to_unsigned(16#81#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#E3#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_32   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#14#, 8), to_unsigned(16#18#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#24#, 8), to_unsigned(16#28#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#34#, 8), to_unsigned(16#38#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#44#, 8), to_unsigned(16#48#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#54#, 8), to_unsigned(16#58#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#64#, 8), to_unsigned(16#68#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#74#, 8), to_unsigned(16#78#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#84#, 8), to_unsigned(16#88#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#94#, 8), to_unsigned(16#98#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#15#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#09#, 8), to_unsigned(16#05#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#35#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#25#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#59#, 8), to_unsigned(16#55#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#45#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#79#, 8), to_unsigned(16#75#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#69#, 8), to_unsigned(16#65#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#99#, 8), to_unsigned(16#95#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#89#, 8), to_unsigned(16#85#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#22#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#02#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#72#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#62#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#52#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#33#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#13#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#73#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#53#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#DB#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_32      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#14#, 8), to_unsigned(16#18#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#24#, 8), to_unsigned(16#28#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#34#, 8), to_unsigned(16#38#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#44#, 8), to_unsigned(16#48#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#54#, 8), to_unsigned(16#58#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#64#, 8), to_unsigned(16#68#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#74#, 8), to_unsigned(16#78#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#84#, 8), to_unsigned(16#88#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#94#, 8), to_unsigned(16#98#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#15#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#09#, 8), to_unsigned(16#05#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#39#, 8), to_unsigned(16#35#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#29#, 8), to_unsigned(16#25#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#59#, 8), to_unsigned(16#55#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#49#, 8), to_unsigned(16#45#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#79#, 8), to_unsigned(16#75#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#69#, 8), to_unsigned(16#65#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#99#, 8), to_unsigned(16#95#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#89#, 8), to_unsigned(16#85#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#32#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#22#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#12#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#02#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#72#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#62#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#52#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#92#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#8A#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#E6#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#33#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#13#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#73#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#53#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#93#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#FB#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#DB#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_34   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_34      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#08#, 8), to_unsigned(16#10#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#28#, 8), to_unsigned(16#30#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#48#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#68#, 8), to_unsigned(16#70#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#88#, 8), to_unsigned(16#90#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#15#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#35#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#75#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#95#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#1A#, 8), to_unsigned(16#12#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#72#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#52#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#92#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#17#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#57#, 8), to_unsigned(16#5F#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#97#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#44#, 8), to_unsigned(16#4C#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#24#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#04#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#84#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#61#, 8), to_unsigned(16#79#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#41#, 8), to_unsigned(16#59#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#21#, 8), to_unsigned(16#39#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#09#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#D1#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#89#, 8), to_unsigned(16#81#, 8), to_unsigned(16#99#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#6E#, 8), to_unsigned(16#66#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#06#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#26#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#86#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#43#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#03#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#23#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#83#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#AB#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_36   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#50#, 8), to_unsigned(16#60#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#37#, 8), to_unsigned(16#07#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#77#, 8), to_unsigned(16#47#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#64#, 8), to_unsigned(16#54#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#24#, 8), to_unsigned(16#14#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#79#, 8), to_unsigned(16#49#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#39#, 8), to_unsigned(16#09#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#43#, 8), to_unsigned(16#73#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#03#, 8), to_unsigned(16#33#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#83#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#88#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#78#, 8), to_unsigned(16#48#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#38#, 8), to_unsigned(16#08#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#95#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#65#, 8), to_unsigned(16#55#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#25#, 8), to_unsigned(16#15#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#42#, 8), to_unsigned(16#72#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#91#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#11#, 8), to_unsigned(16#21#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#51#, 8), to_unsigned(16#61#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#36#, 8), to_unsigned(16#06#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#76#, 8), to_unsigned(16#46#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4B#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_36      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#50#, 8), to_unsigned(16#60#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#90#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#37#, 8), to_unsigned(16#07#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#77#, 8), to_unsigned(16#47#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#64#, 8), to_unsigned(16#54#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#24#, 8), to_unsigned(16#14#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#79#, 8), to_unsigned(16#49#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#39#, 8), to_unsigned(16#09#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#3E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#BE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#43#, 8), to_unsigned(16#73#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#03#, 8), to_unsigned(16#33#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#83#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#88#, 8), to_unsigned(16#98#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#78#, 8), to_unsigned(16#48#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#38#, 8), to_unsigned(16#08#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#95#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#65#, 8), to_unsigned(16#55#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#25#, 8), to_unsigned(16#15#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#82#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#42#, 8), to_unsigned(16#72#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#BF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#0F#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#91#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#11#, 8), to_unsigned(16#21#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#51#, 8), to_unsigned(16#61#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#36#, 8), to_unsigned(16#06#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#76#, 8), to_unsigned(16#46#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#CB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#4B#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_38   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#07#, 8), to_unsigned(16#67#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#54#, 8), to_unsigned(16#34#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#49#, 8), to_unsigned(16#29#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#73#, 8), to_unsigned(16#13#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#93#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#48#, 8), to_unsigned(16#28#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#55#, 8), to_unsigned(16#35#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#72#, 8), to_unsigned(16#12#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#21#, 8), to_unsigned(16#41#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#06#, 8), to_unsigned(16#66#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#70#, 8), to_unsigned(16#10#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#57#, 8), to_unsigned(16#37#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#99#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#19#, 8), to_unsigned(16#79#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#23#, 8), to_unsigned(16#43#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#05#, 8), to_unsigned(16#65#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#85#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#18#, 8), to_unsigned(16#78#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#98#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#22#, 8), to_unsigned(16#42#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#71#, 8), to_unsigned(16#11#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#56#, 8), to_unsigned(16#36#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#96#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_38      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#07#, 8), to_unsigned(16#67#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#87#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#54#, 8), to_unsigned(16#34#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#49#, 8), to_unsigned(16#29#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#73#, 8), to_unsigned(16#13#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#93#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#68#, 8), to_unsigned(16#48#, 8), to_unsigned(16#28#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#55#, 8), to_unsigned(16#35#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#72#, 8), to_unsigned(16#12#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#21#, 8), to_unsigned(16#41#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#86#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#06#, 8), to_unsigned(16#66#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#70#, 8), to_unsigned(16#10#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#57#, 8), to_unsigned(16#37#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#99#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#19#, 8), to_unsigned(16#79#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#84#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#24#, 8), to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#23#, 8), to_unsigned(16#43#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#05#, 8), to_unsigned(16#65#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#85#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#18#, 8), to_unsigned(16#78#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#98#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#22#, 8), to_unsigned(16#42#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#71#, 8), to_unsigned(16#11#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#8B#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#56#, 8), to_unsigned(16#36#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#F6#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#96#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_40   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#34#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#13#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#75#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#52#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#01#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#50#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#24#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#03#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#65#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#42#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#11#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#07#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#20#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#49#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#54#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#32#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#08#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#46#, 8), to_unsigned(16#86#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#61#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#30#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#63#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#44#, 8), to_unsigned(16#84#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#59#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#18#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#05#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#96#, 8), to_unsigned(16#56#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#71#, 8), to_unsigned(16#31#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_40      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#67#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#34#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#29#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#13#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#75#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#92#, 8), to_unsigned(16#52#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#CF#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#01#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#90#, 8), to_unsigned(16#50#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#24#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#03#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#65#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#78#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#42#, 8), to_unsigned(16#82#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#11#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#8C#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#36#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#07#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#20#, 8), to_unsigned(16#60#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#89#, 8), to_unsigned(16#49#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#94#, 8), to_unsigned(16#54#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#32#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#15#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#48#, 8), to_unsigned(16#08#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#46#, 8), to_unsigned(16#86#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#61#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#3C#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#57#, 8), to_unsigned(16#17#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#30#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#63#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#44#, 8), to_unsigned(16#84#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#59#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#18#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#05#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#96#, 8), to_unsigned(16#56#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#0B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#71#, 8), to_unsigned(16#31#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_42   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#53#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#03#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#38#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#49#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#84#, 8), to_unsigned(16#19#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#18#, 8), to_unsigned(16#85#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#56#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#35#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#64#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#10#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#11#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#14#, 8), to_unsigned(16#89#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#60#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#88#, 8), to_unsigned(16#15#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#44#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#97#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#31#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#96#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#62#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_42      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#A7#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#69#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#53#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#68#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#26#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#77#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#39#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#03#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#38#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#02#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#BD#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#73#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#49#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#48#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#57#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#84#, 8), to_unsigned(16#19#, 8), to_unsigned(16#99#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#22#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#18#, 8), to_unsigned(16#85#, 8), to_unsigned(16#05#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#56#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B4#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#40#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#35#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#64#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#10#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#11#, 8), to_unsigned(16#91#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#78#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#14#, 8), to_unsigned(16#89#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#AE#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#60#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#61#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#88#, 8), to_unsigned(16#15#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#44#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#97#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#8A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#31#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#96#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#FF#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#62#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_44   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#83#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#72#, 8), to_unsigned(16#55#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#57#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#04#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#98#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#29#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#61#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#15#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#44#, 8), to_unsigned(16#63#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#17#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#68#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#39#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#54#, 8), to_unsigned(16#73#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#20#, 8), to_unsigned(16#07#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#56#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#05#, 8), to_unsigned(16#22#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#99#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#79#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#88#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#47#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#14#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#45#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#C4#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_44      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#69#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#83#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#D4#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#72#, 8), to_unsigned(16#55#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#06#, 8), to_unsigned(16#21#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#57#, 8), to_unsigned(16#70#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#23#, 8), to_unsigned(16#04#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#98#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#29#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#90#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#78#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#E0#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#C7#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#61#, 8), to_unsigned(16#46#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#08#, 8), to_unsigned(16#15#, 8), to_unsigned(16#32#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#44#, 8), to_unsigned(16#63#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#30#, 8), to_unsigned(16#17#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#68#, 8), to_unsigned(16#75#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#BA#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#80#, 8), to_unsigned(16#9D#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#39#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#54#, 8), to_unsigned(16#73#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#20#, 8), to_unsigned(16#07#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#71#, 8), to_unsigned(16#56#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#05#, 8), to_unsigned(16#22#, 8), to_unsigned(16#3F#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#99#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#41#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#79#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#88#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#47#, 8), to_unsigned(16#60#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#33#, 8), to_unsigned(16#14#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#62#, 8), to_unsigned(16#45#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8), to_unsigned(16#31#, 8), to_unsigned(16#2C#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#C4#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_46   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#29#, 8), to_unsigned(16#67#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#08#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#63#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#39#, 8), to_unsigned(16#77#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#18#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#41#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#76#, 8), to_unsigned(16#38#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#19#, 8), to_unsigned(16#57#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#44#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#99#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#54#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#43#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#28#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#62#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#09#, 8), to_unsigned(16#47#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#95#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_46      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#51#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1B#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#29#, 8), to_unsigned(16#67#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#B5#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#42#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#46#, 8), to_unsigned(16#08#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#63#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#52#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#CE#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#39#, 8), to_unsigned(16#77#, 8), to_unsigned(16#4D#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#73#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#18#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#41#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#64#, 8), to_unsigned(16#5E#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#14#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#76#, 8), to_unsigned(16#38#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#A4#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#69#, 8), to_unsigned(16#53#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#27#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#19#, 8), to_unsigned(16#57#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#72#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#F9#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#44#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#61#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#89#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#01#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#99#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#71#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#54#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#43#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#91#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#28#, 8), to_unsigned(16#12#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#62#, 8), to_unsigned(16#58#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#09#, 8), to_unsigned(16#47#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#DB#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#95#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_48   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#25#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#67#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#36#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#49#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#84#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#23#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#72#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#61#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#99#, 8), to_unsigned(16#05#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#54#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#91#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#16#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#47#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#70#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#21#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#63#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#32#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#29#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#56#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#45#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#14#, 8), to_unsigned(16#88#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#27#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#34#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#65#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#01#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#50#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#09#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#12#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#37#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_48      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#25#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#4A#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#D6#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#67#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#36#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#52#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#49#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#84#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#41#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#10#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#97#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#69#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#23#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#72#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#9A#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#30#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#61#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#82#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#A7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#3B#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#99#, 8), to_unsigned(16#05#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#20#, 8), to_unsigned(16#54#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#91#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#28#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#16#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#33#, 8), to_unsigned(16#47#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#70#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#55#, 8), to_unsigned(16#21#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#D2#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#4E#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#63#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#32#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#29#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#56#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#07#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#F4#, 8), to_unsigned(16#80#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#45#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#14#, 8), to_unsigned(16#88#, 8), to_unsigned(16#FC#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#E7#, 8), to_unsigned(16#93#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#19#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#27#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#76#, 8), to_unsigned(16#02#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#34#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#65#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#86#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#3F#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#01#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#50#, 8), to_unsigned(16#24#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#95#, 8), to_unsigned(16#09#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#12#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#AB#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#37#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_50   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#81#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#06#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#30#, 8), to_unsigned(16#15#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#05#, 8), to_unsigned(16#20#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#33#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#70#, 8), to_unsigned(16#55#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#46#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#56#, 8), to_unsigned(16#73#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#60#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#19#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#67#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#74#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#52#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#38#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#99#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#78#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#34#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#02#, 8), to_unsigned(16#27#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#37#, 8), to_unsigned(16#12#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#95#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#01#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#6E#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_50      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#87#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#94#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#5A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#81#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#23#, 8), to_unsigned(16#06#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#D8#, 8), to_unsigned(16#30#, 8), to_unsigned(16#15#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#82#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#05#, 8), to_unsigned(16#20#, 8), to_unsigned(16#C8#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#91#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#16#, 8), to_unsigned(16#33#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#70#, 8), to_unsigned(16#55#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#3A#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#63#, 8), to_unsigned(16#46#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#0C#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#56#, 8), to_unsigned(16#73#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#45#, 8), to_unsigned(16#60#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#19#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#53#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#40#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#65#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#50#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#09#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#AA#, 8), to_unsigned(16#42#, 8), to_unsigned(16#67#, 8), to_unsigned(16#8F#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#51#, 8), to_unsigned(16#74#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#64#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#77#, 8), to_unsigned(16#52#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#C3#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#F5#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#38#, 8), to_unsigned(16#D0#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#28#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#E5#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#99#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#D3#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#78#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#32#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#17#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#21#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#04#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#D9#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#68#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#11#, 8), to_unsigned(16#34#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#7E#, 8), to_unsigned(16#96#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#02#, 8), to_unsigned(16#27#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#6D#, 8), to_unsigned(16#85#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#48#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#37#, 8), to_unsigned(16#12#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#95#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#24#, 8), to_unsigned(16#01#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#4B#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#6E#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_52   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#94#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#46#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#39#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#19#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#78#, 8), to_unsigned(16#32#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#21#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#12#, 8), to_unsigned(16#58#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#97#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#84#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#82#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#29#, 8), to_unsigned(16#63#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#43#, 8), to_unsigned(16#09#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#22#, 8), to_unsigned(16#68#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#31#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#04#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#17#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#37#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#48#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#DC#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_52      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#13#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#94#, 8), to_unsigned(16#59#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#81#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D8#, 8), to_unsigned(16#15#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#55#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#8B#, 8), to_unsigned(16#46#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#C1#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#73#, 8), to_unsigned(16#39#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#60#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#E7#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#19#, 8), to_unsigned(16#53#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#40#, 8), to_unsigned(16#8D#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#75#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#3E#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#74#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#38#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#54#, 8), to_unsigned(16#99#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#78#, 8), to_unsigned(16#32#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#A6#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#21#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#80#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#CA#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#34#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#27#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#12#, 8), to_unsigned(16#58#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#CC#, 8), to_unsigned(16#01#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#97#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#84#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#03#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#6F#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#25#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#91#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#82#, 8), to_unsigned(16#4F#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#EE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#45#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#D1#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#56#, 8), to_unsigned(16#9B#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#29#, 8), to_unsigned(16#63#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#70#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#43#, 8), to_unsigned(16#09#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#50#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#76#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#64#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#42#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#0E#, 8), to_unsigned(16#C3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#22#, 8), to_unsigned(16#68#, 8), to_unsigned(16#A5#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#31#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#B6#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#04#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#DA#, 8), to_unsigned(16#17#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#24#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#37#, 8), to_unsigned(16#FA#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#48#, 8), to_unsigned(16#02#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#5B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#DC#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_54   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#35#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#79#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#39#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#53#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#75#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#54#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#32#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#14#, 8), to_unsigned(16#80#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#58#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#49#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#91#, 8), to_unsigned(16#05#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#63#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#09#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#42#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#28#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#68#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#24#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#02#, 8), to_unsigned(16#96#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#33#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#15#, 8), to_unsigned(16#81#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#59#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#73#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#55#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#38#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#52#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#86#, 8), to_unsigned(16#12#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#78#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#69#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#03#, 8), to_unsigned(16#97#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#43#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#29#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#44#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#62#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#08#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#48#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#90#, 8), to_unsigned(16#04#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#22#, 8), to_unsigned(16#A5#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_54      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#35#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#79#, 8), to_unsigned(16#FE#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#BE#, 8), to_unsigned(16#39#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#2A#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#53#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#75#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#66#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#18#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#72#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#54#, 8), to_unsigned(16#D3#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#32#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#93#, 8), to_unsigned(16#14#, 8), to_unsigned(16#80#, 8), to_unsigned(16#07#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#DF#, 8), to_unsigned(16#58#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#49#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#7C#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#91#, 8), to_unsigned(16#05#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#30#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#23#, 8), to_unsigned(16#A4#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#45#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#63#, 8), to_unsigned(16#F7#, 8), to_unsigned(16#70#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#09#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#3C#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#42#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#28#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#89#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#68#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#5D#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#24#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#02#, 8), to_unsigned(16#96#, 8), to_unsigned(16#11#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#33#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#92#, 8), to_unsigned(16#15#, 8), to_unsigned(16#81#, 8), to_unsigned(16#06#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#DE#, 8), to_unsigned(16#59#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#4A#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#19#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#73#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#55#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#BF#, 8), to_unsigned(16#38#, 8), to_unsigned(16#AC#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#52#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#F3#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#67#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#86#, 8), to_unsigned(16#12#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#27#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#34#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#78#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#69#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#03#, 8), to_unsigned(16#97#, 8), to_unsigned(16#10#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#65#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#50#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#43#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#29#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#44#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#E5#, 8), to_unsigned(16#62#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#08#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#A9#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#48#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#7D#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#90#, 8), to_unsigned(16#04#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#22#, 8), to_unsigned(16#A5#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_56   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#72#, 8), to_unsigned(16#47#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#93#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#05#, 8), to_unsigned(16#30#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#64#, 8), to_unsigned(16#51#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#85#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#73#, 8), to_unsigned(16#46#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#12#, 8), to_unsigned(16#27#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#84#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#65#, 8), to_unsigned(16#50#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#04#, 8), to_unsigned(16#31#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#66#, 8), to_unsigned(16#53#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#87#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#07#, 8), to_unsigned(16#32#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#09#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#70#, 8), to_unsigned(16#45#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#91#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#11#, 8), to_unsigned(16#24#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#89#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#06#, 8), to_unsigned(16#33#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#67#, 8), to_unsigned(16#52#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#10#, 8), to_unsigned(16#25#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#69#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#90#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#71#, 8), to_unsigned(16#44#, 8), to_unsigned(16#57#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_56      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#6A#, 8), to_unsigned(16#79#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#D4#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#E1#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#61#, 8), to_unsigned(16#72#, 8), to_unsigned(16#47#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#93#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#F9#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#49#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#16#, 8), to_unsigned(16#05#, 8), to_unsigned(16#30#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8E#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#A8#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#64#, 8), to_unsigned(16#51#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#28#, 8), to_unsigned(16#1D#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#A3#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#85#, 8), to_unsigned(16#96#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#92#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#EB#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#60#, 8), to_unsigned(16#73#, 8), to_unsigned(16#46#, 8), to_unsigned(16#55#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#D5#, 8), to_unsigned(16#C6#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#12#, 8), to_unsigned(16#27#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#6B#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#A2#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#84#, 8), to_unsigned(16#97#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#65#, 8), to_unsigned(16#50#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#3A#, 8), to_unsigned(16#29#, 8), to_unsigned(16#1C#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#BA#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#17#, 8), to_unsigned(16#04#, 8), to_unsigned(16#31#, 8), to_unsigned(16#22#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#66#, 8), to_unsigned(16#53#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#39#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#A1#, 8), to_unsigned(16#B2#, 8), to_unsigned(16#87#, 8), to_unsigned(16#94#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#07#, 8), to_unsigned(16#32#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#AA#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#09#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#63#, 8), to_unsigned(16#70#, 8), to_unsigned(16#45#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#91#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#E8#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#11#, 8), to_unsigned(16#24#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#68#, 8), to_unsigned(16#7B#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#89#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#D6#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#F0#, 8), to_unsigned(16#E3#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#8D#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#B8#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#15#, 8), to_unsigned(16#06#, 8), to_unsigned(16#33#, 8), to_unsigned(16#20#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#A0#, 8), to_unsigned(16#B3#, 8), to_unsigned(16#86#, 8), to_unsigned(16#95#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#67#, 8), to_unsigned(16#52#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#38#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#1E#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#88#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#AE#, 8),
     to_unsigned(16#D7#, 8), to_unsigned(16#C4#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#10#, 8), to_unsigned(16#25#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#5C#, 8), to_unsigned(16#69#, 8), to_unsigned(16#7A#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#90#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#DC#, 8), to_unsigned(16#CF#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#08#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#62#, 8), to_unsigned(16#71#, 8), to_unsigned(16#44#, 8), to_unsigned(16#57#, 8));  -- ufix8 [256]
  CONSTANT gfomegaprepowertable_data_58   : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#61#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#16#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#51#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#92#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#50#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#17#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#53#, 8), to_unsigned(16#39#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#63#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#91#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#24#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#15#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#52#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#25#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#08#, 8), to_unsigned(16#62#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#54#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#13#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#64#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#23#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#12#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#55#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#22#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#21#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#56#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#67#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#20#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#57#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#10#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#AE#, 8));  -- ufix8 [256]
  CONSTANT gfomegapowertable_data_58      : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#26#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#6A#, 8),
     to_unsigned(16#98#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#F2#, 8),
     to_unsigned(16#2D#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#61#, 8), to_unsigned(16#47#, 8),
     to_unsigned(16#B5#, 8), to_unsigned(16#93#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#DF#, 8),
     to_unsigned(16#5A#, 8), to_unsigned(16#7C#, 8), to_unsigned(16#16#, 8), to_unsigned(16#30#, 8),
     to_unsigned(16#C2#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#A8#, 8),
     to_unsigned(16#77#, 8), to_unsigned(16#51#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#1D#, 8),
     to_unsigned(16#EF#, 8), to_unsigned(16#C9#, 8), to_unsigned(16#A3#, 8), to_unsigned(16#85#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#92#, 8), to_unsigned(16#F8#, 8), to_unsigned(16#DE#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#0A#, 8), to_unsigned(16#60#, 8), to_unsigned(16#46#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#F3#, 8),
     to_unsigned(16#01#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#6B#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C8#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#84#, 8),
     to_unsigned(16#76#, 8), to_unsigned(16#50#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#1C#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#8F#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#7D#, 8), to_unsigned(16#17#, 8), to_unsigned(16#31#, 8),
     to_unsigned(16#75#, 8), to_unsigned(16#53#, 8), to_unsigned(16#39#, 8), to_unsigned(16#1F#, 8),
     to_unsigned(16#ED#, 8), to_unsigned(16#CB#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#87#, 8),
     to_unsigned(16#58#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#14#, 8), to_unsigned(16#32#, 8),
     to_unsigned(16#C0#, 8), to_unsigned(16#E6#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#2F#, 8), to_unsigned(16#09#, 8), to_unsigned(16#63#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#91#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#DD#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#24#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#9A#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#C1#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#59#, 8), to_unsigned(16#7F#, 8), to_unsigned(16#15#, 8), to_unsigned(16#33#, 8),
     to_unsigned(16#EC#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#52#, 8), to_unsigned(16#38#, 8), to_unsigned(16#1E#, 8),
     to_unsigned(16#9B#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#F1#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#25#, 8), to_unsigned(16#4F#, 8), to_unsigned(16#69#, 8),
     to_unsigned(16#B6#, 8), to_unsigned(16#90#, 8), to_unsigned(16#FA#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#2E#, 8), to_unsigned(16#08#, 8), to_unsigned(16#62#, 8), to_unsigned(16#44#, 8),
     to_unsigned(16#EA#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#A6#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#72#, 8), to_unsigned(16#54#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#C7#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#AD#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#79#, 8), to_unsigned(16#13#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#B0#, 8), to_unsigned(16#96#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#28#, 8), to_unsigned(16#0E#, 8), to_unsigned(16#64#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#BB#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#23#, 8), to_unsigned(16#49#, 8), to_unsigned(16#6F#, 8),
     to_unsigned(16#5E#, 8), to_unsigned(16#78#, 8), to_unsigned(16#12#, 8), to_unsigned(16#34#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#55#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#EB#, 8), to_unsigned(16#CD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#22#, 8), to_unsigned(16#48#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#65#, 8), to_unsigned(16#43#, 8),
     to_unsigned(16#B1#, 8), to_unsigned(16#97#, 8), to_unsigned(16#FD#, 8), to_unsigned(16#DB#, 8),
     to_unsigned(16#9F#, 8), to_unsigned(16#B9#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#21#, 8), to_unsigned(16#4B#, 8), to_unsigned(16#6D#, 8),
     to_unsigned(16#B2#, 8), to_unsigned(16#94#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#2A#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#66#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#C5#, 8), to_unsigned(16#E3#, 8), to_unsigned(16#89#, 8), to_unsigned(16#AF#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#11#, 8), to_unsigned(16#37#, 8),
     to_unsigned(16#E8#, 8), to_unsigned(16#CE#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#82#, 8),
     to_unsigned(16#70#, 8), to_unsigned(16#56#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#1A#, 8),
     to_unsigned(16#2B#, 8), to_unsigned(16#0D#, 8), to_unsigned(16#67#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#B3#, 8), to_unsigned(16#95#, 8), to_unsigned(16#FF#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#20#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#6C#, 8),
     to_unsigned(16#9E#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#F4#, 8),
     to_unsigned(16#71#, 8), to_unsigned(16#57#, 8), to_unsigned(16#3D#, 8), to_unsigned(16#1B#, 8),
     to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#5C#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#10#, 8), to_unsigned(16#36#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#E2#, 8), to_unsigned(16#88#, 8), to_unsigned(16#AE#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_74    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT cpolylogtable_table_data_76    : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#00#, 8), to_unsigned(16#00#, 8), to_unsigned(16#01#, 8), to_unsigned(16#19#, 8),
     to_unsigned(16#02#, 8), to_unsigned(16#32#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#C6#, 8),
     to_unsigned(16#03#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#33#, 8), to_unsigned(16#EE#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#68#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#04#, 8), to_unsigned(16#64#, 8), to_unsigned(16#E0#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#34#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#EF#, 8), to_unsigned(16#81#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#69#, 8), to_unsigned(16#F8#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#08#, 8), to_unsigned(16#4C#, 8), to_unsigned(16#71#, 8),
     to_unsigned(16#05#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#65#, 8), to_unsigned(16#2F#, 8),
     to_unsigned(16#E1#, 8), to_unsigned(16#24#, 8), to_unsigned(16#0F#, 8), to_unsigned(16#21#, 8),
     to_unsigned(16#35#, 8), to_unsigned(16#93#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#DA#, 8),
     to_unsigned(16#F0#, 8), to_unsigned(16#12#, 8), to_unsigned(16#82#, 8), to_unsigned(16#45#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#C2#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#27#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#B9#, 8),
     to_unsigned(16#C9#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#09#, 8), to_unsigned(16#78#, 8),
     to_unsigned(16#4D#, 8), to_unsigned(16#E4#, 8), to_unsigned(16#72#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#06#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#62#, 8),
     to_unsigned(16#66#, 8), to_unsigned(16#DD#, 8), to_unsigned(16#30#, 8), to_unsigned(16#FD#, 8),
     to_unsigned(16#E2#, 8), to_unsigned(16#98#, 8), to_unsigned(16#25#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#91#, 8), to_unsigned(16#22#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#36#, 8), to_unsigned(16#D0#, 8), to_unsigned(16#94#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#96#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#BD#, 8),
     to_unsigned(16#F1#, 8), to_unsigned(16#D2#, 8), to_unsigned(16#13#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#83#, 8), to_unsigned(16#38#, 8), to_unsigned(16#46#, 8), to_unsigned(16#40#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#42#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#48#, 8), to_unsigned(16#7E#, 8), to_unsigned(16#6E#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#28#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#85#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#3D#, 8),
     to_unsigned(16#CA#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#9F#, 8),
     to_unsigned(16#0A#, 8), to_unsigned(16#15#, 8), to_unsigned(16#79#, 8), to_unsigned(16#2B#, 8),
     to_unsigned(16#4E#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#AC#, 8),
     to_unsigned(16#73#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#57#, 8),
     to_unsigned(16#07#, 8), to_unsigned(16#70#, 8), to_unsigned(16#C0#, 8), to_unsigned(16#F7#, 8),
     to_unsigned(16#8C#, 8), to_unsigned(16#80#, 8), to_unsigned(16#63#, 8), to_unsigned(16#0D#, 8),
     to_unsigned(16#67#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#ED#, 8),
     to_unsigned(16#31#, 8), to_unsigned(16#C5#, 8), to_unsigned(16#FE#, 8), to_unsigned(16#18#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#A5#, 8), to_unsigned(16#99#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#26#, 8), to_unsigned(16#B8#, 8), to_unsigned(16#B4#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#44#, 8), to_unsigned(16#92#, 8), to_unsigned(16#D9#, 8),
     to_unsigned(16#23#, 8), to_unsigned(16#20#, 8), to_unsigned(16#89#, 8), to_unsigned(16#2E#, 8),
     to_unsigned(16#37#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#5B#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#BC#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#CD#, 8),
     to_unsigned(16#90#, 8), to_unsigned(16#87#, 8), to_unsigned(16#97#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#DC#, 8), to_unsigned(16#FC#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8),
     to_unsigned(16#F2#, 8), to_unsigned(16#56#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#AB#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#5D#, 8), to_unsigned(16#9E#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#39#, 8), to_unsigned(16#53#, 8),
     to_unsigned(16#47#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#41#, 8), to_unsigned(16#A2#, 8),
     to_unsigned(16#1F#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#43#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#B7#, 8), to_unsigned(16#7B#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#76#, 8),
     to_unsigned(16#C4#, 8), to_unsigned(16#17#, 8), to_unsigned(16#49#, 8), to_unsigned(16#EC#, 8),
     to_unsigned(16#7F#, 8), to_unsigned(16#0C#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#F6#, 8),
     to_unsigned(16#6C#, 8), to_unsigned(16#A1#, 8), to_unsigned(16#3B#, 8), to_unsigned(16#52#, 8),
     to_unsigned(16#29#, 8), to_unsigned(16#9D#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#FB#, 8), to_unsigned(16#60#, 8), to_unsigned(16#86#, 8), to_unsigned(16#B1#, 8),
     to_unsigned(16#BB#, 8), to_unsigned(16#CC#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#59#, 8), to_unsigned(16#5F#, 8), to_unsigned(16#B0#, 8),
     to_unsigned(16#9C#, 8), to_unsigned(16#A9#, 8), to_unsigned(16#A0#, 8), to_unsigned(16#51#, 8),
     to_unsigned(16#0B#, 8), to_unsigned(16#F5#, 8), to_unsigned(16#16#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#7A#, 8), to_unsigned(16#75#, 8), to_unsigned(16#2C#, 8), to_unsigned(16#D7#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#E9#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#AD#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#74#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#EA#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#50#, 8), to_unsigned(16#58#, 8), to_unsigned(16#AF#, 8));  -- ufix8 [256]
  CONSTANT alogtable_table_data_66        : vector_of_unsigned8(0 TO 255) := 
    (to_unsigned(16#01#, 8), to_unsigned(16#02#, 8), to_unsigned(16#04#, 8), to_unsigned(16#08#, 8),
     to_unsigned(16#10#, 8), to_unsigned(16#20#, 8), to_unsigned(16#40#, 8), to_unsigned(16#80#, 8),
     to_unsigned(16#1D#, 8), to_unsigned(16#3A#, 8), to_unsigned(16#74#, 8), to_unsigned(16#E8#, 8),
     to_unsigned(16#CD#, 8), to_unsigned(16#87#, 8), to_unsigned(16#13#, 8), to_unsigned(16#26#, 8),
     to_unsigned(16#4C#, 8), to_unsigned(16#98#, 8), to_unsigned(16#2D#, 8), to_unsigned(16#5A#, 8),
     to_unsigned(16#B4#, 8), to_unsigned(16#75#, 8), to_unsigned(16#EA#, 8), to_unsigned(16#C9#, 8),
     to_unsigned(16#8F#, 8), to_unsigned(16#03#, 8), to_unsigned(16#06#, 8), to_unsigned(16#0C#, 8),
     to_unsigned(16#18#, 8), to_unsigned(16#30#, 8), to_unsigned(16#60#, 8), to_unsigned(16#C0#, 8),
     to_unsigned(16#9D#, 8), to_unsigned(16#27#, 8), to_unsigned(16#4E#, 8), to_unsigned(16#9C#, 8),
     to_unsigned(16#25#, 8), to_unsigned(16#4A#, 8), to_unsigned(16#94#, 8), to_unsigned(16#35#, 8),
     to_unsigned(16#6A#, 8), to_unsigned(16#D4#, 8), to_unsigned(16#B5#, 8), to_unsigned(16#77#, 8),
     to_unsigned(16#EE#, 8), to_unsigned(16#C1#, 8), to_unsigned(16#9F#, 8), to_unsigned(16#23#, 8),
     to_unsigned(16#46#, 8), to_unsigned(16#8C#, 8), to_unsigned(16#05#, 8), to_unsigned(16#0A#, 8),
     to_unsigned(16#14#, 8), to_unsigned(16#28#, 8), to_unsigned(16#50#, 8), to_unsigned(16#A0#, 8),
     to_unsigned(16#5D#, 8), to_unsigned(16#BA#, 8), to_unsigned(16#69#, 8), to_unsigned(16#D2#, 8),
     to_unsigned(16#B9#, 8), to_unsigned(16#6F#, 8), to_unsigned(16#DE#, 8), to_unsigned(16#A1#, 8),
     to_unsigned(16#5F#, 8), to_unsigned(16#BE#, 8), to_unsigned(16#61#, 8), to_unsigned(16#C2#, 8),
     to_unsigned(16#99#, 8), to_unsigned(16#2F#, 8), to_unsigned(16#5E#, 8), to_unsigned(16#BC#, 8),
     to_unsigned(16#65#, 8), to_unsigned(16#CA#, 8), to_unsigned(16#89#, 8), to_unsigned(16#0F#, 8),
     to_unsigned(16#1E#, 8), to_unsigned(16#3C#, 8), to_unsigned(16#78#, 8), to_unsigned(16#F0#, 8),
     to_unsigned(16#FD#, 8), to_unsigned(16#E7#, 8), to_unsigned(16#D3#, 8), to_unsigned(16#BB#, 8),
     to_unsigned(16#6B#, 8), to_unsigned(16#D6#, 8), to_unsigned(16#B1#, 8), to_unsigned(16#7F#, 8),
     to_unsigned(16#FE#, 8), to_unsigned(16#E1#, 8), to_unsigned(16#DF#, 8), to_unsigned(16#A3#, 8),
     to_unsigned(16#5B#, 8), to_unsigned(16#B6#, 8), to_unsigned(16#71#, 8), to_unsigned(16#E2#, 8),
     to_unsigned(16#D9#, 8), to_unsigned(16#AF#, 8), to_unsigned(16#43#, 8), to_unsigned(16#86#, 8),
     to_unsigned(16#11#, 8), to_unsigned(16#22#, 8), to_unsigned(16#44#, 8), to_unsigned(16#88#, 8),
     to_unsigned(16#0D#, 8), to_unsigned(16#1A#, 8), to_unsigned(16#34#, 8), to_unsigned(16#68#, 8),
     to_unsigned(16#D0#, 8), to_unsigned(16#BD#, 8), to_unsigned(16#67#, 8), to_unsigned(16#CE#, 8),
     to_unsigned(16#81#, 8), to_unsigned(16#1F#, 8), to_unsigned(16#3E#, 8), to_unsigned(16#7C#, 8),
     to_unsigned(16#F8#, 8), to_unsigned(16#ED#, 8), to_unsigned(16#C7#, 8), to_unsigned(16#93#, 8),
     to_unsigned(16#3B#, 8), to_unsigned(16#76#, 8), to_unsigned(16#EC#, 8), to_unsigned(16#C5#, 8),
     to_unsigned(16#97#, 8), to_unsigned(16#33#, 8), to_unsigned(16#66#, 8), to_unsigned(16#CC#, 8),
     to_unsigned(16#85#, 8), to_unsigned(16#17#, 8), to_unsigned(16#2E#, 8), to_unsigned(16#5C#, 8),
     to_unsigned(16#B8#, 8), to_unsigned(16#6D#, 8), to_unsigned(16#DA#, 8), to_unsigned(16#A9#, 8),
     to_unsigned(16#4F#, 8), to_unsigned(16#9E#, 8), to_unsigned(16#21#, 8), to_unsigned(16#42#, 8),
     to_unsigned(16#84#, 8), to_unsigned(16#15#, 8), to_unsigned(16#2A#, 8), to_unsigned(16#54#, 8),
     to_unsigned(16#A8#, 8), to_unsigned(16#4D#, 8), to_unsigned(16#9A#, 8), to_unsigned(16#29#, 8),
     to_unsigned(16#52#, 8), to_unsigned(16#A4#, 8), to_unsigned(16#55#, 8), to_unsigned(16#AA#, 8),
     to_unsigned(16#49#, 8), to_unsigned(16#92#, 8), to_unsigned(16#39#, 8), to_unsigned(16#72#, 8),
     to_unsigned(16#E4#, 8), to_unsigned(16#D5#, 8), to_unsigned(16#B7#, 8), to_unsigned(16#73#, 8),
     to_unsigned(16#E6#, 8), to_unsigned(16#D1#, 8), to_unsigned(16#BF#, 8), to_unsigned(16#63#, 8),
     to_unsigned(16#C6#, 8), to_unsigned(16#91#, 8), to_unsigned(16#3F#, 8), to_unsigned(16#7E#, 8),
     to_unsigned(16#FC#, 8), to_unsigned(16#E5#, 8), to_unsigned(16#D7#, 8), to_unsigned(16#B3#, 8),
     to_unsigned(16#7B#, 8), to_unsigned(16#F6#, 8), to_unsigned(16#F1#, 8), to_unsigned(16#FF#, 8),
     to_unsigned(16#E3#, 8), to_unsigned(16#DB#, 8), to_unsigned(16#AB#, 8), to_unsigned(16#4B#, 8),
     to_unsigned(16#96#, 8), to_unsigned(16#31#, 8), to_unsigned(16#62#, 8), to_unsigned(16#C4#, 8),
     to_unsigned(16#95#, 8), to_unsigned(16#37#, 8), to_unsigned(16#6E#, 8), to_unsigned(16#DC#, 8),
     to_unsigned(16#A5#, 8), to_unsigned(16#57#, 8), to_unsigned(16#AE#, 8), to_unsigned(16#41#, 8),
     to_unsigned(16#82#, 8), to_unsigned(16#19#, 8), to_unsigned(16#32#, 8), to_unsigned(16#64#, 8),
     to_unsigned(16#C8#, 8), to_unsigned(16#8D#, 8), to_unsigned(16#07#, 8), to_unsigned(16#0E#, 8),
     to_unsigned(16#1C#, 8), to_unsigned(16#38#, 8), to_unsigned(16#70#, 8), to_unsigned(16#E0#, 8),
     to_unsigned(16#DD#, 8), to_unsigned(16#A7#, 8), to_unsigned(16#53#, 8), to_unsigned(16#A6#, 8),
     to_unsigned(16#51#, 8), to_unsigned(16#A2#, 8), to_unsigned(16#59#, 8), to_unsigned(16#B2#, 8),
     to_unsigned(16#79#, 8), to_unsigned(16#F2#, 8), to_unsigned(16#F9#, 8), to_unsigned(16#EF#, 8),
     to_unsigned(16#C3#, 8), to_unsigned(16#9B#, 8), to_unsigned(16#2B#, 8), to_unsigned(16#56#, 8),
     to_unsigned(16#AC#, 8), to_unsigned(16#45#, 8), to_unsigned(16#8A#, 8), to_unsigned(16#09#, 8),
     to_unsigned(16#12#, 8), to_unsigned(16#24#, 8), to_unsigned(16#48#, 8), to_unsigned(16#90#, 8),
     to_unsigned(16#3D#, 8), to_unsigned(16#7A#, 8), to_unsigned(16#F4#, 8), to_unsigned(16#F5#, 8),
     to_unsigned(16#F7#, 8), to_unsigned(16#F3#, 8), to_unsigned(16#FB#, 8), to_unsigned(16#EB#, 8),
     to_unsigned(16#CB#, 8), to_unsigned(16#8B#, 8), to_unsigned(16#0B#, 8), to_unsigned(16#16#, 8),
     to_unsigned(16#2C#, 8), to_unsigned(16#58#, 8), to_unsigned(16#B0#, 8), to_unsigned(16#7D#, 8),
     to_unsigned(16#FA#, 8), to_unsigned(16#E9#, 8), to_unsigned(16#CF#, 8), to_unsigned(16#83#, 8),
     to_unsigned(16#1B#, 8), to_unsigned(16#36#, 8), to_unsigned(16#6C#, 8), to_unsigned(16#D8#, 8),
     to_unsigned(16#AD#, 8), to_unsigned(16#47#, 8), to_unsigned(16#8E#, 8), to_unsigned(16#01#, 8));  -- ufix8 [256]

  -- Signals
  SIGNAL endin_valid                      : std_logic;  -- ufix1
  SIGNAL startValidIn                     : std_logic;  -- ufix1
  SIGNAL zeroconstBoolean                 : std_logic;  -- ufix1
  SIGNAL invertedEndIn                    : std_logic;  -- ufix1
  SIGNAL paritylength                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL prestartcurbank                  : std_logic;  -- ufix1
  SIGNAL prestartout                      : std_logic;  -- ufix1
  SIGNAL ramrdbank                        : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL bankvalid0                       : std_logic;  -- ufix1
  SIGNAL bankvalid1                       : std_logic;  -- ufix1
  SIGNAL bankvalid2                       : std_logic;  -- ufix1
  SIGNAL bankvalid3                       : std_logic;  -- ufix1
  SIGNAL rdbankvalid                      : std_logic;  -- ufix1
  SIGNAL endpacketbank3                   : std_logic;  -- ufix1
  SIGNAL inputlength                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL packetlength3                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL endpacketbank2                   : std_logic;  -- ufix1
  SIGNAL packetlength2                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL endpacketbank1                   : std_logic;  -- ufix1
  SIGNAL packetlength1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL properStart                      : std_logic;  -- ufix1
  SIGNAL startInFlg                       : std_logic;  -- ufix1
  SIGNAL rqdValid                         : std_logic;  -- ufix1
  SIGNAL dvIn                             : std_logic;  -- ufix1
  SIGNAL dvindelayed                      : std_logic;  -- ufix1
  SIGNAL startin_valid                    : std_logic;  -- ufix1
  SIGNAL ramwrcount                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL endpacketbank0                   : std_logic;  -- ufix1
  SIGNAL packetlength0                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL currentlength                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL delay3count                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL delay3max                        : std_logic;  -- ufix1
  SIGNAL ramwrbank                        : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL wrbankdecode3                    : std_logic;  -- ufix1
  SIGNAL endindelayed                     : std_logic;  -- ufix1
  SIGNAL rdbankdecode3                    : std_logic;  -- ufix1
  SIGNAL preendout                        : std_logic;  -- ufix1
  SIGNAL prevalidout                      : std_logic;  -- ufix1
  SIGNAL endreadbank3                     : std_logic;  -- ufix1
  SIGNAL holdvalid3                       : std_logic;  -- ufix1
  SIGNAL setvalid3                        : std_logic;  -- ufix1
  SIGNAL prestartbank3                    : std_logic;  -- ufix1
  SIGNAL delay2count                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL delay2max                        : std_logic;  -- ufix1
  SIGNAL wrbankdecode2                    : std_logic;  -- ufix1
  SIGNAL rdbankdecode2                    : std_logic;  -- ufix1
  SIGNAL endreadbank2                     : std_logic;  -- ufix1
  SIGNAL holdvalid2                       : std_logic;  -- ufix1
  SIGNAL setvalid2                        : std_logic;  -- ufix1
  SIGNAL prestartbank2                    : std_logic;  -- ufix1
  SIGNAL delay1count                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL delay1max                        : std_logic;  -- ufix1
  SIGNAL wrbankdecode1                    : std_logic;  -- ufix1
  SIGNAL rdbankdecode1                    : std_logic;  -- ufix1
  SIGNAL endreadbank1                     : std_logic;  -- ufix1
  SIGNAL holdvalid1                       : std_logic;  -- ufix1
  SIGNAL setvalid1                        : std_logic;  -- ufix1
  SIGNAL prestartbank1                    : std_logic;  -- ufix1
  SIGNAL delay0count                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL delay0max                        : std_logic;  -- ufix1
  SIGNAL endindelay2                      : std_logic;  -- ufix1
  SIGNAL wrbankdecode0                    : std_logic;  -- ufix1
  SIGNAL endin_packet                     : std_logic;  -- ufix1
  SIGNAL notendin                         : std_logic;  -- ufix1
  SIGNAL inpacket                         : std_logic;  -- ufix1
  SIGNAL notdonepacket                    : std_logic;  -- ufix1
  SIGNAL chkStartInFlg                    : std_logic;  -- ufix1
  SIGNAL startInFlgAndChk0                : std_logic;  -- ufix1
  SIGNAL startInFlgRst                    : std_logic;  -- ufix1
  SIGNAL startInFlgAndEndIn               : std_logic;  -- ufix1
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_endout_1 : std_logic;
  SIGNAL nxtFrame                         : std_logic;  -- ufix1
  SIGNAL nxtFrAndStartIn                  : std_logic;  -- ufix1
  SIGNAL p2endout                         : std_logic;  -- ufix1
  SIGNAL switch_compare_1                 : std_logic;
  SIGNAL inpacketnext                     : std_logic;  -- ufix1
  SIGNAL rdbankdecode0                    : std_logic;  -- ufix1
  SIGNAL endreadbank0                     : std_logic;  -- ufix1
  SIGNAL holdvalid0                       : std_logic;  -- ufix1
  SIGNAL setvalid0                        : std_logic;  -- ufix1
  SIGNAL prestartbank0                    : std_logic;  -- ufix1
  SIGNAL ramrdcount                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL relop_relop1                     : std_logic;
  SIGNAL notcountstop                     : std_logic;  -- ufix1
  SIGNAL ramrdennext                      : std_logic;  -- ufix1
  SIGNAL ramrden                          : std_logic;  -- ufix1
  SIGNAL ramrdencontinue                  : std_logic;  -- ufix1
  SIGNAL p2dvout                          : std_logic;  -- ufix1
  SIGNAL zeroconst_1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_in_unsigned : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL datainreg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ramwraddr                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL ramrdaddr                        : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL ramrddata                        : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL ramrddata_unsigned               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL oneconst_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL endindelay3                      : std_logic;  -- ufix1
  SIGNAL fsmrun                           : std_logic;  -- ufix1
  SIGNAL fsmnotmax                        : std_logic;  -- ufix1
  SIGNAL fsmcontinue                      : std_logic;  -- ufix1
  SIGNAL fsmrunnext                       : std_logic;  -- ufix1
  SIGNAL fsmcount                         : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL fsmmax                           : std_logic;  -- ufix1
  SIGNAL fsmdone                          : std_logic;  -- ufix1
  SIGNAL omegadone                        : std_logic;  -- ufix1
  SIGNAL relop_relop1_1                   : std_logic;
  SIGNAL convnotdone                      : std_logic;  -- ufix1
  SIGNAL convrun                          : std_logic;  -- ufix1
  SIGNAL convcontinue                     : std_logic;  -- ufix1
  SIGNAL convrunnext                      : std_logic;  -- ufix1
  SIGNAL convcountreset                   : std_logic;  -- ufix1
  SIGNAL convcount                        : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL omegacount                       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL omegacounten                     : std_logic;  -- ufix1
  SIGNAL convdonenext                     : std_logic;  -- ufix1
  SIGNAL convdone                         : std_logic;  -- ufix1
  SIGNAL masseybank                       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL convbank                         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL prerunbank                       : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL chienprerunsellen                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL paritylengthplusone              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienprerunlencomp               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienprerunlength                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienprerundone                  : std_logic;  -- ufix1
  SIGNAL chienprerunnotdone               : std_logic;  -- ufix1
  SIGNAL chienprerun                      : std_logic;  -- ufix1
  SIGNAL chienpreruncontinue              : std_logic;  -- ufix1
  SIGNAL chienprerunnext                  : std_logic;  -- ufix1
  SIGNAL chienpreruncount                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL relop_relop1_2                   : std_logic;
  SIGNAL chienprerundonenext              : std_logic;  -- ufix1
  SIGNAL chienpowermax                    : std_logic;  -- ufix1
  SIGNAL chiennotdone                     : std_logic;  -- ufix1
  SIGNAL chienrun                         : std_logic;  -- ufix1
  SIGNAL chiencontinue                    : std_logic;  -- ufix1
  SIGNAL chienrunnext                     : std_logic;  -- ufix1
  SIGNAL chienpower_1                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chiendone                        : std_logic;  -- ufix1
  SIGNAL omegapoweren                     : std_logic;  -- ufix1
  SIGNAL omegaprepoweren                  : std_logic;  -- ufix1
  SIGNAL countone_1                       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL fsmonecount                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL countzero_1                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL onebit                           : std_logic;  -- ufix1
  SIGNAL holdregen                        : std_logic;  -- ufix1
  SIGNAL startindelayed                   : std_logic;  -- ufix1
  SIGNAL syndromereg                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_1                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_1               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_1                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_1                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_2                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_2                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_2                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_2                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_2               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_2                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_2                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_3                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_3                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_3                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_3                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_3               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_3                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_3                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_4                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_4                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_4                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_4               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_4                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_4                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_5                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_5                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_5                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_5                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_5               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_5                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_5                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_6                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_6                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_6                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_6                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_6               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_6                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_6                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_7                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_7                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_7                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_7                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_7               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_7                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_7                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_8                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_8                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_8                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_8                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_8               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_8                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_8                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_9                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_9                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_9                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_9                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_9               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_9                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_9                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_10                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_10                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_10                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_10                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_10              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_10                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_10               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_11                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_11                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_11                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_11                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_11              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_11                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_11               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_12                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_12                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_12                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_12              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_12                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_12               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_13                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_13                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_13                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_13                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_13              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_13                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_13               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_14                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_14                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL powertableout_14                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_14                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_14              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL holdin_14                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdreg_14               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromereg_15                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromegate_15                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xorfeedback_15                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalsyndromereg_15              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeholdmux                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL synzero                          : std_logic;  -- ufix1
  SIGNAL fsmrunearly                      : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftnext            : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg             : std_logic;  -- ufix1
  SIGNAL synlog                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromeshiftreg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL moduloconst                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL zerobit                          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftnext_1          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_1           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_1               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_2          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_2           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_2               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_3          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_3           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_3               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_4          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_4           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_4               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_5          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_5           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_5               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_6          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_6           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_6               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_7          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_7           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_7               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_8          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_8           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_8               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_9          : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_9           : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_9               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_10         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_10          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_10              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_11         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_11          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_11              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_12         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_12          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_12              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_13         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_13          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_13              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_14         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_14          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_14              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL syndromezeroshiftnext_15         : std_logic;  -- ufix1
  SIGNAL syndromezeroshiftreg_15          : std_logic;  -- ufix1
  SIGNAL syndromeshiftreg_15              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd                      : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p1polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctionlog                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap                     : std_logic;  -- ufix1
  SIGNAL ppolymodresult                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL currentshift                     : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL ppolyzero                        : std_logic;  -- ufix1
  SIGNAL ppolymulresult                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c1poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly1xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next1cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd                           : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c16poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap                          : std_logic;  -- ufix1
  SIGNAL modresult                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_1                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p16polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_1                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_1                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c15poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next15ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL lregen                           : std_logic;  -- ufix1
  SIGNAL p15poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p14poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p13poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p12poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p11poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p10poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p9poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p8poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p7poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p6poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p5poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p4poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p3poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p2poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p1poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_1                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_1                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly16xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next16cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyen                          : std_logic;  -- ufix1
  SIGNAL cpolyzero                        : std_logic;  -- ufix1
  SIGNAL nextlcount                       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL lgreatereq                       : std_logic;  -- ufix1
  SIGNAL lregmux_1                        : std_logic;  -- ufix1
  SIGNAL lreg                             : std_logic;  -- ufix1
  SIGNAL lreginv                          : std_logic;  -- ufix1
  SIGNAL mulzero                          : std_logic;  -- ufix1
  SIGNAL mulresult                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_1                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_1                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_1                        : std_logic;  -- ufix1
  SIGNAL modresult_1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_2                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_2                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_2                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p15polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_2                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_2                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_2                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_2                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c14poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next14ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_2                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_2                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly15xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next15cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_1                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_1                     : std_logic;  -- ufix1
  SIGNAL lregmux_3                        : std_logic;  -- ufix1
  SIGNAL lreg_1                           : std_logic;  -- ufix1
  SIGNAL lreginv_1                        : std_logic;  -- ufix1
  SIGNAL mulzero_1                        : std_logic;  -- ufix1
  SIGNAL mulresult_1                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_2                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_2                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_2                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_2                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_2                        : std_logic;  -- ufix1
  SIGNAL modresult_2                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_2                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_3                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_3                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_3                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p14polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_3                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_3                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_3                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_3                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c13poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next13ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_3                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_3                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly14xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next14cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_2                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_2                     : std_logic;  -- ufix1
  SIGNAL lregmux_5                        : std_logic;  -- ufix1
  SIGNAL lreg_2                           : std_logic;  -- ufix1
  SIGNAL lreginv_2                        : std_logic;  -- ufix1
  SIGNAL mulzero_2                        : std_logic;  -- ufix1
  SIGNAL mulresult_2                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_3                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_3                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_3                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_3                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_3                        : std_logic;  -- ufix1
  SIGNAL modresult_3                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_3                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_4                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_4                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p13polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_4                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_4                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_4                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_4                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c12poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next12ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_4                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_4                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly13xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next13cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_3                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_3                     : std_logic;  -- ufix1
  SIGNAL lregmux_7                        : std_logic;  -- ufix1
  SIGNAL lreg_3                           : std_logic;  -- ufix1
  SIGNAL lreginv_3                        : std_logic;  -- ufix1
  SIGNAL mulzero_3                        : std_logic;  -- ufix1
  SIGNAL mulresult_3                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_4                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_4                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_4                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_4                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_4                        : std_logic;  -- ufix1
  SIGNAL modresult_4                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_4                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_5                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_5                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_5                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p12polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_5                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_5                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_5                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_5                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c11poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next11ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_5                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_5                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly12xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next12cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_4                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_4                     : std_logic;  -- ufix1
  SIGNAL lregmux_9                        : std_logic;  -- ufix1
  SIGNAL lreg_4                           : std_logic;  -- ufix1
  SIGNAL lreginv_4                        : std_logic;  -- ufix1
  SIGNAL mulzero_4                        : std_logic;  -- ufix1
  SIGNAL mulresult_4                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_5                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_5                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_5                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_5                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_5                        : std_logic;  -- ufix1
  SIGNAL modresult_5                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_5                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_6                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_6                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_6                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p11polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_6                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_6                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_6                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_6                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c10poly                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next10ppoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_6                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_6                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly11xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next11cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_5                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_5                     : std_logic;  -- ufix1
  SIGNAL lregmux_11                       : std_logic;  -- ufix1
  SIGNAL lreg_5                           : std_logic;  -- ufix1
  SIGNAL lreginv_5                        : std_logic;  -- ufix1
  SIGNAL mulzero_5                        : std_logic;  -- ufix1
  SIGNAL mulresult_5                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_6                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_6                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_6                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_6                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_6                        : std_logic;  -- ufix1
  SIGNAL modresult_6                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_6                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_7                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_7                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_7                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p10polyshift                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_7                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_7                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_7                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_7                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c9poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next9ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_7                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_7                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly10xor                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next10cpoly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_6                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_6                     : std_logic;  -- ufix1
  SIGNAL lregmux_13                       : std_logic;  -- ufix1
  SIGNAL lreg_6                           : std_logic;  -- ufix1
  SIGNAL lreginv_6                        : std_logic;  -- ufix1
  SIGNAL mulzero_6                        : std_logic;  -- ufix1
  SIGNAL mulresult_6                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_7                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_7                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_7                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_7                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_7                        : std_logic;  -- ufix1
  SIGNAL modresult_7                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_7                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_8                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_8                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_8                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p9polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_8                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_8                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_8                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_8                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c8poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next8ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_8                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_8                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly9xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next9cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_7                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_7                     : std_logic;  -- ufix1
  SIGNAL lregmux_15                       : std_logic;  -- ufix1
  SIGNAL lreg_7                           : std_logic;  -- ufix1
  SIGNAL lreginv_7                        : std_logic;  -- ufix1
  SIGNAL mulzero_7                        : std_logic;  -- ufix1
  SIGNAL mulresult_7                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_8                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_8                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_8                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_8                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_8                        : std_logic;  -- ufix1
  SIGNAL modresult_8                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_8                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_9                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_9                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_9                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p8polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_9                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_9                   : std_logic;  -- ufix1
  SIGNAL ppolymodresult_9                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_9                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c7poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next7ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_9                      : std_logic;  -- ufix1
  SIGNAL ppolymulresult_9                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly8xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next8cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_8                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_8                     : std_logic;  -- ufix1
  SIGNAL lregmux_17                       : std_logic;  -- ufix1
  SIGNAL lreg_8                           : std_logic;  -- ufix1
  SIGNAL lreginv_8                        : std_logic;  -- ufix1
  SIGNAL mulzero_8                        : std_logic;  -- ufix1
  SIGNAL mulresult_8                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_9                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_9                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_9                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_9                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_9                        : std_logic;  -- ufix1
  SIGNAL modresult_9                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_9                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_10                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_10                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_10                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p7polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_10                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_10                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_10                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_10                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c6poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next6ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_10                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_10                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly7xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next7cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_9                      : std_logic;  -- ufix1
  SIGNAL lgreatereq_9                     : std_logic;  -- ufix1
  SIGNAL lregmux_19                       : std_logic;  -- ufix1
  SIGNAL lreg_9                           : std_logic;  -- ufix1
  SIGNAL lreginv_9                        : std_logic;  -- ufix1
  SIGNAL mulzero_9                        : std_logic;  -- ufix1
  SIGNAL mulresult_9                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_10                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_10                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_10                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_10                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_10                       : std_logic;  -- ufix1
  SIGNAL modresult_10                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_10                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_11                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_11                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_11                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p6polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_11                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_11                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_11                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_11                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c5poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next5ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_11                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_11                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly6xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next6cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_10                     : std_logic;  -- ufix1
  SIGNAL lgreatereq_10                    : std_logic;  -- ufix1
  SIGNAL lregmux_21                       : std_logic;  -- ufix1
  SIGNAL lreg_10                          : std_logic;  -- ufix1
  SIGNAL lreginv_10                       : std_logic;  -- ufix1
  SIGNAL mulzero_10                       : std_logic;  -- ufix1
  SIGNAL mulresult_10                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_11                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_11                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_11                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_11                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_11                       : std_logic;  -- ufix1
  SIGNAL modresult_11                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_11                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_12                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_12                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p5polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_12                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_12                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_12                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_12                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c4poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next4ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_12                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_12                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly5xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next5cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_11                     : std_logic;  -- ufix1
  SIGNAL lgreatereq_11                    : std_logic;  -- ufix1
  SIGNAL lregmux_23                       : std_logic;  -- ufix1
  SIGNAL lreg_11                          : std_logic;  -- ufix1
  SIGNAL lreginv_11                       : std_logic;  -- ufix1
  SIGNAL mulzero_11                       : std_logic;  -- ufix1
  SIGNAL mulresult_11                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_12                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_12                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_12                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_12                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_12                       : std_logic;  -- ufix1
  SIGNAL modresult_12                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_12                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_13                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_13                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_13                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p4polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_13                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_13                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_13                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_13                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c3poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next3ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_13                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_13                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly4xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next4cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_12                     : std_logic;  -- ufix1
  SIGNAL lgreatereq_12                    : std_logic;  -- ufix1
  SIGNAL lregmux_25                       : std_logic;  -- ufix1
  SIGNAL lreg_12                          : std_logic;  -- ufix1
  SIGNAL lreginv_12                       : std_logic;  -- ufix1
  SIGNAL mulzero_12                       : std_logic;  -- ufix1
  SIGNAL mulresult_12                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_13                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_13                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_13                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_13                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_13                       : std_logic;  -- ufix1
  SIGNAL modresult_13                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_13                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_14                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_14                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_14                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL p3polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_14                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_14                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_14                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_14                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL c2poly                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next2ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyzero_14                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_14                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly3xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next3cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_13                     : std_logic;  -- ufix1
  SIGNAL lgreatereq_13                    : std_logic;  -- ufix1
  SIGNAL lregmux_27                       : std_logic;  -- ufix1
  SIGNAL lreg_13                          : std_logic;  -- ufix1
  SIGNAL lreginv_13                       : std_logic;  -- ufix1
  SIGNAL mulzero_13                       : std_logic;  -- ufix1
  SIGNAL mulresult_13                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_14                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_14                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_14                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_14                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_14                       : std_logic;  -- ufix1
  SIGNAL modresult_14                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_14                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogadd_15                   : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL ppolyreduced_15                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogslice_15                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctionadd                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL correctionreduced                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctionslice                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dvalue                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dmmux                            : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dm                               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dmlog                            : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dminvlog                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dvaluelog                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctionwrap                   : std_logic;  -- ufix1
  SIGNAL p2polyshift                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylog_15                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolylogwrap_15                  : std_logic;  -- ufix1
  SIGNAL ppolymodresult_15                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL ppolyalogout_15                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next1ppoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL shiftadd                         : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL nextshift                        : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL dzero                            : std_logic;  -- ufix1
  SIGNAL currentshiften                   : std_logic;  -- ufix1
  SIGNAL ppolyzero_15                     : std_logic;  -- ufix1
  SIGNAL ppolymulresult_15                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpoly2xor                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL next2cpoly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_14                     : std_logic;  -- ufix1
  SIGNAL lgreatereq_14                    : std_logic;  -- ufix1
  SIGNAL lregmux_29                       : std_logic;  -- ufix1
  SIGNAL lreg_14                          : std_logic;  -- ufix1
  SIGNAL lreginv_14                       : std_logic;  -- ufix1
  SIGNAL mulzero_14                       : std_logic;  -- ufix1
  SIGNAL mulresult_14                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logadd_15                        : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL logaddreduced_15                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logslice_15                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolylog_15                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL logwrap_15                       : std_logic;  -- ufix1
  SIGNAL modresult_15                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL alogout_15                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL cpolyzero_15                     : std_logic;  -- ufix1
  SIGNAL lcount                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL lcountsub                        : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL lcountextend                     : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL twolcount                        : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL relop_relop1_3                   : std_logic;
  SIGNAL dupdate                          : std_logic;  -- ufix1
  SIGNAL updatelength                     : std_logic;  -- ufix1
  SIGNAL lreg_15                          : std_logic;  -- ufix1
  SIGNAL lreginv_15                       : std_logic;  -- ufix1
  SIGNAL mulzero_15                       : std_logic;  -- ufix1
  SIGNAL mulresult_15                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_2                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_3                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_4                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_5                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_6                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_7                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_8                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_9                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_10                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_11                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_12                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL xortree_13                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL dnotzero                         : std_logic;  -- ufix1
  SIGNAL errloc1poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien1prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg1prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien1reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg1next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc2poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg2prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg2next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc3poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg3prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg3next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc4poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg4prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg4next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc5poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg5prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg5next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc6poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg6prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg6next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc7poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg7prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg7next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc8poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg8prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg8next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc9poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9prereg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg9prenext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9reg                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg9next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc10poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg10prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg10next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc11poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg11prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg11next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc12poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg12prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg12next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc13poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg13prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg13next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc14poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg14prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg14next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc15poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg15prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg15next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errloc16poly                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien16prereg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien16prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg16prenext                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien16reg                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien16powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienreg16next                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienvalue                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienzero                        : std_logic;  -- ufix1
  SIGNAL chienzeroroot                    : std_logic;  -- ufix1
  SIGNAL loadroots                        : std_logic;  -- ufix1
  SIGNAL errload1next                     : std_logic;  -- ufix1
  SIGNAL errload1reg                      : std_logic;  -- ufix1
  SIGNAL chien1root                       : std_logic;  -- ufix1
  SIGNAL errlocation1next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation1reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe1reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload2next                     : std_logic;  -- ufix1
  SIGNAL errload2reg                      : std_logic;  -- ufix1
  SIGNAL chien2root                       : std_logic;  -- ufix1
  SIGNAL errlocation2next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation2reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe2reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload3next                     : std_logic;  -- ufix1
  SIGNAL errload3reg                      : std_logic;  -- ufix1
  SIGNAL chien3root                       : std_logic;  -- ufix1
  SIGNAL errlocation3next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation3reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe3reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload4next                     : std_logic;  -- ufix1
  SIGNAL errload4reg                      : std_logic;  -- ufix1
  SIGNAL chien4root                       : std_logic;  -- ufix1
  SIGNAL errlocation4next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation4reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe4reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload5next                     : std_logic;  -- ufix1
  SIGNAL errload5reg                      : std_logic;  -- ufix1
  SIGNAL chien5root                       : std_logic;  -- ufix1
  SIGNAL errlocation5next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation5reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe5reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload6next                     : std_logic;  -- ufix1
  SIGNAL errload6reg                      : std_logic;  -- ufix1
  SIGNAL chien6root                       : std_logic;  -- ufix1
  SIGNAL errlocation6next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation6reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe6reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload7next                     : std_logic;  -- ufix1
  SIGNAL errload7reg                      : std_logic;  -- ufix1
  SIGNAL chien7root                       : std_logic;  -- ufix1
  SIGNAL errlocation7next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation7reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe7reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errload8next                     : std_logic;  -- ufix1
  SIGNAL errload8reg                      : std_logic;  -- ufix1
  SIGNAL chien8root                       : std_logic;  -- ufix1
  SIGNAL errlocation8next                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation8reg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocationpipe8reg              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL fulllength                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL erroffset                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL nroots                           : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL nrootsreg                        : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL nrootsstart                      : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL oneconst1                        : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocpolylen                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL errlocpolysub                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL relop_relop1_4                   : std_logic;
  SIGNAL errcountuncheck                  : std_logic;  -- ufix1
  SIGNAL errcountuncheckSampled           : std_logic;  -- ufix1
  SIGNAL relop_relop1_5                   : std_logic;
  SIGNAL errNotCorrectableFlg             : std_logic;  -- ufix1
  SIGNAL errcountvalue                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL relop_relop1_6                   : std_logic;
  SIGNAL errcount                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errlocation                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL finalerrloc                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL relop_relop1_7                   : std_logic;
  SIGNAL errcountreset                    : std_logic;  -- ufix1
  SIGNAL erradvance                       : std_logic;  -- ufix1
  SIGNAL errcountgrtzero                  : std_logic;  -- ufix1
  SIGNAL omega1comp                       : std_logic;  -- ufix1
  SIGNAL omega1update                     : std_logic;  -- ufix1
  SIGNAL omega1en                         : std_logic;  -- ufix1
  SIGNAL omega2comp                       : std_logic;  -- ufix1
  SIGNAL omega2update                     : std_logic;  -- ufix1
  SIGNAL omega2en                         : std_logic;  -- ufix1
  SIGNAL omega3comp                       : std_logic;  -- ufix1
  SIGNAL omega3update                     : std_logic;  -- ufix1
  SIGNAL omega3en                         : std_logic;  -- ufix1
  SIGNAL omega4comp                       : std_logic;  -- ufix1
  SIGNAL omega4update                     : std_logic;  -- ufix1
  SIGNAL omega4en                         : std_logic;  -- ufix1
  SIGNAL omega5comp                       : std_logic;  -- ufix1
  SIGNAL omega5update                     : std_logic;  -- ufix1
  SIGNAL omega5en                         : std_logic;  -- ufix1
  SIGNAL omega6comp                       : std_logic;  -- ufix1
  SIGNAL omega6update                     : std_logic;  -- ufix1
  SIGNAL omega6en                         : std_logic;  -- ufix1
  SIGNAL omega7comp                       : std_logic;  -- ufix1
  SIGNAL omega7update                     : std_logic;  -- ufix1
  SIGNAL omega7en                         : std_logic;  -- ufix1
  SIGNAL omega8comp                       : std_logic;  -- ufix1
  SIGNAL omega8update                     : std_logic;  -- ufix1
  SIGNAL omega8en                         : std_logic;  -- ufix1
  SIGNAL omega9comp                       : std_logic;  -- ufix1
  SIGNAL omega9update                     : std_logic;  -- ufix1
  SIGNAL omega9en                         : std_logic;  -- ufix1
  SIGNAL omega10comp                      : std_logic;  -- ufix1
  SIGNAL omega10update                    : std_logic;  -- ufix1
  SIGNAL omega10en                        : std_logic;  -- ufix1
  SIGNAL omega11comp                      : std_logic;  -- ufix1
  SIGNAL omega11update                    : std_logic;  -- ufix1
  SIGNAL omega11en                        : std_logic;  -- ufix1
  SIGNAL omega12comp                      : std_logic;  -- ufix1
  SIGNAL omega12update                    : std_logic;  -- ufix1
  SIGNAL omega12en                        : std_logic;  -- ufix1
  SIGNAL omega13comp                      : std_logic;  -- ufix1
  SIGNAL omega13update                    : std_logic;  -- ufix1
  SIGNAL omega13en                        : std_logic;  -- ufix1
  SIGNAL omega14comp                      : std_logic;  -- ufix1
  SIGNAL omega14update                    : std_logic;  -- ufix1
  SIGNAL omega14en                        : std_logic;  -- ufix1
  SIGNAL omega15comp                      : std_logic;  -- ufix1
  SIGNAL omega15update                    : std_logic;  -- ufix1
  SIGNAL omega15en                        : std_logic;  -- ufix1
  SIGNAL omega16comp                      : std_logic;  -- ufix1
  SIGNAL omega16update                    : std_logic;  -- ufix1
  SIGNAL omega16en                        : std_logic;  -- ufix1
  SIGNAL chien1synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien2synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien3synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien4synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien5synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien6synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien7synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien8synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien9synreg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien10synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien11synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien12synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien13synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien14synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien15synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chien16synreg                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convsyndrome                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convsynzero                      : std_logic;  -- ufix1
  SIGNAL errlocaddr                       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL converrloc                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convsyndromelog                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL converrloclog                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convlogadd                       : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL convlogwrap                      : std_logic;  -- ufix1
  SIGNAL convlogslice                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL converrzero                      : std_logic;  -- ufix1
  SIGNAL convzero                         : std_logic;  -- ufix1
  SIGNAL convlogaddreduced                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convmodresult                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convalogout                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convresult                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL convxor                          : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10next                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10poly                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1poly                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omegapolymux                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1next                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega1powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega2xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega3xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega4xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega5xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega6xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega7xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega8xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9prepowerreg                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9prepowertable              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9prepowernext               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9powerreg                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9powertable                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9powernext                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega9xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega10xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega11xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega12xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega13xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega14xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega15xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16prepowerreg               : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16prepowertable             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16prepowernext              : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16powerreg                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16powertable                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omega16powernext                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omegavalue                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omegazero                        : std_logic;  -- ufix1
  SIGNAL deriv4xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL deriv6xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL deriv8xortree                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL deriv10xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL deriv12xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL deriv14xortree                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL derivvalue                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL derivvaluelog                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL derivvaluelog_1                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL omegavaluelog                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctlogadd                    : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL correctlogwrap                   : std_logic;  -- ufix1
  SIGNAL correctlogslice                  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chiennotzero                     : std_logic;  -- ufix1
  SIGNAL correctzero                      : std_logic;  -- ufix1
  SIGNAL correctlogaddreduced             : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctmodresult                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctalogout                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctresult                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue1next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue1reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe1reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue2next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue2reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe2reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue3next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue3reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe3reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue4next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue4reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe4reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue5next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue5reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe5reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue6next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue6reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe6reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue7next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue7reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe7reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue8next                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue8reg                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvaluepipe8reg                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL errvalue                         : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correctionnext                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL correction                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL predataout                       : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL gatedataout                      : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL Integer_Output_RS_Decoder_HDL_Optimized_out_tmp : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL p2startout                       : std_logic;  -- ufix1
  SIGNAL errvalid1next                    : std_logic;  -- ufix1
  SIGNAL errvalid1reg                     : std_logic;  -- ufix1
  SIGNAL errvalid2next                    : std_logic;  -- ufix1
  SIGNAL errvalid2reg                     : std_logic;  -- ufix1
  SIGNAL errvalid3next                    : std_logic;  -- ufix1
  SIGNAL errvalid3reg                     : std_logic;  -- ufix1
  SIGNAL errvalid4next                    : std_logic;  -- ufix1
  SIGNAL errvalid4reg                     : std_logic;  -- ufix1
  SIGNAL errvalid5next                    : std_logic;  -- ufix1
  SIGNAL errvalid5reg                     : std_logic;  -- ufix1
  SIGNAL errvalid6next                    : std_logic;  -- ufix1
  SIGNAL errvalid6reg                     : std_logic;  -- ufix1
  SIGNAL errvalid7next                    : std_logic;  -- ufix1
  SIGNAL errvalid7reg                     : std_logic;  -- ufix1
  SIGNAL errvalid8next                    : std_logic;  -- ufix1
  SIGNAL errvalid8reg                     : std_logic;  -- ufix1
  SIGNAL chienuncorrectedroot             : std_logic;  -- ufix1
  SIGNAL prerootclken                     : std_logic;  -- ufix1
  SIGNAL chienpre2xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre3xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre4xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre5xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre6xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre7xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre8xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre9xortree                 : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre10xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre11xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre12xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre13xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre14xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienpre15xortree                : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienprevalue                    : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL chienprezero                     : std_logic;  -- ufix1
  SIGNAL convdonedelay1                   : std_logic;  -- ufix1
  SIGNAL notconvdonedelay1                : std_logic;  -- ufix1
  SIGNAL syndrome1zero                    : std_logic;  -- ufix1
  SIGNAL syndrome2zero                    : std_logic;  -- ufix1
  SIGNAL syndrome3zero                    : std_logic;  -- ufix1
  SIGNAL syndrome4zero                    : std_logic;  -- ufix1
  SIGNAL syndrome5zero                    : std_logic;  -- ufix1
  SIGNAL syndrome6zero                    : std_logic;  -- ufix1
  SIGNAL syndrome7zero                    : std_logic;  -- ufix1
  SIGNAL syndrome8zero                    : std_logic;  -- ufix1
  SIGNAL syndrome9zero                    : std_logic;  -- ufix1
  SIGNAL syndrome10zero                   : std_logic;  -- ufix1
  SIGNAL syndrome11zero                   : std_logic;  -- ufix1
  SIGNAL syndrome12zero                   : std_logic;  -- ufix1
  SIGNAL syndrome13zero                   : std_logic;  -- ufix1
  SIGNAL syndrome14zero                   : std_logic;  -- ufix1
  SIGNAL syndrome15zero                   : std_logic;  -- ufix1
  SIGNAL syndrome16zero                   : std_logic;  -- ufix1
  SIGNAL allsynzero                       : std_logic;  -- ufix1
  SIGNAL notallsynzero                    : std_logic;  -- ufix1
  SIGNAL haserrorsreg                     : std_logic;  -- ufix1
  SIGNAL haserrorsfsmreg                  : std_logic;  -- ufix1
  SIGNAL haserrorsconvreg                 : std_logic;  -- ufix1
  SIGNAL chienprezerogated                : std_logic;  -- ufix1
  SIGNAL uncorrectedpreroot               : std_logic;  -- ufix1
  SIGNAL preroothold                      : std_logic;  -- ufix1
  SIGNAL prerootswitch                    : std_logic;  -- ufix1
  SIGNAL forceerrorroot                   : std_logic;  -- ufix1
  SIGNAL uncorrectedroot                  : std_logic;  -- ufix1
  SIGNAL uncorrectednext                  : std_logic;  -- ufix1
  SIGNAL uncorrected                      : std_logic;  -- ufix1
  SIGNAL errvalidpipe1reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe2reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe3reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe4reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe5reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe6reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe7reg                 : std_logic;  -- ufix1
  SIGNAL errvalidpipe8reg                 : std_logic;  -- ufix1
  SIGNAL haserrorschienprereg             : std_logic;  -- ufix1
  SIGNAL haserrorschienreg                : std_logic;  -- ufix1
  SIGNAL anyerr                           : std_logic;  -- ufix1
  SIGNAL ordererr                         : std_logic;  -- ufix1
  SIGNAL anyuncorrect                     : std_logic;  -- ufix1
  SIGNAL anyuncorrectreg                  : std_logic;  -- ufix1
  SIGNAL preerrout                        : std_logic;  -- ufix1
  SIGNAL p2errout                         : std_logic;  -- ufix1

BEGIN
  u_RSDataRAM_generic : SimpleDualPortRAM_generic
    GENERIC MAP( AddrWidth => 10,
                 DataWidth => 8
                 )
    PORT MAP( clk => clk,
              enb => enb,
              wr_din => std_logic_vector(datainreg),
              wr_addr => std_logic_vector(ramwraddr),
              wr_en => dvindelayed,  -- ufix1
              rd_addr => std_logic_vector(ramrdaddr),
              dout => ramrddata
              );

  endin_valid <= Integer_Output_RS_Decoder_HDL_Optimized_end AND Integer_Output_RS_Decoder_HDL_Optimized_datavalid;

  startValidIn <= Integer_Output_RS_Decoder_HDL_Optimized_start AND Integer_Output_RS_Decoder_HDL_Optimized_datavalid;

  zeroconstBoolean <= '0';

  invertedEndIn <=  NOT Integer_Output_RS_Decoder_HDL_Optimized_end;

  paritylength <= to_unsigned(16#10#, 8);

  prestartbankreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prestartout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        prestartout <= prestartcurbank;
      END IF;
    END IF;
  END PROCESS prestartbankreg_process;


  
  rdbankvalid <= bankvalid0 WHEN ramrdbank = to_unsigned(16#0#, 2) ELSE
      bankvalid1 WHEN ramrdbank = to_unsigned(16#1#, 2) ELSE
      bankvalid2 WHEN ramrdbank = to_unsigned(16#2#, 2) ELSE
      bankvalid3;

  packetlen3reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      packetlength3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endpacketbank3 = '1' THEN
        packetlength3 <= inputlength;
      END IF;
    END IF;
  END PROCESS packetlen3reg_process;


  packetlen2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      packetlength2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endpacketbank2 = '1' THEN
        packetlength2 <= inputlength;
      END IF;
    END IF;
  END PROCESS packetlen2reg_process;


  packetlen1reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      packetlength1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endpacketbank1 = '1' THEN
        packetlength1 <= inputlength;
      END IF;
    END IF;
  END PROCESS packetlen1reg_process;


  rqdValid <= properStart OR startInFlg;

  dvIn <= rqdValid AND Integer_Output_RS_Decoder_HDL_Optimized_datavalid;

  dvdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dvindelayed <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        dvindelayed <= dvIn;
      END IF;
    END IF;
  END PROCESS dvdelay_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 255
  wraddrcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ramwrcount <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startin_valid = '1' THEN 
          ramwrcount <= to_unsigned(16#00#, 8);
        ELSIF dvindelayed = '1' THEN 
          ramwrcount <= ramwrcount + to_unsigned(16#01#, 8);
        END IF;
      END IF;
    END IF;
  END PROCESS wraddrcounter_process;


  inputlength <= ramwrcount - paritylength;

  packetlen0reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      packetlength0 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endpacketbank0 = '1' THEN
        packetlength0 <= inputlength;
      END IF;
    END IF;
  END PROCESS packetlen0reg_process;


  
  currentlength <= packetlength0 WHEN ramrdbank = to_unsigned(16#0#, 2) ELSE
      packetlength1 WHEN ramrdbank = to_unsigned(16#1#, 2) ELSE
      packetlength2 WHEN ramrdbank = to_unsigned(16#2#, 2) ELSE
      packetlength3;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 511
  d3count_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay3count <= to_unsigned(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF endpacketbank3 = '1' THEN 
          delay3count <= to_unsigned(16#000#, 9);
        ELSIF bankvalid3 = '1' THEN 
          delay3count <= delay3count + to_unsigned(16#001#, 9);
        END IF;
      END IF;
    END IF;
  END PROCESS d3count_process;


  
  delay3max <= '1' WHEN delay3count = to_unsigned(16#1FC#, 9) ELSE
      '0';

  
  wrbankdecode3 <= '1' WHEN ramwrbank = to_unsigned(16#3#, 2) ELSE
      '0';

  endpacketbank3 <= endindelayed AND wrbankdecode3;

  
  rdbankdecode3 <= '1' WHEN ramrdbank = to_unsigned(16#3#, 2) ELSE
      '0';

  endreadbank3 <=  NOT (prevalidout AND (rdbankdecode3 AND preendout));

  holdvalid3 <= bankvalid3 AND endreadbank3;

  setvalid3 <= holdvalid3 OR endpacketbank3;

  bankvalid3reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bankvalid3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bankvalid3 <= setvalid3;
      END IF;
    END IF;
  END PROCESS bankvalid3reg_process;


  prestartbank3 <= bankvalid3 AND delay3max;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 511
  d2count_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay2count <= to_unsigned(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF endpacketbank2 = '1' THEN 
          delay2count <= to_unsigned(16#000#, 9);
        ELSIF bankvalid2 = '1' THEN 
          delay2count <= delay2count + to_unsigned(16#001#, 9);
        END IF;
      END IF;
    END IF;
  END PROCESS d2count_process;


  
  delay2max <= '1' WHEN delay2count = to_unsigned(16#1FC#, 9) ELSE
      '0';

  
  wrbankdecode2 <= '1' WHEN ramwrbank = to_unsigned(16#2#, 2) ELSE
      '0';

  endpacketbank2 <= endindelayed AND wrbankdecode2;

  
  rdbankdecode2 <= '1' WHEN ramrdbank = to_unsigned(16#2#, 2) ELSE
      '0';

  endreadbank2 <=  NOT (prevalidout AND (rdbankdecode2 AND preendout));

  holdvalid2 <= bankvalid2 AND endreadbank2;

  setvalid2 <= holdvalid2 OR endpacketbank2;

  bankvalid2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bankvalid2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bankvalid2 <= setvalid2;
      END IF;
    END IF;
  END PROCESS bankvalid2reg_process;


  prestartbank2 <= bankvalid2 AND delay2max;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 511
  d1count_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay1count <= to_unsigned(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF endpacketbank1 = '1' THEN 
          delay1count <= to_unsigned(16#000#, 9);
        ELSIF bankvalid1 = '1' THEN 
          delay1count <= delay1count + to_unsigned(16#001#, 9);
        END IF;
      END IF;
    END IF;
  END PROCESS d1count_process;


  
  delay1max <= '1' WHEN delay1count = to_unsigned(16#1FC#, 9) ELSE
      '0';

  
  wrbankdecode1 <= '1' WHEN ramwrbank = to_unsigned(16#1#, 2) ELSE
      '0';

  endpacketbank1 <= endindelayed AND wrbankdecode1;

  
  rdbankdecode1 <= '1' WHEN ramrdbank = to_unsigned(16#1#, 2) ELSE
      '0';

  endreadbank1 <=  NOT (prevalidout AND (rdbankdecode1 AND preendout));

  holdvalid1 <= bankvalid1 AND endreadbank1;

  setvalid1 <= holdvalid1 OR endpacketbank1;

  bankvalid1reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bankvalid1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bankvalid1 <= setvalid1;
      END IF;
    END IF;
  END PROCESS bankvalid1reg_process;


  prestartbank1 <= bankvalid1 AND delay1max;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 511
  d0count_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay0count <= to_unsigned(16#000#, 9);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF endpacketbank0 = '1' THEN 
          delay0count <= to_unsigned(16#000#, 9);
        ELSIF bankvalid0 = '1' THEN 
          delay0count <= delay0count + to_unsigned(16#001#, 9);
        END IF;
      END IF;
    END IF;
  END PROCESS d0count_process;


  
  delay0max <= '1' WHEN delay0count = to_unsigned(16#1FC#, 9) ELSE
      '0';

  enddelay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      endindelay2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        endindelay2 <= endindelayed;
      END IF;
    END IF;
  END PROCESS enddelay2_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 3
  wrbankcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ramwrbank <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        ramwrbank <= ramwrbank + to_unsigned(16#1#, 2);
      END IF;
    END IF;
  END PROCESS wrbankcounter_process;


  
  wrbankdecode0 <= '1' WHEN ramwrbank = to_unsigned(16#0#, 2) ELSE
      '0';

  notendin <=  NOT endin_packet;

  notdonepacket <= notendin AND inpacket;

  
  chkStartInFlg <= '1' WHEN startInFlg = '0' ELSE
      '0';

  startInFlgAndChk0 <= properStart AND chkStartInFlg;

  startInFlgRst <= startInFlg AND endin_valid;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 1
  startInFlgCounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      startInFlg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF startInFlgRst = '1' THEN 
          startInFlg <= '0';
        ELSIF startInFlgAndChk0 = '1' THEN 
          startInFlg <=  NOT startInFlg;
        END IF;
      END IF;
    END IF;
  END PROCESS startInFlgCounter_process;


  startInFlgAndEndIn <= startInFlg AND endin_valid;

  -- Count limited, Unsigned Counter
  --  initial value   = 1
  --  step value      = 1
  --  count to value  = 1
  nxtFramFlgCounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      nxtFrame <= '1';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF Integer_Output_RS_Decoder_HDL_Optimized_endout_1 = '1' THEN 
          nxtFrame <= '1';
        ELSIF startInFlgAndEndIn = '1' THEN 
          nxtFrame <=  NOT nxtFrame;
        END IF;
      END IF;
    END IF;
  END PROCESS nxtFramFlgCounter_process;


  nxtFrAndStartIn <= nxtFrame AND startValidIn;

  endoutputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Output_RS_Decoder_HDL_Optimized_endout_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Output_RS_Decoder_HDL_Optimized_endout_1 <= p2endout;
      END IF;
    END IF;
  END PROCESS endoutputreg_process;


  
  switch_compare_1 <= '1' WHEN Integer_Output_RS_Decoder_HDL_Optimized_endout_1 > '0' ELSE
      '0';

  
  properStart <= nxtFrAndStartIn WHEN switch_compare_1 = '0' ELSE
      zeroconstBoolean;

  startin_valid <= properStart AND invertedEndIn;

  inpacketnext <= startin_valid OR notdonepacket;

  inpacketreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      inpacket <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        inpacket <= inpacketnext;
      END IF;
    END IF;
  END PROCESS inpacketreg_process;


  endin_packet <= endin_valid AND inpacket;

  enddelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      endindelayed <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        endindelayed <= endin_packet;
      END IF;
    END IF;
  END PROCESS enddelay_process;


  endpacketbank0 <= endindelayed AND wrbankdecode0;

  end2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p2endout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        p2endout <= preendout;
      END IF;
    END IF;
  END PROCESS end2reg_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 3
  rdbankcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ramrdbank <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND p2endout = '1' THEN
        ramrdbank <= ramrdbank + to_unsigned(16#1#, 2);
      END IF;
    END IF;
  END PROCESS rdbankcounter_process;


  
  rdbankdecode0 <= '1' WHEN ramrdbank = to_unsigned(16#0#, 2) ELSE
      '0';

  endreadbank0 <=  NOT (prevalidout AND (rdbankdecode0 AND preendout));

  holdvalid0 <= bankvalid0 AND endreadbank0;

  setvalid0 <= holdvalid0 OR endpacketbank0;

  bankvalid0reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      bankvalid0 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        bankvalid0 <= setvalid0;
      END IF;
    END IF;
  END PROCESS bankvalid0reg_process;


  prestartbank0 <= bankvalid0 AND delay0max;

  prestartcurbank <= prestartbank3 OR (prestartbank2 OR (prestartbank0 OR prestartbank1));

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 255
  rdaddrcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ramrdcount <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF prestartcurbank = '1' THEN 
          ramrdcount <= to_unsigned(16#00#, 8);
        ELSIF prevalidout = '1' THEN 
          ramrdcount <= ramrdcount + to_unsigned(16#01#, 8);
        END IF;
      END IF;
    END IF;
  END PROCESS rdaddrcounter_process;


  
  relop_relop1 <= '1' WHEN ramrdcount = currentlength ELSE
      '0';

  preendout <= relop_relop1 AND rdbankvalid;

  notcountstop <=  NOT preendout;

  ramrdenreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      ramrden <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        ramrden <= ramrdennext;
      END IF;
    END IF;
  END PROCESS ramrdenreg_process;


  ramrdencontinue <= ramrden AND notcountstop;

  ramrdennext <= ramrdencontinue OR prestartout;

  prevalidout <= ramrdennext OR preendout;

  dv2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p2dvout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        p2dvout <= prevalidout;
      END IF;
    END IF;
  END PROCESS dv2reg_process;


  zeroconst_1 <= to_unsigned(16#00#, 8);

  Integer_Output_RS_Decoder_HDL_Optimized_in_unsigned <= unsigned(Integer_Output_RS_Decoder_HDL_Optimized_in);

  datainputdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      datainreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        datainreg <= Integer_Output_RS_Decoder_HDL_Optimized_in_unsigned;
      END IF;
    END IF;
  END PROCESS datainputdelay_process;


  ramwraddr <= ramwrbank & ramwrcount;

  ramrdaddr <= ramrdbank & ramrdcount;

  ramrddata_unsigned <= unsigned(ramrddata);

  oneconst_1 <= to_unsigned(16#01#, 8);

  enddelay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      endindelay3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        endindelay3 <= endindelay2;
      END IF;
    END IF;
  END PROCESS enddelay3_process;


  fsmcontinue <= fsmrun AND fsmnotmax;

  fsmrunnext <= endindelay3 OR fsmcontinue;

  fsmrunreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      fsmrun <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        fsmrun <= fsmrunnext;
      END IF;
    END IF;
  END PROCESS fsmrunreg_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  fsmcountproc_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      fsmcount <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmrun = '1' THEN
        fsmcount <= fsmcount + to_unsigned(16#1#, 4);
      END IF;
    END IF;
  END PROCESS fsmcountproc_process;


  
  fsmnotmax <= '1' WHEN fsmcount /= to_unsigned(16#F#, 4) ELSE
      '0';

  fsmmax <=  NOT fsmnotmax;

  fsmrunreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      fsmdone <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        fsmdone <= fsmmax;
      END IF;
    END IF;
  END PROCESS fsmrunreg_1_process;


  convnotdone <=  NOT (omegadone AND relop_relop1_1);

  convcontinue <= convrun AND convnotdone;

  convrunnext <= fsmdone OR convcontinue;

  convrunreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      convrun <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        convrun <= convrunnext;
      END IF;
    END IF;
  END PROCESS convrunreg_process;


  convcountreset <= relop_relop1_1 OR fsmdone;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  convcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      convcount <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF convcountreset = '1' THEN 
          convcount <= to_unsigned(16#0#, 4);
        ELSIF convrun = '1' THEN 
          convcount <= convcount + to_unsigned(16#1#, 4);
        END IF;
      END IF;
    END IF;
  END PROCESS convcounter_process;


  
  relop_relop1_1 <= '1' WHEN omegacount = convcount ELSE
      '0';

  omegacounten <= relop_relop1_1 AND convrun;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  omegacounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omegacount <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF fsmdone = '1' THEN 
          omegacount <= to_unsigned(16#0#, 4);
        ELSIF omegacounten = '1' THEN 
          omegacount <= omegacount + to_unsigned(16#1#, 4);
        END IF;
      END IF;
    END IF;
  END PROCESS omegacounter_process;


  
  omegadone <= '1' WHEN omegacount = to_unsigned(16#F#, 4) ELSE
      '0';

  convdonenext <= omegadone AND relop_relop1_1;

  convdonereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      convdone <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        convdone <= convdonenext;
      END IF;
    END IF;
  END PROCESS convdonereg_process;


  masseybankreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      masseybank <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelayed = '1' THEN
        masseybank <= ramwrbank;
      END IF;
    END IF;
  END PROCESS masseybankreg_process;


  convbankreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      convbank <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        convbank <= masseybank;
      END IF;
    END IF;
  END PROCESS convbankreg_process;


  prerunbankreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      prerunbank <= to_unsigned(16#0#, 2);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND convdone = '1' THEN
        prerunbank <= convbank;
      END IF;
    END IF;
  END PROCESS prerunbankreg_process;


  
  chienprerunsellen <= packetlength0 WHEN prerunbank = to_unsigned(16#0#, 2) ELSE
      packetlength1 WHEN prerunbank = to_unsigned(16#1#, 2) ELSE
      packetlength2 WHEN prerunbank = to_unsigned(16#2#, 2) ELSE
      packetlength3;

  paritylengthplusone <= to_unsigned(16#11#, 8);

  chienprerunlencomp <= chienprerunsellen + paritylengthplusone;

  chienprerunlength <=  NOT chienprerunlencomp;

  chienprerunnotdone <=  NOT chienprerundone;

  chienpreruncontinue <= chienprerun AND chienprerunnotdone;

  chienprerunnext <= convdone OR chienpreruncontinue;

  chienprerunreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chienprerun <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        chienprerun <= chienprerunnext;
      END IF;
    END IF;
  END PROCESS chienprerunreg_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 255
  chienprerunpower_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chienpreruncount <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF convdone = '1' THEN 
          chienpreruncount <= to_unsigned(16#00#, 8);
        ELSIF chienprerun = '1' THEN 
          chienpreruncount <= chienpreruncount + to_unsigned(16#01#, 8);
        END IF;
      END IF;
    END IF;
  END PROCESS chienprerunpower_process;


  
  relop_relop1_2 <= '1' WHEN chienpreruncount = chienprerunlength ELSE
      '0';

  chienprerundonenext <= relop_relop1_2 AND chienprerun;

  chiendprerunonereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chienprerundone <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        chienprerundone <= chienprerundonenext;
      END IF;
    END IF;
  END PROCESS chiendprerunonereg_process;


  chiennotdone <=  NOT chienpowermax;

  chiencontinue <= chienrun AND chiennotdone;

  chienrunnext <= chienprerundone OR chiencontinue;

  chienrunreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chienrun <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        chienrun <= chienrunnext;
      END IF;
    END IF;
  END PROCESS chienrunreg_process;


  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 255
  chienpower_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chienpower_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF chienprerundone = '1' THEN 
          chienpower_1 <= chienpreruncount;
        ELSIF chienrun = '1' THEN 
          chienpower_1 <= chienpower_1 + to_unsigned(16#01#, 8);
        END IF;
      END IF;
    END IF;
  END PROCESS chienpower_process;


  
  chienpowermax <= '1' WHEN chienpower_1 = to_unsigned(16#FF#, 8) ELSE
      '0';

  chiendonereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chiendone <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        chiendone <= chienpowermax;
      END IF;
    END IF;
  END PROCESS chiendonereg_process;


  omegapoweren <= chienprerundone OR chienrun;

  omegaprepoweren <= convdone OR chienprerun;

  countone_1 <= to_unsigned(16#1#, 4);

  fsmonecount <= fsmcount + countone_1;

  countzero_1 <= to_unsigned(16#0#, 4);

  onebit <= '1';

  holdregen <= endindelay3 OR fsmrun;

  startdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      startindelayed <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        startindelayed <= startin_valid;
      END IF;
    END IF;
  END PROCESS startdelay_process;


  
  syndromegate <= syndromereg WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout <= gfpowertable_data(to_integer(syndromegate));

  xorfeedback <= datainreg XOR powertableout;

  synreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg <= xorfeedback;
      END IF;
    END IF;
  END PROCESS synreg_process;


  synreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg <= syndromereg;
      END IF;
    END IF;
  END PROCESS synreg_1_process;


  
  holdin <= zeroconst_1 WHEN endindelay3 = '0' ELSE
      finalsyndromereg;

  synholdregproc_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg <= holdin;
      END IF;
    END IF;
  END PROCESS synholdregproc_process;


  
  syndromegate_1 <= syndromereg_1 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_1 <= gfpowertable_data_2(to_integer(syndromegate_1));

  xorfeedback_1 <= datainreg XOR powertableout_1;

  synreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_1 <= xorfeedback_1;
      END IF;
    END IF;
  END PROCESS synreg_2_process;


  synreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_1 <= syndromereg_1;
      END IF;
    END IF;
  END PROCESS synreg_3_process;


  
  holdin_1 <= syndromeholdreg WHEN endindelay3 = '0' ELSE
      finalsyndromereg_1;

  synholdregproc_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_1 <= holdin_1;
      END IF;
    END IF;
  END PROCESS synholdregproc_1_process;


  
  syndromegate_2 <= syndromereg_2 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_2 <= gfpowertable_data_4(to_integer(syndromegate_2));

  xorfeedback_2 <= datainreg XOR powertableout_2;

  synreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_2 <= xorfeedback_2;
      END IF;
    END IF;
  END PROCESS synreg_4_process;


  synreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_2 <= syndromereg_2;
      END IF;
    END IF;
  END PROCESS synreg_5_process;


  
  holdin_2 <= syndromeholdreg_1 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_2;

  synholdregproc_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_2 <= holdin_2;
      END IF;
    END IF;
  END PROCESS synholdregproc_2_process;


  
  syndromegate_3 <= syndromereg_3 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_3 <= gfpowertable_data_6(to_integer(syndromegate_3));

  xorfeedback_3 <= datainreg XOR powertableout_3;

  synreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_3 <= xorfeedback_3;
      END IF;
    END IF;
  END PROCESS synreg_6_process;


  synreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_3 <= syndromereg_3;
      END IF;
    END IF;
  END PROCESS synreg_7_process;


  
  holdin_3 <= syndromeholdreg_2 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_3;

  synholdregproc_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_3 <= holdin_3;
      END IF;
    END IF;
  END PROCESS synholdregproc_3_process;


  
  syndromegate_4 <= syndromereg_4 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_4 <= gfpowertable_data_8(to_integer(syndromegate_4));

  xorfeedback_4 <= datainreg XOR powertableout_4;

  synreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_4 <= xorfeedback_4;
      END IF;
    END IF;
  END PROCESS synreg_8_process;


  synreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_4 <= syndromereg_4;
      END IF;
    END IF;
  END PROCESS synreg_9_process;


  
  holdin_4 <= syndromeholdreg_3 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_4;

  synholdregproc_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_4 <= holdin_4;
      END IF;
    END IF;
  END PROCESS synholdregproc_4_process;


  
  syndromegate_5 <= syndromereg_5 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_5 <= gfpowertable_data_10(to_integer(syndromegate_5));

  xorfeedback_5 <= datainreg XOR powertableout_5;

  synreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_5 <= xorfeedback_5;
      END IF;
    END IF;
  END PROCESS synreg_10_process;


  synreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_5 <= syndromereg_5;
      END IF;
    END IF;
  END PROCESS synreg_11_process;


  
  holdin_5 <= syndromeholdreg_4 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_5;

  synholdregproc_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_5 <= holdin_5;
      END IF;
    END IF;
  END PROCESS synholdregproc_5_process;


  
  syndromegate_6 <= syndromereg_6 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_6 <= gfpowertable_data_12(to_integer(syndromegate_6));

  xorfeedback_6 <= datainreg XOR powertableout_6;

  synreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_6 <= xorfeedback_6;
      END IF;
    END IF;
  END PROCESS synreg_12_process;


  synreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_6 <= syndromereg_6;
      END IF;
    END IF;
  END PROCESS synreg_13_process;


  
  holdin_6 <= syndromeholdreg_5 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_6;

  synholdregproc_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_6 <= holdin_6;
      END IF;
    END IF;
  END PROCESS synholdregproc_6_process;


  
  syndromegate_7 <= syndromereg_7 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_7 <= gfpowertable_data_14(to_integer(syndromegate_7));

  xorfeedback_7 <= datainreg XOR powertableout_7;

  synreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_7 <= xorfeedback_7;
      END IF;
    END IF;
  END PROCESS synreg_14_process;


  synreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_7 <= syndromereg_7;
      END IF;
    END IF;
  END PROCESS synreg_15_process;


  
  holdin_7 <= syndromeholdreg_6 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_7;

  synholdregproc_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_7 <= holdin_7;
      END IF;
    END IF;
  END PROCESS synholdregproc_7_process;


  
  syndromegate_8 <= syndromereg_8 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_8 <= gfpowertable_data_16(to_integer(syndromegate_8));

  xorfeedback_8 <= datainreg XOR powertableout_8;

  synreg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_8 <= xorfeedback_8;
      END IF;
    END IF;
  END PROCESS synreg_16_process;


  synreg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_8 <= syndromereg_8;
      END IF;
    END IF;
  END PROCESS synreg_17_process;


  
  holdin_8 <= syndromeholdreg_7 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_8;

  synholdregproc_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_8 <= holdin_8;
      END IF;
    END IF;
  END PROCESS synholdregproc_8_process;


  
  syndromegate_9 <= syndromereg_9 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_9 <= gfpowertable_data_18(to_integer(syndromegate_9));

  xorfeedback_9 <= datainreg XOR powertableout_9;

  synreg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_9 <= xorfeedback_9;
      END IF;
    END IF;
  END PROCESS synreg_18_process;


  synreg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_9 <= syndromereg_9;
      END IF;
    END IF;
  END PROCESS synreg_19_process;


  
  holdin_9 <= syndromeholdreg_8 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_9;

  synholdregproc_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_9 <= holdin_9;
      END IF;
    END IF;
  END PROCESS synholdregproc_9_process;


  
  syndromegate_10 <= syndromereg_10 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_10 <= gfpowertable_data_20(to_integer(syndromegate_10));

  xorfeedback_10 <= datainreg XOR powertableout_10;

  synreg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_10 <= xorfeedback_10;
      END IF;
    END IF;
  END PROCESS synreg_20_process;


  synreg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_10 <= syndromereg_10;
      END IF;
    END IF;
  END PROCESS synreg_21_process;


  
  holdin_10 <= syndromeholdreg_9 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_10;

  synholdregproc_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_10 <= holdin_10;
      END IF;
    END IF;
  END PROCESS synholdregproc_10_process;


  
  syndromegate_11 <= syndromereg_11 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_11 <= gfpowertable_data_22(to_integer(syndromegate_11));

  xorfeedback_11 <= datainreg XOR powertableout_11;

  synreg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_11 <= xorfeedback_11;
      END IF;
    END IF;
  END PROCESS synreg_22_process;


  synreg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_11 <= syndromereg_11;
      END IF;
    END IF;
  END PROCESS synreg_23_process;


  
  holdin_11 <= syndromeholdreg_10 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_11;

  synholdregproc_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_11 <= holdin_11;
      END IF;
    END IF;
  END PROCESS synholdregproc_11_process;


  
  syndromegate_12 <= syndromereg_12 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_12 <= gfpowertable_data_24(to_integer(syndromegate_12));

  xorfeedback_12 <= datainreg XOR powertableout_12;

  synreg_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_12 <= xorfeedback_12;
      END IF;
    END IF;
  END PROCESS synreg_24_process;


  synreg_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_12 <= syndromereg_12;
      END IF;
    END IF;
  END PROCESS synreg_25_process;


  
  holdin_12 <= syndromeholdreg_11 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_12;

  synholdregproc_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_12 <= holdin_12;
      END IF;
    END IF;
  END PROCESS synholdregproc_12_process;


  
  syndromegate_13 <= syndromereg_13 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_13 <= gfpowertable_data_26(to_integer(syndromegate_13));

  xorfeedback_13 <= datainreg XOR powertableout_13;

  synreg_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_13 <= xorfeedback_13;
      END IF;
    END IF;
  END PROCESS synreg_26_process;


  synreg_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_13 <= syndromereg_13;
      END IF;
    END IF;
  END PROCESS synreg_27_process;


  
  holdin_13 <= syndromeholdreg_12 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_13;

  synholdregproc_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_13 <= holdin_13;
      END IF;
    END IF;
  END PROCESS synholdregproc_13_process;


  
  syndromegate_14 <= syndromereg_14 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  powertableout_14 <= gfpowertable_data_28(to_integer(syndromegate_14));

  xorfeedback_14 <= datainreg XOR powertableout_14;

  synreg_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_14 <= xorfeedback_14;
      END IF;
    END IF;
  END PROCESS synreg_28_process;


  synreg_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_14 <= syndromereg_14;
      END IF;
    END IF;
  END PROCESS synreg_29_process;


  
  holdin_14 <= syndromeholdreg_13 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_14;

  synholdregproc_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeholdreg_14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeholdreg_14 <= holdin_14;
      END IF;
    END IF;
  END PROCESS synholdregproc_14_process;


  
  syndromegate_15 <= syndromereg_15 WHEN startindelayed = '0' ELSE
      zeroconst_1;

  xorfeedback_15 <= datainreg XOR syndromegate_15;

  synreg_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromereg_15 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND dvindelayed = '1' THEN
        syndromereg_15 <= xorfeedback_15;
      END IF;
    END IF;
  END PROCESS synreg_30_process;


  synreg_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      finalsyndromereg_15 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        finalsyndromereg_15 <= syndromereg_15;
      END IF;
    END IF;
  END PROCESS synreg_31_process;


  
  syndromeholdmux <= syndromeholdreg_14 WHEN endindelay3 = '0' ELSE
      finalsyndromereg_15;

  
  synzero <= '1' WHEN syndromeholdmux = to_unsigned(16#00#, 8) ELSE
      '0';

  fsmrunearly <= fsmrunnext OR fsmrun;

  syndromezeroshiftnext <= synzero AND fsmrunearly;

  synzeroshiftreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg <= syndromezeroshiftnext;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_process;


  synlog <= cpolylogtable_table_data(to_integer(syndromeholdmux));

  synshiftreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg <= synlog;
      END IF;
    END IF;
  END PROCESS synshiftreg_process;


  moduloconst <= to_unsigned(16#FF#, 8);

  zerobit <= '0';

  syndromezeroshiftnext_1 <= syndromezeroshiftreg AND fsmrun;

  synzeroshiftreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_1 <= syndromezeroshiftnext_1;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_1_process;


  synshiftreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_1 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_1 <= syndromeshiftreg;
      END IF;
    END IF;
  END PROCESS synshiftreg_1_process;


  syndromezeroshiftnext_2 <= syndromezeroshiftreg_1 AND fsmrun;

  synzeroshiftreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_2 <= syndromezeroshiftnext_2;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_2_process;


  synshiftreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_2 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_2 <= syndromeshiftreg_1;
      END IF;
    END IF;
  END PROCESS synshiftreg_2_process;


  syndromezeroshiftnext_3 <= syndromezeroshiftreg_2 AND fsmrun;

  synzeroshiftreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_3 <= syndromezeroshiftnext_3;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_3_process;


  synshiftreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_3 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_3 <= syndromeshiftreg_2;
      END IF;
    END IF;
  END PROCESS synshiftreg_3_process;


  syndromezeroshiftnext_4 <= syndromezeroshiftreg_3 AND fsmrun;

  synzeroshiftreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_4 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_4 <= syndromezeroshiftnext_4;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_4_process;


  synshiftreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_4 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_4 <= syndromeshiftreg_3;
      END IF;
    END IF;
  END PROCESS synshiftreg_4_process;


  syndromezeroshiftnext_5 <= syndromezeroshiftreg_4 AND fsmrun;

  synzeroshiftreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_5 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_5 <= syndromezeroshiftnext_5;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_5_process;


  synshiftreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_5 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_5 <= syndromeshiftreg_4;
      END IF;
    END IF;
  END PROCESS synshiftreg_5_process;


  syndromezeroshiftnext_6 <= syndromezeroshiftreg_5 AND fsmrun;

  synzeroshiftreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_6 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_6 <= syndromezeroshiftnext_6;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_6_process;


  synshiftreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_6 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_6 <= syndromeshiftreg_5;
      END IF;
    END IF;
  END PROCESS synshiftreg_6_process;


  syndromezeroshiftnext_7 <= syndromezeroshiftreg_6 AND fsmrun;

  synzeroshiftreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_7 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_7 <= syndromezeroshiftnext_7;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_7_process;


  synshiftreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_7 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_7 <= syndromeshiftreg_6;
      END IF;
    END IF;
  END PROCESS synshiftreg_7_process;


  syndromezeroshiftnext_8 <= syndromezeroshiftreg_7 AND fsmrun;

  synzeroshiftreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_8 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_8 <= syndromezeroshiftnext_8;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_8_process;


  synshiftreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_8 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_8 <= syndromeshiftreg_7;
      END IF;
    END IF;
  END PROCESS synshiftreg_8_process;


  syndromezeroshiftnext_9 <= syndromezeroshiftreg_8 AND fsmrun;

  synzeroshiftreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_9 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_9 <= syndromezeroshiftnext_9;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_9_process;


  synshiftreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_9 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_9 <= syndromeshiftreg_8;
      END IF;
    END IF;
  END PROCESS synshiftreg_9_process;


  syndromezeroshiftnext_10 <= syndromezeroshiftreg_9 AND fsmrun;

  synzeroshiftreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_10 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_10 <= syndromezeroshiftnext_10;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_10_process;


  synshiftreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_10 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_10 <= syndromeshiftreg_9;
      END IF;
    END IF;
  END PROCESS synshiftreg_10_process;


  syndromezeroshiftnext_11 <= syndromezeroshiftreg_10 AND fsmrun;

  synzeroshiftreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_11 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_11 <= syndromezeroshiftnext_11;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_11_process;


  synshiftreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_11 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_11 <= syndromeshiftreg_10;
      END IF;
    END IF;
  END PROCESS synshiftreg_11_process;


  syndromezeroshiftnext_12 <= syndromezeroshiftreg_11 AND fsmrun;

  synzeroshiftreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_12 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_12 <= syndromezeroshiftnext_12;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_12_process;


  synshiftreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_12 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_12 <= syndromeshiftreg_11;
      END IF;
    END IF;
  END PROCESS synshiftreg_12_process;


  syndromezeroshiftnext_13 <= syndromezeroshiftreg_12 AND fsmrun;

  synzeroshiftreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_13 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_13 <= syndromezeroshiftnext_13;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_13_process;


  synshiftreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_13 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_13 <= syndromeshiftreg_12;
      END IF;
    END IF;
  END PROCESS synshiftreg_13_process;


  syndromezeroshiftnext_14 <= syndromezeroshiftreg_13 AND fsmrun;

  synzeroshiftreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_14 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_14 <= syndromezeroshiftnext_14;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_14_process;


  synshiftreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_14 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_14 <= syndromeshiftreg_13;
      END IF;
    END IF;
  END PROCESS synshiftreg_14_process;


  syndromezeroshiftnext_15 <= syndromezeroshiftreg_14 AND fsmrun;

  synzeroshiftreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromezeroshiftreg_15 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromezeroshiftreg_15 <= syndromezeroshiftnext_15;
      END IF;
    END IF;
  END PROCESS synzeroshiftreg_15_process;


  synshiftreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      syndromeshiftreg_15 <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND holdregen = '1' THEN
        syndromeshiftreg_15 <= syndromeshiftreg_14;
      END IF;
    END IF;
  END PROCESS synshiftreg_15_process;


  ppolyreduced <= resize(resize(ppolylogadd, 10) - resize(moduloconst, 10), 8);

  ppolylogslice <= ppolylogadd(7 DOWNTO 0);

  ppolylog <= cpolylogtable_table_data_2(to_integer(p1polyshift));

  ppolylogadd <= resize(ppolylog, 9) + resize(correctionlog, 9);

  
  ppolylogwrap <= '1' WHEN ppolylogadd > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult <= ppolylogslice WHEN ppolylogwrap = '0' ELSE
      ppolyreduced;

  ppolyalogout <= alogtable_table_data(to_integer(ppolymodresult));

  
  p1polyshift <= zeroconst_1 WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero <= '1' WHEN p1polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult <= ppolyalogout WHEN ppolyzero = '0' ELSE
      zeroconst_1;

  cpoly1xor <= c1poly XOR ppolymulresult;

  
  next1cpoly <= cpoly1xor WHEN endindelay3 = '0' ELSE
      oneconst_1;

  logaddreduced <= resize(resize(logadd, 10) - resize(moduloconst, 10), 8);

  logslice <= logadd(7 DOWNTO 0);

  cpolylog <= cpolylogtable_table_data_4(to_integer(c16poly));

  logadd <= resize(cpolylog, 9) + resize(syndromeshiftreg_15, 9);

  
  logwrap <= '1' WHEN logadd > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult <= logslice WHEN logwrap = '0' ELSE
      logaddreduced;

  alogout <= alogtable_table_data_2(to_integer(modresult));

  ppolyreduced_1 <= resize(resize(ppolylogadd_1, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_1 <= ppolylogadd_1(7 DOWNTO 0);

  ppolylog_1 <= cpolylogtable_table_data_6(to_integer(p16polyshift));

  ppolylogadd_1 <= resize(ppolylog_1, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_1 <= '1' WHEN ppolylogadd_1 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_1 <= ppolylogslice_1 WHEN ppolylogwrap_1 = '0' ELSE
      ppolyreduced_1;

  ppolyalogout_1 <= alogtable_table_data_4(to_integer(ppolymodresult_1));

  
  next15ppoly <= c15poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p15poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p15poly <= next15ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_process;


  
  p16polyshift <= p15poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p14poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p13poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p12poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p11poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p10poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_1 <= '1' WHEN p16polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_1 <= ppolyalogout_1 WHEN ppolyzero_1 = '0' ELSE
      zeroconst_1;

  cpoly16xor <= c16poly XOR ppolymulresult_1;

  
  next16cpoly <= cpoly16xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c16poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c16poly <= next16cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_process;


  
  cpolyzero <= '1' WHEN c16poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq <= '1' WHEN nextlcount = to_unsigned(16#F#, 4) ELSE
      '0';

  
  lregmux_1 <= lgreatereq WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg <= lregmux_1;
      END IF;
    END IF;
  END PROCESS lshiftreg_process;


  lreginv <=  NOT lreg;

  mulzero <= cpolyzero OR (lreginv OR syndromezeroshiftreg_15);

  
  mulresult <= alogout WHEN mulzero = '0' ELSE
      zeroconst_1;

  logaddreduced_1 <= resize(resize(logadd_1, 10) - resize(moduloconst, 10), 8);

  logslice_1 <= logadd_1(7 DOWNTO 0);

  cpolylog_1 <= cpolylogtable_table_data_8(to_integer(c15poly));

  logadd_1 <= resize(cpolylog_1, 9) + resize(syndromeshiftreg_14, 9);

  
  logwrap_1 <= '1' WHEN logadd_1 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_1 <= logslice_1 WHEN logwrap_1 = '0' ELSE
      logaddreduced_1;

  alogout_1 <= alogtable_table_data_6(to_integer(modresult_1));

  ppolyreduced_2 <= resize(resize(ppolylogadd_2, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_2 <= ppolylogadd_2(7 DOWNTO 0);

  ppolylog_2 <= cpolylogtable_table_data_10(to_integer(p15polyshift));

  ppolylogadd_2 <= resize(ppolylog_2, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_2 <= '1' WHEN ppolylogadd_2 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_2 <= ppolylogslice_2 WHEN ppolylogwrap_2 = '0' ELSE
      ppolyreduced_2;

  ppolyalogout_2 <= alogtable_table_data_8(to_integer(ppolymodresult_2));

  
  next14ppoly <= c14poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p14poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p14poly <= next14ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_1_process;


  
  p15polyshift <= p14poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p13poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p12poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p11poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p10poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_2 <= '1' WHEN p15polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_2 <= ppolyalogout_2 WHEN ppolyzero_2 = '0' ELSE
      zeroconst_1;

  cpoly15xor <= c15poly XOR ppolymulresult_2;

  
  next15cpoly <= cpoly15xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c15poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c15poly <= next15cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_1_process;


  
  cpolyzero_1 <= '1' WHEN c15poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_1 <= '1' WHEN nextlcount >= to_unsigned(16#E#, 4) ELSE
      '0';

  
  lregmux_3 <= lgreatereq_1 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_1 <= lregmux_3;
      END IF;
    END IF;
  END PROCESS lshiftreg_1_process;


  lreginv_1 <=  NOT lreg_1;

  mulzero_1 <= cpolyzero_1 OR (lreginv_1 OR syndromezeroshiftreg_14);

  
  mulresult_1 <= alogout_1 WHEN mulzero_1 = '0' ELSE
      zeroconst_1;

  logaddreduced_2 <= resize(resize(logadd_2, 10) - resize(moduloconst, 10), 8);

  logslice_2 <= logadd_2(7 DOWNTO 0);

  cpolylog_2 <= cpolylogtable_table_data_12(to_integer(c14poly));

  logadd_2 <= resize(cpolylog_2, 9) + resize(syndromeshiftreg_13, 9);

  
  logwrap_2 <= '1' WHEN logadd_2 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_2 <= logslice_2 WHEN logwrap_2 = '0' ELSE
      logaddreduced_2;

  alogout_2 <= alogtable_table_data_10(to_integer(modresult_2));

  ppolyreduced_3 <= resize(resize(ppolylogadd_3, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_3 <= ppolylogadd_3(7 DOWNTO 0);

  ppolylog_3 <= cpolylogtable_table_data_14(to_integer(p14polyshift));

  ppolylogadd_3 <= resize(ppolylog_3, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_3 <= '1' WHEN ppolylogadd_3 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_3 <= ppolylogslice_3 WHEN ppolylogwrap_3 = '0' ELSE
      ppolyreduced_3;

  ppolyalogout_3 <= alogtable_table_data_12(to_integer(ppolymodresult_3));

  
  next13ppoly <= c13poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p13poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p13poly <= next13ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_2_process;


  
  p14polyshift <= p13poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p12poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p11poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p10poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_3 <= '1' WHEN p14polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_3 <= ppolyalogout_3 WHEN ppolyzero_3 = '0' ELSE
      zeroconst_1;

  cpoly14xor <= c14poly XOR ppolymulresult_3;

  
  next14cpoly <= cpoly14xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c14poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c14poly <= next14cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_2_process;


  
  cpolyzero_2 <= '1' WHEN c14poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_2 <= '1' WHEN nextlcount >= to_unsigned(16#D#, 4) ELSE
      '0';

  
  lregmux_5 <= lgreatereq_2 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_2 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_2 <= lregmux_5;
      END IF;
    END IF;
  END PROCESS lshiftreg_2_process;


  lreginv_2 <=  NOT lreg_2;

  mulzero_2 <= cpolyzero_2 OR (lreginv_2 OR syndromezeroshiftreg_13);

  
  mulresult_2 <= alogout_2 WHEN mulzero_2 = '0' ELSE
      zeroconst_1;

  logaddreduced_3 <= resize(resize(logadd_3, 10) - resize(moduloconst, 10), 8);

  logslice_3 <= logadd_3(7 DOWNTO 0);

  cpolylog_3 <= cpolylogtable_table_data_16(to_integer(c13poly));

  logadd_3 <= resize(cpolylog_3, 9) + resize(syndromeshiftreg_12, 9);

  
  logwrap_3 <= '1' WHEN logadd_3 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_3 <= logslice_3 WHEN logwrap_3 = '0' ELSE
      logaddreduced_3;

  alogout_3 <= alogtable_table_data_14(to_integer(modresult_3));

  ppolyreduced_4 <= resize(resize(ppolylogadd_4, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_4 <= ppolylogadd_4(7 DOWNTO 0);

  ppolylog_4 <= cpolylogtable_table_data_18(to_integer(p13polyshift));

  ppolylogadd_4 <= resize(ppolylog_4, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_4 <= '1' WHEN ppolylogadd_4 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_4 <= ppolylogslice_4 WHEN ppolylogwrap_4 = '0' ELSE
      ppolyreduced_4;

  ppolyalogout_4 <= alogtable_table_data_16(to_integer(ppolymodresult_4));

  
  next12ppoly <= c12poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p12poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p12poly <= next12ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_3_process;


  
  p13polyshift <= p12poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p11poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p10poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_4 <= '1' WHEN p13polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_4 <= ppolyalogout_4 WHEN ppolyzero_4 = '0' ELSE
      zeroconst_1;

  cpoly13xor <= c13poly XOR ppolymulresult_4;

  
  next13cpoly <= cpoly13xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c13poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c13poly <= next13cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_3_process;


  
  cpolyzero_3 <= '1' WHEN c13poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_3 <= '1' WHEN nextlcount >= to_unsigned(16#C#, 4) ELSE
      '0';

  
  lregmux_7 <= lgreatereq_3 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_3 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_3 <= lregmux_7;
      END IF;
    END IF;
  END PROCESS lshiftreg_3_process;


  lreginv_3 <=  NOT lreg_3;

  mulzero_3 <= cpolyzero_3 OR (lreginv_3 OR syndromezeroshiftreg_12);

  
  mulresult_3 <= alogout_3 WHEN mulzero_3 = '0' ELSE
      zeroconst_1;

  logaddreduced_4 <= resize(resize(logadd_4, 10) - resize(moduloconst, 10), 8);

  logslice_4 <= logadd_4(7 DOWNTO 0);

  cpolylog_4 <= cpolylogtable_table_data_20(to_integer(c12poly));

  logadd_4 <= resize(cpolylog_4, 9) + resize(syndromeshiftreg_11, 9);

  
  logwrap_4 <= '1' WHEN logadd_4 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_4 <= logslice_4 WHEN logwrap_4 = '0' ELSE
      logaddreduced_4;

  alogout_4 <= alogtable_table_data_18(to_integer(modresult_4));

  ppolyreduced_5 <= resize(resize(ppolylogadd_5, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_5 <= ppolylogadd_5(7 DOWNTO 0);

  ppolylog_5 <= cpolylogtable_table_data_22(to_integer(p12polyshift));

  ppolylogadd_5 <= resize(ppolylog_5, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_5 <= '1' WHEN ppolylogadd_5 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_5 <= ppolylogslice_5 WHEN ppolylogwrap_5 = '0' ELSE
      ppolyreduced_5;

  ppolyalogout_5 <= alogtable_table_data_20(to_integer(ppolymodresult_5));

  
  next11ppoly <= c11poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p11poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p11poly <= next11ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_4_process;


  
  p12polyshift <= p11poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p10poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_5 <= '1' WHEN p12polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_5 <= ppolyalogout_5 WHEN ppolyzero_5 = '0' ELSE
      zeroconst_1;

  cpoly12xor <= c12poly XOR ppolymulresult_5;

  
  next12cpoly <= cpoly12xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c12poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c12poly <= next12cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_4_process;


  
  cpolyzero_4 <= '1' WHEN c12poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_4 <= '1' WHEN nextlcount >= to_unsigned(16#B#, 4) ELSE
      '0';

  
  lregmux_9 <= lgreatereq_4 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_4 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_4 <= lregmux_9;
      END IF;
    END IF;
  END PROCESS lshiftreg_4_process;


  lreginv_4 <=  NOT lreg_4;

  mulzero_4 <= cpolyzero_4 OR (lreginv_4 OR syndromezeroshiftreg_11);

  
  mulresult_4 <= alogout_4 WHEN mulzero_4 = '0' ELSE
      zeroconst_1;

  logaddreduced_5 <= resize(resize(logadd_5, 10) - resize(moduloconst, 10), 8);

  logslice_5 <= logadd_5(7 DOWNTO 0);

  cpolylog_5 <= cpolylogtable_table_data_24(to_integer(c11poly));

  logadd_5 <= resize(cpolylog_5, 9) + resize(syndromeshiftreg_10, 9);

  
  logwrap_5 <= '1' WHEN logadd_5 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_5 <= logslice_5 WHEN logwrap_5 = '0' ELSE
      logaddreduced_5;

  alogout_5 <= alogtable_table_data_22(to_integer(modresult_5));

  ppolyreduced_6 <= resize(resize(ppolylogadd_6, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_6 <= ppolylogadd_6(7 DOWNTO 0);

  ppolylog_6 <= cpolylogtable_table_data_26(to_integer(p11polyshift));

  ppolylogadd_6 <= resize(ppolylog_6, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_6 <= '1' WHEN ppolylogadd_6 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_6 <= ppolylogslice_6 WHEN ppolylogwrap_6 = '0' ELSE
      ppolyreduced_6;

  ppolyalogout_6 <= alogtable_table_data_24(to_integer(ppolymodresult_6));

  
  next10ppoly <= c10poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p10poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p10poly <= next10ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_5_process;


  
  p11polyshift <= p10poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p9poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_6 <= '1' WHEN p11polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_6 <= ppolyalogout_6 WHEN ppolyzero_6 = '0' ELSE
      zeroconst_1;

  cpoly11xor <= c11poly XOR ppolymulresult_6;

  
  next11cpoly <= cpoly11xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c11poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c11poly <= next11cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_5_process;


  
  cpolyzero_5 <= '1' WHEN c11poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_5 <= '1' WHEN nextlcount >= to_unsigned(16#A#, 4) ELSE
      '0';

  
  lregmux_11 <= lgreatereq_5 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_5 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_5 <= lregmux_11;
      END IF;
    END IF;
  END PROCESS lshiftreg_5_process;


  lreginv_5 <=  NOT lreg_5;

  mulzero_5 <= cpolyzero_5 OR (lreginv_5 OR syndromezeroshiftreg_10);

  
  mulresult_5 <= alogout_5 WHEN mulzero_5 = '0' ELSE
      zeroconst_1;

  logaddreduced_6 <= resize(resize(logadd_6, 10) - resize(moduloconst, 10), 8);

  logslice_6 <= logadd_6(7 DOWNTO 0);

  cpolylog_6 <= cpolylogtable_table_data_28(to_integer(c10poly));

  logadd_6 <= resize(cpolylog_6, 9) + resize(syndromeshiftreg_9, 9);

  
  logwrap_6 <= '1' WHEN logadd_6 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_6 <= logslice_6 WHEN logwrap_6 = '0' ELSE
      logaddreduced_6;

  alogout_6 <= alogtable_table_data_26(to_integer(modresult_6));

  ppolyreduced_7 <= resize(resize(ppolylogadd_7, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_7 <= ppolylogadd_7(7 DOWNTO 0);

  ppolylog_7 <= cpolylogtable_table_data_30(to_integer(p10polyshift));

  ppolylogadd_7 <= resize(ppolylog_7, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_7 <= '1' WHEN ppolylogadd_7 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_7 <= ppolylogslice_7 WHEN ppolylogwrap_7 = '0' ELSE
      ppolyreduced_7;

  ppolyalogout_7 <= alogtable_table_data_28(to_integer(ppolymodresult_7));

  
  next9ppoly <= c9poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p9poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p9poly <= next9ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_6_process;


  
  p10polyshift <= p9poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p8poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_7 <= '1' WHEN p10polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_7 <= ppolyalogout_7 WHEN ppolyzero_7 = '0' ELSE
      zeroconst_1;

  cpoly10xor <= c10poly XOR ppolymulresult_7;

  
  next10cpoly <= cpoly10xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c10poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c10poly <= next10cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_6_process;


  
  cpolyzero_6 <= '1' WHEN c10poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_6 <= '1' WHEN nextlcount >= to_unsigned(16#9#, 4) ELSE
      '0';

  
  lregmux_13 <= lgreatereq_6 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_6 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_6 <= lregmux_13;
      END IF;
    END IF;
  END PROCESS lshiftreg_6_process;


  lreginv_6 <=  NOT lreg_6;

  mulzero_6 <= cpolyzero_6 OR (lreginv_6 OR syndromezeroshiftreg_9);

  
  mulresult_6 <= alogout_6 WHEN mulzero_6 = '0' ELSE
      zeroconst_1;

  logaddreduced_7 <= resize(resize(logadd_7, 10) - resize(moduloconst, 10), 8);

  logslice_7 <= logadd_7(7 DOWNTO 0);

  cpolylog_7 <= cpolylogtable_table_data_32(to_integer(c9poly));

  logadd_7 <= resize(cpolylog_7, 9) + resize(syndromeshiftreg_8, 9);

  
  logwrap_7 <= '1' WHEN logadd_7 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_7 <= logslice_7 WHEN logwrap_7 = '0' ELSE
      logaddreduced_7;

  alogout_7 <= alogtable_table_data_30(to_integer(modresult_7));

  ppolyreduced_8 <= resize(resize(ppolylogadd_8, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_8 <= ppolylogadd_8(7 DOWNTO 0);

  ppolylog_8 <= cpolylogtable_table_data_34(to_integer(p9polyshift));

  ppolylogadd_8 <= resize(ppolylog_8, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_8 <= '1' WHEN ppolylogadd_8 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_8 <= ppolylogslice_8 WHEN ppolylogwrap_8 = '0' ELSE
      ppolyreduced_8;

  ppolyalogout_8 <= alogtable_table_data_32(to_integer(ppolymodresult_8));

  
  next8ppoly <= c8poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p8poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p8poly <= next8ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_7_process;


  
  p9polyshift <= p8poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p7poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_8 <= '1' WHEN p9polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_8 <= ppolyalogout_8 WHEN ppolyzero_8 = '0' ELSE
      zeroconst_1;

  cpoly9xor <= c9poly XOR ppolymulresult_8;

  
  next9cpoly <= cpoly9xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c9poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c9poly <= next9cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_7_process;


  
  cpolyzero_7 <= '1' WHEN c9poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_7 <= '1' WHEN nextlcount >= to_unsigned(16#8#, 4) ELSE
      '0';

  
  lregmux_15 <= lgreatereq_7 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_7 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_7 <= lregmux_15;
      END IF;
    END IF;
  END PROCESS lshiftreg_7_process;


  lreginv_7 <=  NOT lreg_7;

  mulzero_7 <= cpolyzero_7 OR (lreginv_7 OR syndromezeroshiftreg_8);

  
  mulresult_7 <= alogout_7 WHEN mulzero_7 = '0' ELSE
      zeroconst_1;

  logaddreduced_8 <= resize(resize(logadd_8, 10) - resize(moduloconst, 10), 8);

  logslice_8 <= logadd_8(7 DOWNTO 0);

  cpolylog_8 <= cpolylogtable_table_data_36(to_integer(c8poly));

  logadd_8 <= resize(cpolylog_8, 9) + resize(syndromeshiftreg_7, 9);

  
  logwrap_8 <= '1' WHEN logadd_8 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_8 <= logslice_8 WHEN logwrap_8 = '0' ELSE
      logaddreduced_8;

  alogout_8 <= alogtable_table_data_34(to_integer(modresult_8));

  ppolyreduced_9 <= resize(resize(ppolylogadd_9, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_9 <= ppolylogadd_9(7 DOWNTO 0);

  ppolylog_9 <= cpolylogtable_table_data_38(to_integer(p8polyshift));

  ppolylogadd_9 <= resize(ppolylog_9, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_9 <= '1' WHEN ppolylogadd_9 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_9 <= ppolylogslice_9 WHEN ppolylogwrap_9 = '0' ELSE
      ppolyreduced_9;

  ppolyalogout_9 <= alogtable_table_data_36(to_integer(ppolymodresult_9));

  
  next7ppoly <= c7poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p7poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p7poly <= next7ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_8_process;


  
  p8polyshift <= p7poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p6poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_9 <= '1' WHEN p8polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_9 <= ppolyalogout_9 WHEN ppolyzero_9 = '0' ELSE
      zeroconst_1;

  cpoly8xor <= c8poly XOR ppolymulresult_9;

  
  next8cpoly <= cpoly8xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c8poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c8poly <= next8cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_8_process;


  
  cpolyzero_8 <= '1' WHEN c8poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_8 <= '1' WHEN nextlcount >= to_unsigned(16#7#, 4) ELSE
      '0';

  
  lregmux_17 <= lgreatereq_8 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_8 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_8 <= lregmux_17;
      END IF;
    END IF;
  END PROCESS lshiftreg_8_process;


  lreginv_8 <=  NOT lreg_8;

  mulzero_8 <= cpolyzero_8 OR (lreginv_8 OR syndromezeroshiftreg_7);

  
  mulresult_8 <= alogout_8 WHEN mulzero_8 = '0' ELSE
      zeroconst_1;

  logaddreduced_9 <= resize(resize(logadd_9, 10) - resize(moduloconst, 10), 8);

  logslice_9 <= logadd_9(7 DOWNTO 0);

  cpolylog_9 <= cpolylogtable_table_data_40(to_integer(c7poly));

  logadd_9 <= resize(cpolylog_9, 9) + resize(syndromeshiftreg_6, 9);

  
  logwrap_9 <= '1' WHEN logadd_9 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_9 <= logslice_9 WHEN logwrap_9 = '0' ELSE
      logaddreduced_9;

  alogout_9 <= alogtable_table_data_38(to_integer(modresult_9));

  ppolyreduced_10 <= resize(resize(ppolylogadd_10, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_10 <= ppolylogadd_10(7 DOWNTO 0);

  ppolylog_10 <= cpolylogtable_table_data_42(to_integer(p7polyshift));

  ppolylogadd_10 <= resize(ppolylog_10, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_10 <= '1' WHEN ppolylogadd_10 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_10 <= ppolylogslice_10 WHEN ppolylogwrap_10 = '0' ELSE
      ppolyreduced_10;

  ppolyalogout_10 <= alogtable_table_data_40(to_integer(ppolymodresult_10));

  
  next6ppoly <= c6poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p6poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p6poly <= next6ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_9_process;


  
  p7polyshift <= p6poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p5poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_10 <= '1' WHEN p7polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_10 <= ppolyalogout_10 WHEN ppolyzero_10 = '0' ELSE
      zeroconst_1;

  cpoly7xor <= c7poly XOR ppolymulresult_10;

  
  next7cpoly <= cpoly7xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c7poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c7poly <= next7cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_9_process;


  
  cpolyzero_9 <= '1' WHEN c7poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_9 <= '1' WHEN nextlcount >= to_unsigned(16#6#, 4) ELSE
      '0';

  
  lregmux_19 <= lgreatereq_9 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_9 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_9 <= lregmux_19;
      END IF;
    END IF;
  END PROCESS lshiftreg_9_process;


  lreginv_9 <=  NOT lreg_9;

  mulzero_9 <= cpolyzero_9 OR (lreginv_9 OR syndromezeroshiftreg_6);

  
  mulresult_9 <= alogout_9 WHEN mulzero_9 = '0' ELSE
      zeroconst_1;

  logaddreduced_10 <= resize(resize(logadd_10, 10) - resize(moduloconst, 10), 8);

  logslice_10 <= logadd_10(7 DOWNTO 0);

  cpolylog_10 <= cpolylogtable_table_data_44(to_integer(c6poly));

  logadd_10 <= resize(cpolylog_10, 9) + resize(syndromeshiftreg_5, 9);

  
  logwrap_10 <= '1' WHEN logadd_10 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_10 <= logslice_10 WHEN logwrap_10 = '0' ELSE
      logaddreduced_10;

  alogout_10 <= alogtable_table_data_42(to_integer(modresult_10));

  ppolyreduced_11 <= resize(resize(ppolylogadd_11, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_11 <= ppolylogadd_11(7 DOWNTO 0);

  ppolylog_11 <= cpolylogtable_table_data_46(to_integer(p6polyshift));

  ppolylogadd_11 <= resize(ppolylog_11, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_11 <= '1' WHEN ppolylogadd_11 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_11 <= ppolylogslice_11 WHEN ppolylogwrap_11 = '0' ELSE
      ppolyreduced_11;

  ppolyalogout_11 <= alogtable_table_data_44(to_integer(ppolymodresult_11));

  
  next5ppoly <= c5poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p5poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p5poly <= next5ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_10_process;


  
  p6polyshift <= p5poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p4poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_11 <= '1' WHEN p6polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_11 <= ppolyalogout_11 WHEN ppolyzero_11 = '0' ELSE
      zeroconst_1;

  cpoly6xor <= c6poly XOR ppolymulresult_11;

  
  next6cpoly <= cpoly6xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c6poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c6poly <= next6cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_10_process;


  
  cpolyzero_10 <= '1' WHEN c6poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_10 <= '1' WHEN nextlcount >= to_unsigned(16#5#, 4) ELSE
      '0';

  
  lregmux_21 <= lgreatereq_10 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_10 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_10 <= lregmux_21;
      END IF;
    END IF;
  END PROCESS lshiftreg_10_process;


  lreginv_10 <=  NOT lreg_10;

  mulzero_10 <= cpolyzero_10 OR (lreginv_10 OR syndromezeroshiftreg_5);

  
  mulresult_10 <= alogout_10 WHEN mulzero_10 = '0' ELSE
      zeroconst_1;

  logaddreduced_11 <= resize(resize(logadd_11, 10) - resize(moduloconst, 10), 8);

  logslice_11 <= logadd_11(7 DOWNTO 0);

  cpolylog_11 <= cpolylogtable_table_data_48(to_integer(c5poly));

  logadd_11 <= resize(cpolylog_11, 9) + resize(syndromeshiftreg_4, 9);

  
  logwrap_11 <= '1' WHEN logadd_11 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_11 <= logslice_11 WHEN logwrap_11 = '0' ELSE
      logaddreduced_11;

  alogout_11 <= alogtable_table_data_46(to_integer(modresult_11));

  ppolyreduced_12 <= resize(resize(ppolylogadd_12, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_12 <= ppolylogadd_12(7 DOWNTO 0);

  ppolylog_12 <= cpolylogtable_table_data_50(to_integer(p5polyshift));

  ppolylogadd_12 <= resize(ppolylog_12, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_12 <= '1' WHEN ppolylogadd_12 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_12 <= ppolylogslice_12 WHEN ppolylogwrap_12 = '0' ELSE
      ppolyreduced_12;

  ppolyalogout_12 <= alogtable_table_data_48(to_integer(ppolymodresult_12));

  
  next4ppoly <= c4poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p4poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p4poly <= next4ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_11_process;


  
  p5polyshift <= p4poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p3poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_12 <= '1' WHEN p5polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_12 <= ppolyalogout_12 WHEN ppolyzero_12 = '0' ELSE
      zeroconst_1;

  cpoly5xor <= c5poly XOR ppolymulresult_12;

  
  next5cpoly <= cpoly5xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c5poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c5poly <= next5cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_11_process;


  
  cpolyzero_11 <= '1' WHEN c5poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_11 <= '1' WHEN nextlcount >= to_unsigned(16#4#, 4) ELSE
      '0';

  
  lregmux_23 <= lgreatereq_11 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_11 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_11 <= lregmux_23;
      END IF;
    END IF;
  END PROCESS lshiftreg_11_process;


  lreginv_11 <=  NOT lreg_11;

  mulzero_11 <= cpolyzero_11 OR (lreginv_11 OR syndromezeroshiftreg_4);

  
  mulresult_11 <= alogout_11 WHEN mulzero_11 = '0' ELSE
      zeroconst_1;

  logaddreduced_12 <= resize(resize(logadd_12, 10) - resize(moduloconst, 10), 8);

  logslice_12 <= logadd_12(7 DOWNTO 0);

  cpolylog_12 <= cpolylogtable_table_data_52(to_integer(c4poly));

  logadd_12 <= resize(cpolylog_12, 9) + resize(syndromeshiftreg_3, 9);

  
  logwrap_12 <= '1' WHEN logadd_12 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_12 <= logslice_12 WHEN logwrap_12 = '0' ELSE
      logaddreduced_12;

  alogout_12 <= alogtable_table_data_50(to_integer(modresult_12));

  ppolyreduced_13 <= resize(resize(ppolylogadd_13, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_13 <= ppolylogadd_13(7 DOWNTO 0);

  ppolylog_13 <= cpolylogtable_table_data_54(to_integer(p4polyshift));

  ppolylogadd_13 <= resize(ppolylog_13, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_13 <= '1' WHEN ppolylogadd_13 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_13 <= ppolylogslice_13 WHEN ppolylogwrap_13 = '0' ELSE
      ppolyreduced_13;

  ppolyalogout_13 <= alogtable_table_data_52(to_integer(ppolymodresult_13));

  
  next3ppoly <= c3poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p3poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p3poly <= next3ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_12_process;


  
  p4polyshift <= p3poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p2poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_13 <= '1' WHEN p4polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_13 <= ppolyalogout_13 WHEN ppolyzero_13 = '0' ELSE
      zeroconst_1;

  cpoly4xor <= c4poly XOR ppolymulresult_13;

  
  next4cpoly <= cpoly4xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c4poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c4poly <= next4cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_12_process;


  
  cpolyzero_12 <= '1' WHEN c4poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_12 <= '1' WHEN nextlcount >= to_unsigned(16#3#, 4) ELSE
      '0';

  
  lregmux_25 <= lgreatereq_12 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_12 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_12 <= lregmux_25;
      END IF;
    END IF;
  END PROCESS lshiftreg_12_process;


  lreginv_12 <=  NOT lreg_12;

  mulzero_12 <= cpolyzero_12 OR (lreginv_12 OR syndromezeroshiftreg_3);

  
  mulresult_12 <= alogout_12 WHEN mulzero_12 = '0' ELSE
      zeroconst_1;

  logaddreduced_13 <= resize(resize(logadd_13, 10) - resize(moduloconst, 10), 8);

  logslice_13 <= logadd_13(7 DOWNTO 0);

  cpolylog_13 <= cpolylogtable_table_data_56(to_integer(c3poly));

  logadd_13 <= resize(cpolylog_13, 9) + resize(syndromeshiftreg_2, 9);

  
  logwrap_13 <= '1' WHEN logadd_13 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_13 <= logslice_13 WHEN logwrap_13 = '0' ELSE
      logaddreduced_13;

  alogout_13 <= alogtable_table_data_54(to_integer(modresult_13));

  ppolyreduced_14 <= resize(resize(ppolylogadd_14, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_14 <= ppolylogadd_14(7 DOWNTO 0);

  ppolylog_14 <= cpolylogtable_table_data_58(to_integer(p3polyshift));

  ppolylogadd_14 <= resize(ppolylog_14, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_14 <= '1' WHEN ppolylogadd_14 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_14 <= ppolylogslice_14 WHEN ppolylogwrap_14 = '0' ELSE
      ppolyreduced_14;

  ppolyalogout_14 <= alogtable_table_data_56(to_integer(ppolymodresult_14));

  
  next2ppoly <= c2poly WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  ppolyreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p2poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p2poly <= next2ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_13_process;


  
  p3polyshift <= p2poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      p1poly WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_14 <= '1' WHEN p3polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_14 <= ppolyalogout_14 WHEN ppolyzero_14 = '0' ELSE
      zeroconst_1;

  cpoly3xor <= c3poly XOR ppolymulresult_14;

  
  next3cpoly <= cpoly3xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c3poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c3poly <= next3cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_13_process;


  
  cpolyzero_13 <= '1' WHEN c3poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_13 <= '1' WHEN nextlcount >= to_unsigned(16#2#, 4) ELSE
      '0';

  
  lregmux_27 <= lgreatereq_13 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_13 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_13 <= lregmux_27;
      END IF;
    END IF;
  END PROCESS lshiftreg_13_process;


  lreginv_13 <=  NOT lreg_13;

  mulzero_13 <= cpolyzero_13 OR (lreginv_13 OR syndromezeroshiftreg_2);

  
  mulresult_13 <= alogout_13 WHEN mulzero_13 = '0' ELSE
      zeroconst_1;

  logaddreduced_14 <= resize(resize(logadd_14, 10) - resize(moduloconst, 10), 8);

  logslice_14 <= logadd_14(7 DOWNTO 0);

  cpolylog_14 <= cpolylogtable_table_data_60(to_integer(c2poly));

  logadd_14 <= resize(cpolylog_14, 9) + resize(syndromeshiftreg_1, 9);

  
  logwrap_14 <= '1' WHEN logadd_14 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_14 <= logslice_14 WHEN logwrap_14 = '0' ELSE
      logaddreduced_14;

  alogout_14 <= alogtable_table_data_58(to_integer(modresult_14));

  ppolyreduced_15 <= resize(resize(ppolylogadd_15, 10) - resize(moduloconst, 10), 8);

  ppolylogslice_15 <= ppolylogadd_15(7 DOWNTO 0);

  correctionreduced <= resize(resize(correctionadd, 10) - resize(moduloconst, 10), 8);

  correctionslice <= correctionadd(7 DOWNTO 0);

  
  dmmux <= dvalue WHEN endindelay3 = '0' ELSE
      oneconst_1;

  dmreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dm <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        dm <= dmmux;
      END IF;
    END IF;
  END PROCESS dmreg_process;


  dmlog <= cpolylogtable_table_data_62(to_integer(dm));

  dminvlog <= moduloconst - dmlog;

  dvaluelog <= cpolylogtable_table_data_64(to_integer(dvalue));

  correctionadd <= resize(dvaluelog, 9) + resize(dminvlog, 9);

  
  correctionwrap <= '1' WHEN correctionadd > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  correctionlog <= correctionslice WHEN correctionwrap = '0' ELSE
      correctionreduced;

  ppolylog_15 <= cpolylogtable_table_data_66(to_integer(p2polyshift));

  ppolylogadd_15 <= resize(ppolylog_15, 9) + resize(correctionlog, 9);

  
  ppolylogwrap_15 <= '1' WHEN ppolylogadd_15 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  ppolymodresult_15 <= ppolylogslice_15 WHEN ppolylogwrap_15 = '0' ELSE
      ppolyreduced_15;

  ppolyalogout_15 <= alogtable_table_data_60(to_integer(ppolymodresult_15));

  
  next1ppoly <= c1poly WHEN endindelay3 = '0' ELSE
      oneconst_1;

  ppolyreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p1poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        p1poly <= next1ppoly;
      END IF;
    END IF;
  END PROCESS ppolyreg_14_process;


  shiftadd <= currentshift + countone_1;

  
  nextshift <= shiftadd WHEN lregen = '0' ELSE
      countzero_1;

  
  dzero <= '1' WHEN dvalue = to_unsigned(16#00#, 8) ELSE
      '0';

  currentshiften <= cpolyen OR dzero;

  currentshiftreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      currentshift <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND currentshiften = '1' THEN
        currentshift <= nextshift;
      END IF;
    END IF;
  END PROCESS currentshiftreg_process;


  
  p2polyshift <= p1poly WHEN currentshift = to_unsigned(16#0#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#1#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#2#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#3#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#4#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#5#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#6#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#7#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#8#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#9#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#A#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#B#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#C#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#D#, 4) ELSE
      zeroconst_1 WHEN currentshift = to_unsigned(16#E#, 4) ELSE
      zeroconst_1;

  
  ppolyzero_15 <= '1' WHEN p2polyshift = to_unsigned(16#00#, 8) ELSE
      '0';

  
  ppolymulresult_15 <= ppolyalogout_15 WHEN ppolyzero_15 = '0' ELSE
      zeroconst_1;

  cpoly2xor <= c2poly XOR ppolymulresult_15;

  
  next2cpoly <= cpoly2xor WHEN endindelay3 = '0' ELSE
      zeroconst_1;

  cpolyreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c2poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c2poly <= next2cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_14_process;


  
  cpolyzero_14 <= '1' WHEN c2poly = to_unsigned(16#00#, 8) ELSE
      '0';

  
  lgreatereq_14 <= '1' WHEN nextlcount >= to_unsigned(16#1#, 4) ELSE
      '0';

  
  lregmux_29 <= lgreatereq_14 WHEN endindelay3 = '0' ELSE
      zerobit;

  lshiftreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_14 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_14 <= lregmux_29;
      END IF;
    END IF;
  END PROCESS lshiftreg_14_process;


  lreginv_14 <=  NOT lreg_14;

  mulzero_14 <= cpolyzero_14 OR (lreginv_14 OR syndromezeroshiftreg_1);

  
  mulresult_14 <= alogout_14 WHEN mulzero_14 = '0' ELSE
      zeroconst_1;

  logaddreduced_15 <= resize(resize(logadd_15, 10) - resize(moduloconst, 10), 8);

  logslice_15 <= logadd_15(7 DOWNTO 0);

  cpolylog_15 <= cpolylogtable_table_data_68(to_integer(c1poly));

  logadd_15 <= resize(cpolylog_15, 9) + resize(syndromeshiftreg, 9);

  
  logwrap_15 <= '1' WHEN logadd_15 > to_unsigned(16#0FF#, 9) ELSE
      '0';

  
  modresult_15 <= logslice_15 WHEN logwrap_15 = '0' ELSE
      logaddreduced_15;

  alogout_15 <= alogtable_table_data_62(to_integer(modresult_15));

  
  cpolyzero_15 <= '1' WHEN c1poly = to_unsigned(16#00#, 8) ELSE
      '0';

  lcountsub <= fsmonecount - lcount;

  
  nextlcount <= lcountsub WHEN endindelay3 = '0' ELSE
      countzero_1;

  lcountreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lcount <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lcount <= nextlcount;
      END IF;
    END IF;
  END PROCESS lcountreg_process;


  lcountextend <= resize(lcount, 5);

  twolcount <= lcountextend sll 1;

  
  relop_relop1_3 <= '1' WHEN twolcount < resize(fsmonecount, 5) ELSE
      '0';

  updatelength <= dupdate AND relop_relop1_3;

  lregen <= endindelay3 OR updatelength;

  lshiftreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      lreg_15 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND lregen = '1' THEN
        lreg_15 <= onebit;
      END IF;
    END IF;
  END PROCESS lshiftreg_15_process;


  lreginv_15 <=  NOT lreg_15;

  mulzero_15 <= cpolyzero_15 OR (lreginv_15 OR syndromezeroshiftreg);

  
  mulresult_15 <= alogout_15 WHEN mulzero_15 = '0' ELSE
      zeroconst_1;

  xortree <= mulresult_15 XOR mulresult_14;

  xortree_1 <= xortree XOR mulresult_13;

  xortree_2 <= xortree_1 XOR mulresult_12;

  xortree_3 <= xortree_2 XOR mulresult_11;

  xortree_4 <= xortree_3 XOR mulresult_10;

  xortree_5 <= xortree_4 XOR mulresult_9;

  xortree_6 <= xortree_5 XOR mulresult_8;

  xortree_7 <= xortree_6 XOR mulresult_7;

  xortree_8 <= xortree_7 XOR mulresult_6;

  xortree_9 <= xortree_8 XOR mulresult_5;

  xortree_10 <= xortree_9 XOR mulresult_4;

  xortree_11 <= xortree_10 XOR mulresult_3;

  xortree_12 <= xortree_11 XOR mulresult_2;

  xortree_13 <= xortree_12 XOR mulresult_1;

  dvalue <= xortree_13 XOR mulresult;

  
  dnotzero <= '1' WHEN dvalue /= to_unsigned(16#00#, 8) ELSE
      '0';

  dupdate <= fsmrun AND dnotzero;

  cpolyen <= endindelay3 OR dupdate;

  cpolyreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      c1poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND cpolyen = '1' THEN
        c1poly <= next1cpoly;
      END IF;
    END IF;
  END PROCESS cpolyreg_15_process;


  errlocpolyreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc1poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc1poly <= c1poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_process;


  
  chienreg1prenext <= chien1prereg WHEN convdone = '0' ELSE
      errloc1poly;

  chienprereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien1prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien1prereg <= chienreg1prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_process;


  
  chienreg1next <= chien1reg WHEN chienprerundone = '0' ELSE
      chien1prereg;

  chienreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien1reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien1reg <= chienreg1next;
      END IF;
    END IF;
  END PROCESS chienreg_process;


  errlocpolyreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc2poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc2poly <= c2poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_1_process;


  chien2prepowertable <= gfomegaprepowertable_data(to_integer(chien2prereg));

  
  chienreg2prenext <= chien2prepowertable WHEN convdone = '0' ELSE
      errloc2poly;

  chienprereg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien2prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien2prereg <= chienreg2prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_1_process;


  chien2powertable <= gfomegapowertable_data(to_integer(chien2reg));

  
  chienreg2next <= chien2powertable WHEN chienprerundone = '0' ELSE
      chien2prereg;

  chienreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien2reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien2reg <= chienreg2next;
      END IF;
    END IF;
  END PROCESS chienreg_1_process;


  chien2xortree <= chien1reg XOR chien2reg;

  errlocpolyreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc3poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc3poly <= c3poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_2_process;


  chien3prepowertable <= gfomegaprepowertable_data_2(to_integer(chien3prereg));

  
  chienreg3prenext <= chien3prepowertable WHEN convdone = '0' ELSE
      errloc3poly;

  chienprereg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien3prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien3prereg <= chienreg3prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_2_process;


  chien3powertable <= gfomegapowertable_data_2(to_integer(chien3reg));

  
  chienreg3next <= chien3powertable WHEN chienprerundone = '0' ELSE
      chien3prereg;

  chienreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien3reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien3reg <= chienreg3next;
      END IF;
    END IF;
  END PROCESS chienreg_2_process;


  chien3xortree <= chien2xortree XOR chien3reg;

  errlocpolyreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc4poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc4poly <= c4poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_3_process;


  chien4prepowertable <= gfomegaprepowertable_data_4(to_integer(chien4prereg));

  
  chienreg4prenext <= chien4prepowertable WHEN convdone = '0' ELSE
      errloc4poly;

  chienprereg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien4prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien4prereg <= chienreg4prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_3_process;


  chien4powertable <= gfomegapowertable_data_4(to_integer(chien4reg));

  
  chienreg4next <= chien4powertable WHEN chienprerundone = '0' ELSE
      chien4prereg;

  chienreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien4reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien4reg <= chienreg4next;
      END IF;
    END IF;
  END PROCESS chienreg_3_process;


  chien4xortree <= chien3xortree XOR chien4reg;

  errlocpolyreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc5poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc5poly <= c5poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_4_process;


  chien5prepowertable <= gfomegaprepowertable_data_6(to_integer(chien5prereg));

  
  chienreg5prenext <= chien5prepowertable WHEN convdone = '0' ELSE
      errloc5poly;

  chienprereg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien5prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien5prereg <= chienreg5prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_4_process;


  chien5powertable <= gfomegapowertable_data_6(to_integer(chien5reg));

  
  chienreg5next <= chien5powertable WHEN chienprerundone = '0' ELSE
      chien5prereg;

  chienreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien5reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien5reg <= chienreg5next;
      END IF;
    END IF;
  END PROCESS chienreg_4_process;


  chien5xortree <= chien4xortree XOR chien5reg;

  errlocpolyreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc6poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc6poly <= c6poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_5_process;


  chien6prepowertable <= gfomegaprepowertable_data_8(to_integer(chien6prereg));

  
  chienreg6prenext <= chien6prepowertable WHEN convdone = '0' ELSE
      errloc6poly;

  chienprereg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien6prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien6prereg <= chienreg6prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_5_process;


  chien6powertable <= gfomegapowertable_data_8(to_integer(chien6reg));

  
  chienreg6next <= chien6powertable WHEN chienprerundone = '0' ELSE
      chien6prereg;

  chienreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien6reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien6reg <= chienreg6next;
      END IF;
    END IF;
  END PROCESS chienreg_5_process;


  chien6xortree <= chien5xortree XOR chien6reg;

  errlocpolyreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc7poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc7poly <= c7poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_6_process;


  chien7prepowertable <= gfomegaprepowertable_data_10(to_integer(chien7prereg));

  
  chienreg7prenext <= chien7prepowertable WHEN convdone = '0' ELSE
      errloc7poly;

  chienprereg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien7prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien7prereg <= chienreg7prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_6_process;


  chien7powertable <= gfomegapowertable_data_10(to_integer(chien7reg));

  
  chienreg7next <= chien7powertable WHEN chienprerundone = '0' ELSE
      chien7prereg;

  chienreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien7reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien7reg <= chienreg7next;
      END IF;
    END IF;
  END PROCESS chienreg_6_process;


  chien7xortree <= chien6xortree XOR chien7reg;

  errlocpolyreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc8poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc8poly <= c8poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_7_process;


  chien8prepowertable <= gfomegaprepowertable_data_12(to_integer(chien8prereg));

  
  chienreg8prenext <= chien8prepowertable WHEN convdone = '0' ELSE
      errloc8poly;

  chienprereg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien8prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien8prereg <= chienreg8prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_7_process;


  chien8powertable <= gfomegapowertable_data_12(to_integer(chien8reg));

  
  chienreg8next <= chien8powertable WHEN chienprerundone = '0' ELSE
      chien8prereg;

  chienreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien8reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien8reg <= chienreg8next;
      END IF;
    END IF;
  END PROCESS chienreg_7_process;


  chien8xortree <= chien7xortree XOR chien8reg;

  errlocpolyreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc9poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc9poly <= c9poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_8_process;


  chien9prepowertable <= gfomegaprepowertable_data_14(to_integer(chien9prereg));

  
  chienreg9prenext <= chien9prepowertable WHEN convdone = '0' ELSE
      errloc9poly;

  chienprereg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien9prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien9prereg <= chienreg9prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_8_process;


  chien9powertable <= gfomegapowertable_data_14(to_integer(chien9reg));

  
  chienreg9next <= chien9powertable WHEN chienprerundone = '0' ELSE
      chien9prereg;

  chienreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien9reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien9reg <= chienreg9next;
      END IF;
    END IF;
  END PROCESS chienreg_8_process;


  chien9xortree <= chien8xortree XOR chien9reg;

  errlocpolyreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc10poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc10poly <= c10poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_9_process;


  chien10prepowertable <= gfomegaprepowertable_data_16(to_integer(chien10prereg));

  
  chienreg10prenext <= chien10prepowertable WHEN convdone = '0' ELSE
      errloc10poly;

  chienprereg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien10prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien10prereg <= chienreg10prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_9_process;


  chien10powertable <= gfomegapowertable_data_16(to_integer(chien10reg));

  
  chienreg10next <= chien10powertable WHEN chienprerundone = '0' ELSE
      chien10prereg;

  chienreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien10reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien10reg <= chienreg10next;
      END IF;
    END IF;
  END PROCESS chienreg_9_process;


  chien10xortree <= chien9xortree XOR chien10reg;

  errlocpolyreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc11poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc11poly <= c11poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_10_process;


  chien11prepowertable <= gfomegaprepowertable_data_18(to_integer(chien11prereg));

  
  chienreg11prenext <= chien11prepowertable WHEN convdone = '0' ELSE
      errloc11poly;

  chienprereg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien11prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien11prereg <= chienreg11prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_10_process;


  chien11powertable <= gfomegapowertable_data_18(to_integer(chien11reg));

  
  chienreg11next <= chien11powertable WHEN chienprerundone = '0' ELSE
      chien11prereg;

  chienreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien11reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien11reg <= chienreg11next;
      END IF;
    END IF;
  END PROCESS chienreg_10_process;


  chien11xortree <= chien10xortree XOR chien11reg;

  errlocpolyreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc12poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc12poly <= c12poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_11_process;


  chien12prepowertable <= gfomegaprepowertable_data_20(to_integer(chien12prereg));

  
  chienreg12prenext <= chien12prepowertable WHEN convdone = '0' ELSE
      errloc12poly;

  chienprereg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien12prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien12prereg <= chienreg12prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_11_process;


  chien12powertable <= gfomegapowertable_data_20(to_integer(chien12reg));

  
  chienreg12next <= chien12powertable WHEN chienprerundone = '0' ELSE
      chien12prereg;

  chienreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien12reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien12reg <= chienreg12next;
      END IF;
    END IF;
  END PROCESS chienreg_11_process;


  chien12xortree <= chien11xortree XOR chien12reg;

  errlocpolyreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc13poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc13poly <= c13poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_12_process;


  chien13prepowertable <= gfomegaprepowertable_data_22(to_integer(chien13prereg));

  
  chienreg13prenext <= chien13prepowertable WHEN convdone = '0' ELSE
      errloc13poly;

  chienprereg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien13prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien13prereg <= chienreg13prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_12_process;


  chien13powertable <= gfomegapowertable_data_22(to_integer(chien13reg));

  
  chienreg13next <= chien13powertable WHEN chienprerundone = '0' ELSE
      chien13prereg;

  chienreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien13reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien13reg <= chienreg13next;
      END IF;
    END IF;
  END PROCESS chienreg_12_process;


  chien13xortree <= chien12xortree XOR chien13reg;

  errlocpolyreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc14poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc14poly <= c14poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_13_process;


  chien14prepowertable <= gfomegaprepowertable_data_24(to_integer(chien14prereg));

  
  chienreg14prenext <= chien14prepowertable WHEN convdone = '0' ELSE
      errloc14poly;

  chienprereg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien14prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien14prereg <= chienreg14prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_13_process;


  chien14powertable <= gfomegapowertable_data_24(to_integer(chien14reg));

  
  chienreg14next <= chien14powertable WHEN chienprerundone = '0' ELSE
      chien14prereg;

  chienreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien14reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien14reg <= chienreg14next;
      END IF;
    END IF;
  END PROCESS chienreg_13_process;


  chien14xortree <= chien13xortree XOR chien14reg;

  errlocpolyreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc15poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc15poly <= c15poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_14_process;


  chien15prepowertable <= gfomegaprepowertable_data_26(to_integer(chien15prereg));

  
  chienreg15prenext <= chien15prepowertable WHEN convdone = '0' ELSE
      errloc15poly;

  chienprereg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien15prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien15prereg <= chienreg15prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_14_process;


  chien15powertable <= gfomegapowertable_data_26(to_integer(chien15reg));

  
  chienreg15next <= chien15powertable WHEN chienprerundone = '0' ELSE
      chien15prereg;

  chienreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien15reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien15reg <= chienreg15next;
      END IF;
    END IF;
  END PROCESS chienreg_14_process;


  chien15xortree <= chien14xortree XOR chien15reg;

  errlocpolyreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errloc16poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errloc16poly <= c16poly;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_15_process;


  chien16prepowertable <= gfomegaprepowertable_data_28(to_integer(chien16prereg));

  
  chienreg16prenext <= chien16prepowertable WHEN convdone = '0' ELSE
      errloc16poly;

  chienprereg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien16prereg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        chien16prereg <= chienreg16prenext;
      END IF;
    END IF;
  END PROCESS chienprereg_15_process;


  chien16powertable <= gfomegapowertable_data_28(to_integer(chien16reg));

  
  chienreg16next <= chien16powertable WHEN chienprerundone = '0' ELSE
      chien16prereg;

  chienreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien16reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        chien16reg <= chienreg16next;
      END IF;
    END IF;
  END PROCESS chienreg_15_process;


  chienvalue <= chien15xortree XOR chien16reg;

  
  chienzero <= '1' WHEN chienvalue = to_unsigned(16#00#, 8) ELSE
      '0';

  chienzeroroot <= chienrun AND chienzero;

  loadroots <= chienzeroroot OR chienprerundone;

  
  errload1next <= zerobit WHEN chienprerundone = '0' ELSE
      onebit;

  errldreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload1reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload1reg <= errload1next;
      END IF;
    END IF;
  END PROCESS errldreg_process;


  chien1root <= chienzeroroot AND errload1reg;

  
  errlocation1next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation1reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien1root = '1' THEN
        errlocation1reg <= errlocation1next;
      END IF;
    END IF;
  END PROCESS errlocreg_process;


  errlocpipereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe1reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe1reg <= errlocation1reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_process;


  
  errload2next <= errload1reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload2reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload2reg <= errload2next;
      END IF;
    END IF;
  END PROCESS errldreg_1_process;


  chien2root <= chienzeroroot AND errload2reg;

  
  errlocation2next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation2reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien2root = '1' THEN
        errlocation2reg <= errlocation2next;
      END IF;
    END IF;
  END PROCESS errlocreg_1_process;


  errlocpipereg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe2reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe2reg <= errlocation2reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_1_process;


  
  errload3next <= errload2reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload3reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload3reg <= errload3next;
      END IF;
    END IF;
  END PROCESS errldreg_2_process;


  chien3root <= chienzeroroot AND errload3reg;

  
  errlocation3next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation3reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien3root = '1' THEN
        errlocation3reg <= errlocation3next;
      END IF;
    END IF;
  END PROCESS errlocreg_2_process;


  errlocpipereg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe3reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe3reg <= errlocation3reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_2_process;


  
  errload4next <= errload3reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload4reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload4reg <= errload4next;
      END IF;
    END IF;
  END PROCESS errldreg_3_process;


  chien4root <= chienzeroroot AND errload4reg;

  
  errlocation4next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation4reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien4root = '1' THEN
        errlocation4reg <= errlocation4next;
      END IF;
    END IF;
  END PROCESS errlocreg_3_process;


  errlocpipereg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe4reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe4reg <= errlocation4reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_3_process;


  
  errload5next <= errload4reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload5reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload5reg <= errload5next;
      END IF;
    END IF;
  END PROCESS errldreg_4_process;


  chien5root <= chienzeroroot AND errload5reg;

  
  errlocation5next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation5reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien5root = '1' THEN
        errlocation5reg <= errlocation5next;
      END IF;
    END IF;
  END PROCESS errlocreg_4_process;


  errlocpipereg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe5reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe5reg <= errlocation5reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_4_process;


  
  errload6next <= errload5reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload6reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload6reg <= errload6next;
      END IF;
    END IF;
  END PROCESS errldreg_5_process;


  chien6root <= chienzeroroot AND errload6reg;

  
  errlocation6next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation6reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien6root = '1' THEN
        errlocation6reg <= errlocation6next;
      END IF;
    END IF;
  END PROCESS errlocreg_5_process;


  errlocpipereg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe6reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe6reg <= errlocation6reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_5_process;


  
  errload7next <= errload6reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload7reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload7reg <= errload7next;
      END IF;
    END IF;
  END PROCESS errldreg_6_process;


  chien7root <= chienzeroroot AND errload7reg;

  
  errlocation7next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation7reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien7root = '1' THEN
        errlocation7reg <= errlocation7next;
      END IF;
    END IF;
  END PROCESS errlocreg_6_process;


  errlocpipereg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe7reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe7reg <= errlocation7reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_6_process;


  
  errload8next <= errload7reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errldreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errload8reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errload8reg <= errload8next;
      END IF;
    END IF;
  END PROCESS errldreg_7_process;


  chien8root <= chienzeroroot AND errload8reg;

  
  errlocation8next <= chienpower_1 WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errlocreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocation8reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien8root = '1' THEN
        errlocation8reg <= errlocation8next;
      END IF;
    END IF;
  END PROCESS errlocreg_7_process;


  errlocpipereg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocationpipe8reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errlocationpipe8reg <= errlocation8reg;
      END IF;
    END IF;
  END PROCESS errlocpipereg_7_process;


  fulllength <= currentlength + paritylength;

  erroffset <=  NOT fulllength;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  nrootscount_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      nroots <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF chienprerundone = '1' THEN 
          nroots <= to_unsigned(16#0#, 4);
        ELSIF chienzeroroot = '1' THEN 
          nroots <= nroots + to_unsigned(16#1#, 4);
        END IF;
      END IF;
    END IF;
  END PROCESS nrootscount_process;


  nrootsregproc_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      nrootsreg <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        nrootsreg <= nroots;
      END IF;
    END IF;
  END PROCESS nrootsregproc_process;


  nrootsstartEnb_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      nrootsstart <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND prestartout = '1' THEN
        nrootsstart <= nrootsreg;
      END IF;
    END IF;
  END PROCESS nrootsstartEnb_process;


  oneconst1 <= to_unsigned(16#01#, 8);

  errlocpolylenreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errlocpolylen <= to_unsigned(16#0#, 4);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        errlocpolylen <= lcount;
      END IF;
    END IF;
  END PROCESS errlocpolylenreg_process;


  errlocpolysub <= errlocpolylen - countone_1;

  
  relop_relop1_4 <= '1' WHEN errlocpolysub > nrootsreg ELSE
      '0';

  errcountuncheck <=  NOT relop_relop1_4;

  reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errcountuncheckSampled <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND prestartcurbank = '1' THEN
        errcountuncheckSampled <= errcountuncheck;
      END IF;
    END IF;
  END PROCESS reg_process;


  
  relop_relop1_5 <= '1' WHEN errlocpolylen > nrootsreg ELSE
      '0';

  errNotCorrectableFlg <=  NOT relop_relop1_5;

  
  relop_relop1_6 <= '1' WHEN errcountvalue = resize(nrootsstart, 8) ELSE
      '0';

  errcount <= errcountvalue - oneconst_1;

  
  errlocation <= errlocationpipe1reg WHEN errcount = to_unsigned(16#00#, 8) ELSE
      errlocationpipe2reg WHEN errcount = to_unsigned(16#01#, 8) ELSE
      errlocationpipe3reg WHEN errcount = to_unsigned(16#02#, 8) ELSE
      errlocationpipe4reg WHEN errcount = to_unsigned(16#03#, 8) ELSE
      errlocationpipe5reg WHEN errcount = to_unsigned(16#04#, 8) ELSE
      errlocationpipe6reg WHEN errcount = to_unsigned(16#05#, 8) ELSE
      errlocationpipe7reg WHEN errcount = to_unsigned(16#06#, 8) ELSE
      errlocationpipe8reg;

  finalerrloc <= errlocation - erroffset;

  
  relop_relop1_7 <= '1' WHEN finalerrloc = ramrdcount ELSE
      '0';

  errcountreset <= relop_relop1_7 AND relop_relop1_6;

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 15
  errcounter_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errcountvalue <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF errcountreset = '1' THEN 
          errcountvalue <= to_unsigned(16#00#, 8);
        ELSIF prestartcurbank = '1' THEN 
          errcountvalue <= oneconst1;
        ELSIF erradvance = '1' THEN 
          IF errcountvalue >= to_unsigned(16#0F#, 8) THEN 
            errcountvalue <= to_unsigned(16#00#, 8);
          ELSE 
            errcountvalue <= errcountvalue + to_unsigned(16#01#, 8);
          END IF;
        END IF;
      END IF;
    END IF;
  END PROCESS errcounter_process;


  
  errcountgrtzero <= '1' WHEN errcountvalue > to_unsigned(16#00#, 8) ELSE
      '0';

  erradvance <= errNotCorrectableFlg AND (errcountuncheckSampled AND (errcountgrtzero AND relop_relop1_7));

  
  omega1comp <= '1' WHEN omegacount = to_unsigned(16#0#, 4) ELSE
      '0';

  omega1update <= omega1comp AND convrun;

  omega1en <= fsmdone OR omega1update;

  
  omega2comp <= '1' WHEN omegacount = to_unsigned(16#1#, 4) ELSE
      '0';

  omega2update <= omega2comp AND convrun;

  omega2en <= fsmdone OR omega2update;

  
  omega3comp <= '1' WHEN omegacount = to_unsigned(16#2#, 4) ELSE
      '0';

  omega3update <= omega3comp AND convrun;

  omega3en <= fsmdone OR omega3update;

  
  omega4comp <= '1' WHEN omegacount = to_unsigned(16#3#, 4) ELSE
      '0';

  omega4update <= omega4comp AND convrun;

  omega4en <= fsmdone OR omega4update;

  
  omega5comp <= '1' WHEN omegacount = to_unsigned(16#4#, 4) ELSE
      '0';

  omega5update <= omega5comp AND convrun;

  omega5en <= fsmdone OR omega5update;

  
  omega6comp <= '1' WHEN omegacount = to_unsigned(16#5#, 4) ELSE
      '0';

  omega6update <= omega6comp AND convrun;

  omega6en <= fsmdone OR omega6update;

  
  omega7comp <= '1' WHEN omegacount = to_unsigned(16#6#, 4) ELSE
      '0';

  omega7update <= omega7comp AND convrun;

  omega7en <= fsmdone OR omega7update;

  
  omega8comp <= '1' WHEN omegacount = to_unsigned(16#7#, 4) ELSE
      '0';

  omega8update <= omega8comp AND convrun;

  omega8en <= fsmdone OR omega8update;

  
  omega9comp <= '1' WHEN omegacount = to_unsigned(16#8#, 4) ELSE
      '0';

  omega9update <= omega9comp AND convrun;

  omega9en <= fsmdone OR omega9update;

  
  omega10comp <= '1' WHEN omegacount = to_unsigned(16#9#, 4) ELSE
      '0';

  omega10update <= omega10comp AND convrun;

  omega10en <= fsmdone OR omega10update;

  
  omega11comp <= '1' WHEN omegacount = to_unsigned(16#A#, 4) ELSE
      '0';

  omega11update <= omega11comp AND convrun;

  omega11en <= fsmdone OR omega11update;

  
  omega12comp <= '1' WHEN omegacount = to_unsigned(16#B#, 4) ELSE
      '0';

  omega12update <= omega12comp AND convrun;

  omega12en <= fsmdone OR omega12update;

  
  omega13comp <= '1' WHEN omegacount = to_unsigned(16#C#, 4) ELSE
      '0';

  omega13update <= omega13comp AND convrun;

  omega13en <= fsmdone OR omega13update;

  
  omega14comp <= '1' WHEN omegacount = to_unsigned(16#D#, 4) ELSE
      '0';

  omega14update <= omega14comp AND convrun;

  omega14en <= fsmdone OR omega14update;

  
  omega15comp <= '1' WHEN omegacount = to_unsigned(16#E#, 4) ELSE
      '0';

  omega15update <= omega15comp AND convrun;

  omega15en <= fsmdone OR omega15update;

  
  omega16comp <= '1' WHEN omegacount = to_unsigned(16#F#, 4) ELSE
      '0';

  omega16update <= omega16comp AND convrun;

  omega16en <= fsmdone OR omega16update;

  chiensynreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien1synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien1synreg <= finalsyndromereg_15;
      END IF;
    END IF;
  END PROCESS chiensynreg_process;


  chiensynreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien2synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien2synreg <= finalsyndromereg_14;
      END IF;
    END IF;
  END PROCESS chiensynreg_1_process;


  chiensynreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien3synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien3synreg <= finalsyndromereg_13;
      END IF;
    END IF;
  END PROCESS chiensynreg_2_process;


  chiensynreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien4synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien4synreg <= finalsyndromereg_12;
      END IF;
    END IF;
  END PROCESS chiensynreg_3_process;


  chiensynreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien5synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien5synreg <= finalsyndromereg_11;
      END IF;
    END IF;
  END PROCESS chiensynreg_4_process;


  chiensynreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien6synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien6synreg <= finalsyndromereg_10;
      END IF;
    END IF;
  END PROCESS chiensynreg_5_process;


  chiensynreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien7synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien7synreg <= finalsyndromereg_9;
      END IF;
    END IF;
  END PROCESS chiensynreg_6_process;


  chiensynreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien8synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien8synreg <= finalsyndromereg_8;
      END IF;
    END IF;
  END PROCESS chiensynreg_7_process;


  chiensynreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien9synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien9synreg <= finalsyndromereg_7;
      END IF;
    END IF;
  END PROCESS chiensynreg_8_process;


  chiensynreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien10synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien10synreg <= finalsyndromereg_6;
      END IF;
    END IF;
  END PROCESS chiensynreg_9_process;


  chiensynreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien11synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien11synreg <= finalsyndromereg_5;
      END IF;
    END IF;
  END PROCESS chiensynreg_10_process;


  chiensynreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien12synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien12synreg <= finalsyndromereg_4;
      END IF;
    END IF;
  END PROCESS chiensynreg_11_process;


  chiensynreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien13synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien13synreg <= finalsyndromereg_3;
      END IF;
    END IF;
  END PROCESS chiensynreg_12_process;


  chiensynreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien14synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien14synreg <= finalsyndromereg_2;
      END IF;
    END IF;
  END PROCESS chiensynreg_13_process;


  chiensynreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien15synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien15synreg <= finalsyndromereg_1;
      END IF;
    END IF;
  END PROCESS chiensynreg_14_process;


  chiensynreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      chien16synreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        chien16synreg <= finalsyndromereg;
      END IF;
    END IF;
  END PROCESS chiensynreg_15_process;


  
  convsyndrome <= chien1synreg WHEN convcount = to_unsigned(16#0#, 4) ELSE
      chien2synreg WHEN convcount = to_unsigned(16#1#, 4) ELSE
      chien3synreg WHEN convcount = to_unsigned(16#2#, 4) ELSE
      chien4synreg WHEN convcount = to_unsigned(16#3#, 4) ELSE
      chien5synreg WHEN convcount = to_unsigned(16#4#, 4) ELSE
      chien6synreg WHEN convcount = to_unsigned(16#5#, 4) ELSE
      chien7synreg WHEN convcount = to_unsigned(16#6#, 4) ELSE
      chien8synreg WHEN convcount = to_unsigned(16#7#, 4) ELSE
      chien9synreg WHEN convcount = to_unsigned(16#8#, 4) ELSE
      chien10synreg WHEN convcount = to_unsigned(16#9#, 4) ELSE
      chien11synreg WHEN convcount = to_unsigned(16#A#, 4) ELSE
      chien12synreg WHEN convcount = to_unsigned(16#B#, 4) ELSE
      chien13synreg WHEN convcount = to_unsigned(16#C#, 4) ELSE
      chien14synreg WHEN convcount = to_unsigned(16#D#, 4) ELSE
      chien15synreg WHEN convcount = to_unsigned(16#E#, 4) ELSE
      chien16synreg;

  
  convsynzero <= '1' WHEN convsyndrome = to_unsigned(16#00#, 8) ELSE
      '0';

  errlocaddr <= omegacount - convcount;

  
  converrloc <= errloc1poly WHEN errlocaddr = to_unsigned(16#0#, 4) ELSE
      errloc2poly WHEN errlocaddr = to_unsigned(16#1#, 4) ELSE
      errloc3poly WHEN errlocaddr = to_unsigned(16#2#, 4) ELSE
      errloc4poly WHEN errlocaddr = to_unsigned(16#3#, 4) ELSE
      errloc5poly WHEN errlocaddr = to_unsigned(16#4#, 4) ELSE
      errloc6poly WHEN errlocaddr = to_unsigned(16#5#, 4) ELSE
      errloc7poly WHEN errlocaddr = to_unsigned(16#6#, 4) ELSE
      errloc8poly WHEN errlocaddr = to_unsigned(16#7#, 4) ELSE
      errloc9poly WHEN errlocaddr = to_unsigned(16#8#, 4) ELSE
      errloc10poly WHEN errlocaddr = to_unsigned(16#9#, 4) ELSE
      errloc11poly WHEN errlocaddr = to_unsigned(16#A#, 4) ELSE
      errloc12poly WHEN errlocaddr = to_unsigned(16#B#, 4) ELSE
      errloc13poly WHEN errlocaddr = to_unsigned(16#C#, 4) ELSE
      errloc14poly WHEN errlocaddr = to_unsigned(16#D#, 4) ELSE
      errloc15poly WHEN errlocaddr = to_unsigned(16#E#, 4) ELSE
      errloc16poly;

  convsyndromelog <= cpolylogtable_table_data_70(to_integer(convsyndrome));

  converrloclog <= cpolylogtable_table_data_72(to_integer(converrloc));

  convlogadd <= resize(convsyndromelog, 9) + resize(converrloclog, 9);

  
  convlogwrap <= '1' WHEN convlogadd > to_unsigned(16#0FF#, 9) ELSE
      '0';

  convlogslice <= convlogadd(7 DOWNTO 0);

  
  converrzero <= '1' WHEN converrloc = to_unsigned(16#00#, 8) ELSE
      '0';

  convzero <= convsynzero OR converrzero;

  convlogaddreduced <= resize(resize(convlogadd, 10) - resize(moduloconst, 10), 8);

  
  convmodresult <= convlogslice WHEN convlogwrap = '0' ELSE
      convlogaddreduced;

  convalogout <= alogtable_table_data_64(to_integer(convmodresult));

  
  convresult <= convalogout WHEN convzero = '0' ELSE
      zeroconst_1;

  
  omega16next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega16poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega16en = '1' THEN
        omega16poly <= omega16next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_16_process;


  
  omega15next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega15poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega15en = '1' THEN
        omega15poly <= omega15next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_17_process;


  
  omega14next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega14poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega14en = '1' THEN
        omega14poly <= omega14next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_18_process;


  
  omega13next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega13poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega13en = '1' THEN
        omega13poly <= omega13next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_19_process;


  
  omega12next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega12poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega12en = '1' THEN
        omega12poly <= omega12next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_20_process;


  
  omega11next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega11poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega11en = '1' THEN
        omega11poly <= omega11next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_21_process;


  
  omega10next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega10poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega10en = '1' THEN
        omega10poly <= omega10next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_22_process;


  
  omega9next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega9poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega9en = '1' THEN
        omega9poly <= omega9next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_23_process;


  
  omega8next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega8poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega8en = '1' THEN
        omega8poly <= omega8next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_24_process;


  
  omega7next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega7poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega7en = '1' THEN
        omega7poly <= omega7next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_25_process;


  
  omega6next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega6poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega6en = '1' THEN
        omega6poly <= omega6next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_26_process;


  
  omega5next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_27_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega5poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega5en = '1' THEN
        omega5poly <= omega5next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_27_process;


  
  omega4next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_28_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega4poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega4en = '1' THEN
        omega4poly <= omega4next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_28_process;


  
  omega3next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_29_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega3poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega3en = '1' THEN
        omega3poly <= omega3next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_29_process;


  
  omega2next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_30_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega2poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega2en = '1' THEN
        omega2poly <= omega2next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_30_process;


  
  omegapolymux <= omega1poly WHEN omegacount = to_unsigned(16#0#, 4) ELSE
      omega2poly WHEN omegacount = to_unsigned(16#1#, 4) ELSE
      omega3poly WHEN omegacount = to_unsigned(16#2#, 4) ELSE
      omega4poly WHEN omegacount = to_unsigned(16#3#, 4) ELSE
      omega5poly WHEN omegacount = to_unsigned(16#4#, 4) ELSE
      omega6poly WHEN omegacount = to_unsigned(16#5#, 4) ELSE
      omega7poly WHEN omegacount = to_unsigned(16#6#, 4) ELSE
      omega8poly WHEN omegacount = to_unsigned(16#7#, 4) ELSE
      omega9poly WHEN omegacount = to_unsigned(16#8#, 4) ELSE
      omega10poly WHEN omegacount = to_unsigned(16#9#, 4) ELSE
      omega11poly WHEN omegacount = to_unsigned(16#A#, 4) ELSE
      omega12poly WHEN omegacount = to_unsigned(16#B#, 4) ELSE
      omega13poly WHEN omegacount = to_unsigned(16#C#, 4) ELSE
      omega14poly WHEN omegacount = to_unsigned(16#D#, 4) ELSE
      omega15poly WHEN omegacount = to_unsigned(16#E#, 4) ELSE
      omega16poly;

  convxor <= omegapolymux XOR convresult;

  
  omega1next <= convxor WHEN fsmdone = '0' ELSE
      zeroconst_1;

  errlocpolyreg_31_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega1poly <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omega1en = '1' THEN
        omega1poly <= omega1next;
      END IF;
    END IF;
  END PROCESS errlocpolyreg_31_process;


  
  omega1prepowernext <= omega1prepowerreg WHEN convdone = '0' ELSE
      omega1poly;

  omegaprepowerreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega1prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega1prepowerreg <= omega1prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_process;


  
  omega1powernext <= omega1powerreg WHEN chienprerundone = '0' ELSE
      omega1prepowerreg;

  omegapowerreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega1powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega1powerreg <= omega1powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_process;


  omega2prepowertable <= gfomegaprepowertable_data_30(to_integer(omega2prepowerreg));

  
  omega2prepowernext <= omega2prepowertable WHEN convdone = '0' ELSE
      omega2poly;

  omegaprepowerreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega2prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega2prepowerreg <= omega2prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_1_process;


  omega2powertable <= gfomegapowertable_data_30(to_integer(omega2powerreg));

  
  omega2powernext <= omega2powertable WHEN chienprerundone = '0' ELSE
      omega2prepowerreg;

  omegapowerreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega2powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega2powerreg <= omega2powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_1_process;


  omega2xortree <= omega1powerreg XOR omega2powerreg;

  omega3prepowertable <= gfomegaprepowertable_data_32(to_integer(omega3prepowerreg));

  
  omega3prepowernext <= omega3prepowertable WHEN convdone = '0' ELSE
      omega3poly;

  omegaprepowerreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega3prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega3prepowerreg <= omega3prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_2_process;


  omega3powertable <= gfomegapowertable_data_32(to_integer(omega3powerreg));

  
  omega3powernext <= omega3powertable WHEN chienprerundone = '0' ELSE
      omega3prepowerreg;

  omegapowerreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega3powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega3powerreg <= omega3powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_2_process;


  omega3xortree <= omega2xortree XOR omega3powerreg;

  omega4prepowertable <= gfomegaprepowertable_data_34(to_integer(omega4prepowerreg));

  
  omega4prepowernext <= omega4prepowertable WHEN convdone = '0' ELSE
      omega4poly;

  omegaprepowerreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega4prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega4prepowerreg <= omega4prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_3_process;


  omega4powertable <= gfomegapowertable_data_34(to_integer(omega4powerreg));

  
  omega4powernext <= omega4powertable WHEN chienprerundone = '0' ELSE
      omega4prepowerreg;

  omegapowerreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega4powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega4powerreg <= omega4powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_3_process;


  omega4xortree <= omega3xortree XOR omega4powerreg;

  omega5prepowertable <= gfomegaprepowertable_data_36(to_integer(omega5prepowerreg));

  
  omega5prepowernext <= omega5prepowertable WHEN convdone = '0' ELSE
      omega5poly;

  omegaprepowerreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega5prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega5prepowerreg <= omega5prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_4_process;


  omega5powertable <= gfomegapowertable_data_36(to_integer(omega5powerreg));

  
  omega5powernext <= omega5powertable WHEN chienprerundone = '0' ELSE
      omega5prepowerreg;

  omegapowerreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega5powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega5powerreg <= omega5powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_4_process;


  omega5xortree <= omega4xortree XOR omega5powerreg;

  omega6prepowertable <= gfomegaprepowertable_data_38(to_integer(omega6prepowerreg));

  
  omega6prepowernext <= omega6prepowertable WHEN convdone = '0' ELSE
      omega6poly;

  omegaprepowerreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega6prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega6prepowerreg <= omega6prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_5_process;


  omega6powertable <= gfomegapowertable_data_38(to_integer(omega6powerreg));

  
  omega6powernext <= omega6powertable WHEN chienprerundone = '0' ELSE
      omega6prepowerreg;

  omegapowerreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega6powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega6powerreg <= omega6powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_5_process;


  omega6xortree <= omega5xortree XOR omega6powerreg;

  omega7prepowertable <= gfomegaprepowertable_data_40(to_integer(omega7prepowerreg));

  
  omega7prepowernext <= omega7prepowertable WHEN convdone = '0' ELSE
      omega7poly;

  omegaprepowerreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega7prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega7prepowerreg <= omega7prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_6_process;


  omega7powertable <= gfomegapowertable_data_40(to_integer(omega7powerreg));

  
  omega7powernext <= omega7powertable WHEN chienprerundone = '0' ELSE
      omega7prepowerreg;

  omegapowerreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega7powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega7powerreg <= omega7powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_6_process;


  omega7xortree <= omega6xortree XOR omega7powerreg;

  omega8prepowertable <= gfomegaprepowertable_data_42(to_integer(omega8prepowerreg));

  
  omega8prepowernext <= omega8prepowertable WHEN convdone = '0' ELSE
      omega8poly;

  omegaprepowerreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega8prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega8prepowerreg <= omega8prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_7_process;


  omega8powertable <= gfomegapowertable_data_42(to_integer(omega8powerreg));

  
  omega8powernext <= omega8powertable WHEN chienprerundone = '0' ELSE
      omega8prepowerreg;

  omegapowerreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega8powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega8powerreg <= omega8powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_7_process;


  omega8xortree <= omega7xortree XOR omega8powerreg;

  omega9prepowertable <= gfomegaprepowertable_data_44(to_integer(omega9prepowerreg));

  
  omega9prepowernext <= omega9prepowertable WHEN convdone = '0' ELSE
      omega9poly;

  omegaprepowerreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega9prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega9prepowerreg <= omega9prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_8_process;


  omega9powertable <= gfomegapowertable_data_44(to_integer(omega9powerreg));

  
  omega9powernext <= omega9powertable WHEN chienprerundone = '0' ELSE
      omega9prepowerreg;

  omegapowerreg_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega9powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega9powerreg <= omega9powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_8_process;


  omega9xortree <= omega8xortree XOR omega9powerreg;

  omega10prepowertable <= gfomegaprepowertable_data_46(to_integer(omega10prepowerreg));

  
  omega10prepowernext <= omega10prepowertable WHEN convdone = '0' ELSE
      omega10poly;

  omegaprepowerreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega10prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega10prepowerreg <= omega10prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_9_process;


  omega10powertable <= gfomegapowertable_data_46(to_integer(omega10powerreg));

  
  omega10powernext <= omega10powertable WHEN chienprerundone = '0' ELSE
      omega10prepowerreg;

  omegapowerreg_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega10powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega10powerreg <= omega10powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_9_process;


  omega10xortree <= omega9xortree XOR omega10powerreg;

  omega11prepowertable <= gfomegaprepowertable_data_48(to_integer(omega11prepowerreg));

  
  omega11prepowernext <= omega11prepowertable WHEN convdone = '0' ELSE
      omega11poly;

  omegaprepowerreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega11prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega11prepowerreg <= omega11prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_10_process;


  omega11powertable <= gfomegapowertable_data_48(to_integer(omega11powerreg));

  
  omega11powernext <= omega11powertable WHEN chienprerundone = '0' ELSE
      omega11prepowerreg;

  omegapowerreg_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega11powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega11powerreg <= omega11powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_10_process;


  omega11xortree <= omega10xortree XOR omega11powerreg;

  omega12prepowertable <= gfomegaprepowertable_data_50(to_integer(omega12prepowerreg));

  
  omega12prepowernext <= omega12prepowertable WHEN convdone = '0' ELSE
      omega12poly;

  omegaprepowerreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega12prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega12prepowerreg <= omega12prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_11_process;


  omega12powertable <= gfomegapowertable_data_50(to_integer(omega12powerreg));

  
  omega12powernext <= omega12powertable WHEN chienprerundone = '0' ELSE
      omega12prepowerreg;

  omegapowerreg_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega12powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega12powerreg <= omega12powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_11_process;


  omega12xortree <= omega11xortree XOR omega12powerreg;

  omega13prepowertable <= gfomegaprepowertable_data_52(to_integer(omega13prepowerreg));

  
  omega13prepowernext <= omega13prepowertable WHEN convdone = '0' ELSE
      omega13poly;

  omegaprepowerreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega13prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega13prepowerreg <= omega13prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_12_process;


  omega13powertable <= gfomegapowertable_data_52(to_integer(omega13powerreg));

  
  omega13powernext <= omega13powertable WHEN chienprerundone = '0' ELSE
      omega13prepowerreg;

  omegapowerreg_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega13powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega13powerreg <= omega13powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_12_process;


  omega13xortree <= omega12xortree XOR omega13powerreg;

  omega14prepowertable <= gfomegaprepowertable_data_54(to_integer(omega14prepowerreg));

  
  omega14prepowernext <= omega14prepowertable WHEN convdone = '0' ELSE
      omega14poly;

  omegaprepowerreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega14prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega14prepowerreg <= omega14prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_13_process;


  omega14powertable <= gfomegapowertable_data_54(to_integer(omega14powerreg));

  
  omega14powernext <= omega14powertable WHEN chienprerundone = '0' ELSE
      omega14prepowerreg;

  omegapowerreg_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega14powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega14powerreg <= omega14powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_13_process;


  omega14xortree <= omega13xortree XOR omega14powerreg;

  omega15prepowertable <= gfomegaprepowertable_data_56(to_integer(omega15prepowerreg));

  
  omega15prepowernext <= omega15prepowertable WHEN convdone = '0' ELSE
      omega15poly;

  omegaprepowerreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega15prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega15prepowerreg <= omega15prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_14_process;


  omega15powertable <= gfomegapowertable_data_56(to_integer(omega15powerreg));

  
  omega15powernext <= omega15powertable WHEN chienprerundone = '0' ELSE
      omega15prepowerreg;

  omegapowerreg_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega15powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega15powerreg <= omega15powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_14_process;


  omega15xortree <= omega14xortree XOR omega15powerreg;

  omega16prepowertable <= gfomegaprepowertable_data_58(to_integer(omega16prepowerreg));

  
  omega16prepowernext <= omega16prepowertable WHEN convdone = '0' ELSE
      omega16poly;

  omegaprepowerreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega16prepowerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegaprepoweren = '1' THEN
        omega16prepowerreg <= omega16prepowernext;
      END IF;
    END IF;
  END PROCESS omegaprepowerreg_15_process;


  omega16powertable <= gfomegapowertable_data_58(to_integer(omega16powerreg));

  
  omega16powernext <= omega16powertable WHEN chienprerundone = '0' ELSE
      omega16prepowerreg;

  omegapowerreg_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      omega16powerreg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND omegapoweren = '1' THEN
        omega16powerreg <= omega16powernext;
      END IF;
    END IF;
  END PROCESS omegapowerreg_15_process;


  omegavalue <= omega15xortree XOR omega16powerreg;

  
  omegazero <= '1' WHEN omegavalue = to_unsigned(16#00#, 8) ELSE
      '0';

  deriv4xortree <= chien2reg XOR chien4reg;

  deriv6xortree <= deriv4xortree XOR chien6reg;

  deriv8xortree <= deriv6xortree XOR chien8reg;

  deriv10xortree <= deriv8xortree XOR chien10reg;

  deriv12xortree <= deriv10xortree XOR chien12reg;

  deriv14xortree <= deriv12xortree XOR chien14reg;

  derivvalue <= deriv14xortree XOR chien16reg;

  derivvaluelog <= cpolylogtable_table_data_74(to_integer(derivvalue));

  derivvaluelog_1 <= moduloconst - derivvaluelog;

  omegavaluelog <= cpolylogtable_table_data_76(to_integer(omegavalue));

  correctlogadd <= resize(derivvaluelog_1, 9) + resize(omegavaluelog, 9);

  
  correctlogwrap <= '1' WHEN correctlogadd > to_unsigned(16#0FF#, 9) ELSE
      '0';

  correctlogslice <= correctlogadd(7 DOWNTO 0);

  chiennotzero <=  NOT chienzero;

  correctzero <= omegazero OR chiennotzero;

  correctlogaddreduced <= resize(resize(correctlogadd, 10) - resize(moduloconst, 10), 8);

  
  correctmodresult <= correctlogslice WHEN correctlogwrap = '0' ELSE
      correctlogaddreduced;

  correctalogout <= alogtable_table_data_66(to_integer(correctmodresult));

  
  correctresult <= correctalogout WHEN correctzero = '0' ELSE
      zeroconst_1;

  
  errvalue1next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue1reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien1root = '1' THEN
        errvalue1reg <= errvalue1next;
      END IF;
    END IF;
  END PROCESS errvalreg_process;


  errvalpipereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe1reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe1reg <= errvalue1reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_process;


  
  errvalue2next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue2reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien2root = '1' THEN
        errvalue2reg <= errvalue2next;
      END IF;
    END IF;
  END PROCESS errvalreg_1_process;


  errvalpipereg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe2reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe2reg <= errvalue2reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_1_process;


  
  errvalue3next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue3reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien3root = '1' THEN
        errvalue3reg <= errvalue3next;
      END IF;
    END IF;
  END PROCESS errvalreg_2_process;


  errvalpipereg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe3reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe3reg <= errvalue3reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_2_process;


  
  errvalue4next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue4reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien4root = '1' THEN
        errvalue4reg <= errvalue4next;
      END IF;
    END IF;
  END PROCESS errvalreg_3_process;


  errvalpipereg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe4reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe4reg <= errvalue4reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_3_process;


  
  errvalue5next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue5reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien5root = '1' THEN
        errvalue5reg <= errvalue5next;
      END IF;
    END IF;
  END PROCESS errvalreg_4_process;


  errvalpipereg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe5reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe5reg <= errvalue5reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_4_process;


  
  errvalue6next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue6reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien6root = '1' THEN
        errvalue6reg <= errvalue6next;
      END IF;
    END IF;
  END PROCESS errvalreg_5_process;


  errvalpipereg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe6reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe6reg <= errvalue6reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_5_process;


  
  errvalue7next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue7reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien7root = '1' THEN
        errvalue7reg <= errvalue7next;
      END IF;
    END IF;
  END PROCESS errvalreg_6_process;


  errvalpipereg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe7reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe7reg <= errvalue7reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_6_process;


  
  errvalue8next <= correctresult WHEN chienprerundone = '0' ELSE
      zeroconst_1;

  errvalreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalue8reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chien8root = '1' THEN
        errvalue8reg <= errvalue8next;
      END IF;
    END IF;
  END PROCESS errvalreg_7_process;


  errvalpipereg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvaluepipe8reg <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvaluepipe8reg <= errvalue8reg;
      END IF;
    END IF;
  END PROCESS errvalpipereg_7_process;


  
  errvalue <= errvaluepipe1reg WHEN errcount = to_unsigned(16#00#, 8) ELSE
      errvaluepipe2reg WHEN errcount = to_unsigned(16#01#, 8) ELSE
      errvaluepipe3reg WHEN errcount = to_unsigned(16#02#, 8) ELSE
      errvaluepipe4reg WHEN errcount = to_unsigned(16#03#, 8) ELSE
      errvaluepipe5reg WHEN errcount = to_unsigned(16#04#, 8) ELSE
      errvaluepipe6reg WHEN errcount = to_unsigned(16#05#, 8) ELSE
      errvaluepipe7reg WHEN errcount = to_unsigned(16#06#, 8) ELSE
      errvaluepipe8reg;

  
  correctionnext <= zeroconst_1 WHEN erradvance = '0' ELSE
      errvalue;

  correctreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      correction <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        correction <= correctionnext;
      END IF;
    END IF;
  END PROCESS correctreg_process;


  predataout <= ramrddata_unsigned XOR correction;

  
  gatedataout <= zeroconst_1 WHEN p2dvout = '0' ELSE
      predataout;

  dataoutputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Output_RS_Decoder_HDL_Optimized_out_tmp <= to_unsigned(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Output_RS_Decoder_HDL_Optimized_out_tmp <= gatedataout;
      END IF;
    END IF;
  END PROCESS dataoutputreg_process;


  Integer_Output_RS_Decoder_HDL_Optimized_out <= std_logic_vector(Integer_Output_RS_Decoder_HDL_Optimized_out_tmp);

  start2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p2startout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        p2startout <= prestartout;
      END IF;
    END IF;
  END PROCESS start2reg_process;


  startoutputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Output_RS_Decoder_HDL_Optimized_startout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Output_RS_Decoder_HDL_Optimized_startout <= p2startout;
      END IF;
    END IF;
  END PROCESS startoutputreg_process;


  dvoutputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Output_RS_Decoder_HDL_Optimized_datavalidout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Output_RS_Decoder_HDL_Optimized_datavalidout <= p2dvout;
      END IF;
    END IF;
  END PROCESS dvoutputreg_process;


  
  errvalid1next <= onebit WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid1reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid1reg <= errvalid1next;
      END IF;
    END IF;
  END PROCESS errvldreg_process;


  
  errvalid2next <= errvalid1reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid2reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid2reg <= errvalid2next;
      END IF;
    END IF;
  END PROCESS errvldreg_1_process;


  
  errvalid3next <= errvalid2reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid3reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid3reg <= errvalid3next;
      END IF;
    END IF;
  END PROCESS errvldreg_2_process;


  
  errvalid4next <= errvalid3reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid4reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid4reg <= errvalid4next;
      END IF;
    END IF;
  END PROCESS errvldreg_3_process;


  
  errvalid5next <= errvalid4reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid5reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid5reg <= errvalid5next;
      END IF;
    END IF;
  END PROCESS errvldreg_4_process;


  
  errvalid6next <= errvalid5reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid6reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid6reg <= errvalid6next;
      END IF;
    END IF;
  END PROCESS errvldreg_5_process;


  
  errvalid7next <= errvalid6reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid7reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid7reg <= errvalid7next;
      END IF;
    END IF;
  END PROCESS errvldreg_6_process;


  
  errvalid8next <= errvalid7reg WHEN chienprerundone = '0' ELSE
      zerobit;

  errvldreg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalid8reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND loadroots = '1' THEN
        errvalid8reg <= errvalid8next;
      END IF;
    END IF;
  END PROCESS errvldreg_7_process;


  chienuncorrectedroot <= chienzeroroot AND errvalid8reg;

  prerootclken <= convdone OR chienprerun;

  chienpre2xortree <= chien1prereg XOR chien2prereg;

  chienpre3xortree <= chienpre2xortree XOR chien3prereg;

  chienpre4xortree <= chienpre3xortree XOR chien4prereg;

  chienpre5xortree <= chienpre4xortree XOR chien5prereg;

  chienpre6xortree <= chienpre5xortree XOR chien6prereg;

  chienpre7xortree <= chienpre6xortree XOR chien7prereg;

  chienpre8xortree <= chienpre7xortree XOR chien8prereg;

  chienpre9xortree <= chienpre8xortree XOR chien9prereg;

  chienpre10xortree <= chienpre9xortree XOR chien10prereg;

  chienpre11xortree <= chienpre10xortree XOR chien11prereg;

  chienpre12xortree <= chienpre11xortree XOR chien12prereg;

  chienpre13xortree <= chienpre12xortree XOR chien13prereg;

  chienpre14xortree <= chienpre13xortree XOR chien14prereg;

  chienpre15xortree <= chienpre14xortree XOR chien15prereg;

  chienprevalue <= chienpre15xortree XOR chien16prereg;

  
  chienprezero <= '1' WHEN chienprevalue = to_unsigned(16#00#, 8) ELSE
      '0';

  convdonedly1reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      convdonedelay1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        convdonedelay1 <= convdone;
      END IF;
    END IF;
  END PROCESS convdonedly1reg_process;


  notconvdonedelay1 <=  NOT convdonedelay1;

  
  syndrome1zero <= '1' WHEN syndromereg_15 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome2zero <= '1' WHEN syndromereg_14 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome3zero <= '1' WHEN syndromereg_13 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome4zero <= '1' WHEN syndromereg_12 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome5zero <= '1' WHEN syndromereg_11 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome6zero <= '1' WHEN syndromereg_10 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome7zero <= '1' WHEN syndromereg_9 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome8zero <= '1' WHEN syndromereg_8 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome9zero <= '1' WHEN syndromereg_7 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome10zero <= '1' WHEN syndromereg_6 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome11zero <= '1' WHEN syndromereg_5 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome12zero <= '1' WHEN syndromereg_4 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome13zero <= '1' WHEN syndromereg_3 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome14zero <= '1' WHEN syndromereg_2 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome15zero <= '1' WHEN syndromereg_1 = to_unsigned(16#00#, 8) ELSE
      '0';

  
  syndrome16zero <= '1' WHEN syndromereg = to_unsigned(16#00#, 8) ELSE
      '0';

  allsynzero <= syndrome16zero AND (syndrome15zero AND (syndrome14zero AND (syndrome13zero AND (syndrome12zero AND (syndrome11zero AND (syndrome10zero AND (syndrome9zero AND (syndrome8zero AND (syndrome7zero AND (syndrome6zero AND (syndrome5zero AND (syndrome4zero AND (syndrome3zero AND (syndrome1zero AND syndrome2zero))))))))))))));

  notallsynzero <=  NOT allsynzero;

  synhaserrreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      haserrorsreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND endindelay2 = '1' THEN
        haserrorsreg <= notallsynzero;
      END IF;
    END IF;
  END PROCESS synhaserrreg_process;


  synhaserrfsmreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      haserrorsfsmreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND fsmdone = '1' THEN
        haserrorsfsmreg <= haserrorsreg;
      END IF;
    END IF;
  END PROCESS synhaserrfsmreg_process;


  synhaserrconvreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      haserrorsconvreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND convdone = '1' THEN
        haserrorsconvreg <= haserrorsfsmreg;
      END IF;
    END IF;
  END PROCESS synhaserrconvreg_process;


  chienprezerogated <= haserrorsconvreg AND (chienprezero AND notconvdonedelay1);

  preroothold <= chienprezerogated OR uncorrectedpreroot;

  
  prerootswitch <= preroothold WHEN convdone = '0' ELSE
      zerobit;

  uncorrectedprereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      uncorrectedpreroot <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND prerootclken = '1' THEN
        uncorrectedpreroot <= prerootswitch;
      END IF;
    END IF;
  END PROCESS uncorrectedprereg_process;


  forceerrorreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      forceerrorroot <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chienprerundone = '1' THEN
        forceerrorroot <= uncorrectedpreroot;
      END IF;
    END IF;
  END PROCESS forceerrorreg_process;


  uncorrectedroot <= chienuncorrectedroot OR forceerrorroot;

  
  uncorrectednext <= onebit WHEN chienprerundone = '0' ELSE
      zerobit;

  uncorrectedreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      uncorrected <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND uncorrectedroot = '1' THEN
        uncorrected <= uncorrectednext;
      END IF;
    END IF;
  END PROCESS uncorrectedreg_process;


  errvldpipereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe1reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe1reg <= errvalid1reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_process;


  errvldpipereg_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe2reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe2reg <= errvalid2reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_1_process;


  errvldpipereg_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe3reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe3reg <= errvalid3reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_2_process;


  errvldpipereg_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe4reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe4reg <= errvalid4reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_3_process;


  errvldpipereg_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe5reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe5reg <= errvalid5reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_4_process;


  errvldpipereg_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe6reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe6reg <= errvalid6reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_5_process;


  errvldpipereg_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe7reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe7reg <= errvalid7reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_6_process;


  errvldpipereg_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      errvalidpipe8reg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        errvalidpipe8reg <= errvalid8reg;
      END IF;
    END IF;
  END PROCESS errvldpipereg_7_process;


  synhaserrchienprereg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      haserrorschienprereg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chienprerundone = '1' THEN
        haserrorschienprereg <= haserrorsconvreg;
      END IF;
    END IF;
  END PROCESS synhaserrchienprereg_process;


  synhaserrchienreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      haserrorschienreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND chiendone = '1' THEN
        haserrorschienreg <= haserrorschienprereg;
      END IF;
    END IF;
  END PROCESS synhaserrchienreg_process;


  anyerr <= haserrorschienreg OR (errvalidpipe8reg OR (errvalidpipe7reg OR (errvalidpipe6reg OR (errvalidpipe5reg OR (errvalidpipe4reg OR (errvalidpipe3reg OR (errvalidpipe1reg OR errvalidpipe2reg)))))));

  ordererr <= relop_relop1_4 AND anyerr;

  anyuncorrect <= uncorrected OR ordererr;

  anyuncreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      anyuncorrectreg <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' AND prestartout = '1' THEN
        anyuncorrectreg <= anyuncorrect;
      END IF;
    END IF;
  END PROCESS anyuncreg_process;


  preerrout <= anyuncorrectreg AND preendout;

  err2reg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      p2errout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        p2errout <= preerrout;
      END IF;
    END IF;
  END PROCESS err2reg_process;


  erroutputreg_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Integer_Output_RS_Decoder_HDL_Optimized_errout <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Integer_Output_RS_Decoder_HDL_Optimized_errout <= p2errout;
      END IF;
    END IF;
  END PROCESS erroutputreg_process;


  Integer_Output_RS_Decoder_HDL_Optimized_endout <= Integer_Output_RS_Decoder_HDL_Optimized_endout_1;

END rtl;

